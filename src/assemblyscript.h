#ifndef SRC_ASSEMBLYSCRIPT_H_GENERATED_
#define SRC_ASSEMBLYSCRIPT_H_GENERATED_
/* Automically generated by wasm2c */
#ifdef __cplusplus
extern "C" {
#endif

#include <stdint.h>

#include "wasm-rt.h"

#ifndef WASM_RT_MODULE_PREFIX
#define WASM_RT_MODULE_PREFIX
#endif

#define WASM_RT_PASTE_(x, y) x ## y
#define WASM_RT_PASTE(x, y) WASM_RT_PASTE_(x, y)
#define WASM_RT_ADD_PREFIX(x) WASM_RT_PASTE(WASM_RT_MODULE_PREFIX, x)

/* TODO(binji): only use stdint.h types in header */
typedef uint8_t u8;
typedef int8_t s8;
typedef uint16_t u16;
typedef int16_t s16;
typedef uint32_t u32;
typedef int32_t s32;
typedef uint64_t u64;
typedef int64_t s64;
typedef float f32;
typedef double f64;

extern void WASM_RT_ADD_PREFIX(init)(void);

/* import: 'env' 'abort' */
extern void (*Z_envZ_abortZ_viiii)(u32, u32, u32, u32);
/* import: 'env' 'mark' */
extern void (*Z_envZ_markZ_vi)(u32);
/* import: 'env' 'trace' */
extern void (*Z_envZ_traceZ_viiddddd)(u32, u32, f64, f64, f64, f64, f64);
/* import: 'binaryen' '_BinaryenUnreachable' */
extern u32 (*Z_binaryenZ__BinaryenUnreachableZ_ii)(u32);
/* import: 'binaryen' '_BinaryenExpressionGetId' */
extern u32 (*Z_binaryenZ__BinaryenExpressionGetIdZ_ii)(u32);
/* import: 'binaryen' '_BinaryenLocalSetIsTee' */
extern u32 (*Z_binaryenZ__BinaryenLocalSetIsTeeZ_ii)(u32);
/* import: 'binaryen' '_BinaryenLocalSetGetIndex' */
extern u32 (*Z_binaryenZ__BinaryenLocalSetGetIndexZ_ii)(u32);
/* import: 'binaryen' '_BinaryenLocalGetGetIndex' */
extern u32 (*Z_binaryenZ__BinaryenLocalGetGetIndexZ_ii)(u32);
/* import: 'binaryen' '_BinaryenLocalSetGetValue' */
extern u32 (*Z_binaryenZ__BinaryenLocalSetGetValueZ_ii)(u32);
/* import: 'binaryen' '_BinaryenGlobalGetGetName' */
extern u32 (*Z_binaryenZ__BinaryenGlobalGetGetNameZ_ii)(u32);
/* import: 'binaryen' '__i32_load8_u' */
extern u32 (*Z_binaryenZ___i32_load8_uZ_ii)(u32);
/* import: 'binaryen' '_BinaryenBinaryGetOp' */
extern u32 (*Z_binaryenZ__BinaryenBinaryGetOpZ_ii)(u32);
/* import: 'binaryen' '_BinaryenBinaryGetLeft' */
extern u32 (*Z_binaryenZ__BinaryenBinaryGetLeftZ_ii)(u32);
/* import: 'binaryen' '_BinaryenConstGetValueI32' */
extern u32 (*Z_binaryenZ__BinaryenConstGetValueI32Z_ii)(u32);
/* import: 'binaryen' '_BinaryenBinaryGetRight' */
extern u32 (*Z_binaryenZ__BinaryenBinaryGetRightZ_ii)(u32);
/* import: 'binaryen' '_BinaryenUnaryGetOp' */
extern u32 (*Z_binaryenZ__BinaryenUnaryGetOpZ_ii)(u32);
/* import: 'binaryen' '_BinaryenExpressionGetType' */
extern u32 (*Z_binaryenZ__BinaryenExpressionGetTypeZ_ii)(u32);
/* import: 'binaryen' '_BinaryenConstGetValueI64Low' */
extern u32 (*Z_binaryenZ__BinaryenConstGetValueI64LowZ_ii)(u32);
/* import: 'binaryen' '_BinaryenConstGetValueF32' */
extern f32 (*Z_binaryenZ__BinaryenConstGetValueF32Z_fi)(u32);
/* import: 'binaryen' '_BinaryenConstGetValueF64' */
extern f64 (*Z_binaryenZ__BinaryenConstGetValueF64Z_di)(u32);
/* import: 'binaryen' '_BinaryenLoadIsSigned' */
extern u32 (*Z_binaryenZ__BinaryenLoadIsSignedZ_ii)(u32);
/* import: 'binaryen' '_BinaryenLoadGetBytes' */
extern u32 (*Z_binaryenZ__BinaryenLoadGetBytesZ_ii)(u32);
/* import: 'binaryen' '_BinaryenBlockGetName' */
extern u32 (*Z_binaryenZ__BinaryenBlockGetNameZ_ii)(u32);
/* import: 'binaryen' '_BinaryenBlockGetNumChildren' */
extern u32 (*Z_binaryenZ__BinaryenBlockGetNumChildrenZ_ii)(u32);
/* import: 'binaryen' '_BinaryenBlockGetChildAt' */
extern u32 (*Z_binaryenZ__BinaryenBlockGetChildAtZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenIfGetIfTrue' */
extern u32 (*Z_binaryenZ__BinaryenIfGetIfTrueZ_ii)(u32);
/* import: 'binaryen' '_BinaryenIfGetIfFalse' */
extern u32 (*Z_binaryenZ__BinaryenIfGetIfFalseZ_ii)(u32);
/* import: 'binaryen' '_BinaryenSelectGetIfTrue' */
extern u32 (*Z_binaryenZ__BinaryenSelectGetIfTrueZ_ii)(u32);
/* import: 'binaryen' '_BinaryenSelectGetIfFalse' */
extern u32 (*Z_binaryenZ__BinaryenSelectGetIfFalseZ_ii)(u32);
/* import: 'binaryen' '_BinaryenCallGetTarget' */
extern u32 (*Z_binaryenZ__BinaryenCallGetTargetZ_ii)(u32);
/* import: 'binaryen' '_BinaryenLocalTee' */
extern u32 (*Z_binaryenZ__BinaryenLocalTeeZ_iiiii)(u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenLocalGet' */
extern u32 (*Z_binaryenZ__BinaryenLocalGetZ_iiii)(u32, u32, u32);
/* import: 'binaryen' '_BinaryenLiteralInt64' */
extern void (*Z_binaryenZ__BinaryenLiteralInt64Z_viii)(u32, u32, u32);
/* import: 'binaryen' '_BinaryenConst' */
extern u32 (*Z_binaryenZ__BinaryenConstZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenLiteralInt32' */
extern void (*Z_binaryenZ__BinaryenLiteralInt32Z_vii)(u32, u32);
/* import: 'binaryen' '_BinaryenNop' */
extern u32 (*Z_binaryenZ__BinaryenNopZ_ii)(u32);
/* import: 'binaryen' '_malloc' */
extern u32 (*Z_binaryenZ__mallocZ_ii)(u32);
/* import: 'binaryen' '__i32_store8' */
extern void (*Z_binaryenZ___i32_store8Z_vid)(u32, f64);
/* import: 'binaryen' '__i32_store' */
extern void (*Z_binaryenZ___i32_storeZ_vid)(u32, f64);
/* import: 'binaryen' '_BinaryenBlock' */
extern u32 (*Z_binaryenZ__BinaryenBlockZ_iiiiii)(u32, u32, u32, u32, u32);
/* import: 'binaryen' '_free' */
extern void (*Z_binaryenZ__freeZ_vi)(u32);
/* import: 'binaryen' '_BinaryenBreak' */
extern u32 (*Z_binaryenZ__BinaryenBreakZ_iiiii)(u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenUnary' */
extern u32 (*Z_binaryenZ__BinaryenUnaryZ_iiii)(u32, u32, u32);
/* import: 'binaryen' '_BinaryenBinary' */
extern u32 (*Z_binaryenZ__BinaryenBinaryZ_iiiii)(u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenRefIsNull' */
extern u32 (*Z_binaryenZ__BinaryenRefIsNullZ_iii)(u32, u32);
/* import: 'binaryen' '_ExpressionRunnerCreate' */
extern u32 (*Z_binaryenZ__ExpressionRunnerCreateZ_iiiii)(u32, u32, u32, u32);
/* import: 'binaryen' '_ExpressionRunnerRunAndDispose' */
extern u32 (*Z_binaryenZ__ExpressionRunnerRunAndDisposeZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenDrop' */
extern u32 (*Z_binaryenZ__BinaryenDropZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenLocalSet' */
extern u32 (*Z_binaryenZ__BinaryenLocalSetZ_iiii)(u32, u32, u32);
/* import: 'binaryen' '_BinaryenLoop' */
extern u32 (*Z_binaryenZ__BinaryenLoopZ_iiii)(u32, u32, u32);
/* import: 'binaryen' '_BinaryenConstGetValueI64High' */
extern u32 (*Z_binaryenZ__BinaryenConstGetValueI64HighZ_ii)(u32);
/* import: 'binaryen' '_BinaryenIfGetCondition' */
extern u32 (*Z_binaryenZ__BinaryenIfGetConditionZ_ii)(u32);
/* import: 'binaryen' '_BinaryenUnaryGetValue' */
extern u32 (*Z_binaryenZ__BinaryenUnaryGetValueZ_ii)(u32);
/* import: 'binaryen' '_BinaryenIf' */
extern u32 (*Z_binaryenZ__BinaryenIfZ_iiiii)(u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenReturn' */
extern u32 (*Z_binaryenZ__BinaryenReturnZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenLiteralFloat32' */
extern void (*Z_binaryenZ__BinaryenLiteralFloat32Z_vif)(u32, f32);
/* import: 'binaryen' '_BinaryenLiteralFloat64' */
extern void (*Z_binaryenZ__BinaryenLiteralFloat64Z_vid)(u32, f64);
/* import: 'binaryen' '_BinaryenLiteralVec128' */
extern void (*Z_binaryenZ__BinaryenLiteralVec128Z_vii)(u32, u32);
/* import: 'binaryen' '_BinaryenRefNull' */
extern u32 (*Z_binaryenZ__BinaryenRefNullZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenModuleAddDebugInfoFileName' */
extern u32 (*Z_binaryenZ__BinaryenModuleAddDebugInfoFileNameZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenBreakGetCondition' */
extern u32 (*Z_binaryenZ__BinaryenBreakGetConditionZ_ii)(u32);
/* import: 'binaryen' '_BinaryenReturnCall' */
extern u32 (*Z_binaryenZ__BinaryenReturnCallZ_iiiiii)(u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenCall' */
extern u32 (*Z_binaryenZ__BinaryenCallZ_iiiiii)(u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenStore' */
extern u32 (*Z_binaryenZ__BinaryenStoreZ_iiiiiiii)(u32, u32, u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenTypeCreate' */
extern u32 (*Z_binaryenZ__BinaryenTypeCreateZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenAddFunction' */
extern u32 (*Z_binaryenZ__BinaryenAddFunctionZ_iiiiiiii)(u32, u32, u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenAddFunctionImport' */
extern void (*Z_binaryenZ__BinaryenAddFunctionImportZ_viiiiii)(u32, u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenGetFunction' */
extern u32 (*Z_binaryenZ__BinaryenGetFunctionZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenFunctionSetDebugLocation' */
extern void (*Z_binaryenZ__BinaryenFunctionSetDebugLocationZ_viiiii)(u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenLoopGetBody' */
extern u32 (*Z_binaryenZ__BinaryenLoopGetBodyZ_ii)(u32);
/* import: 'binaryen' '_BinaryenSwitchGetCondition' */
extern u32 (*Z_binaryenZ__BinaryenSwitchGetConditionZ_ii)(u32);
/* import: 'binaryen' '_BinaryenCallGetNumOperands' */
extern u32 (*Z_binaryenZ__BinaryenCallGetNumOperandsZ_ii)(u32);
/* import: 'binaryen' '_BinaryenCallGetOperandAt' */
extern u32 (*Z_binaryenZ__BinaryenCallGetOperandAtZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenCallIndirectGetNumOperands' */
extern u32 (*Z_binaryenZ__BinaryenCallIndirectGetNumOperandsZ_ii)(u32);
/* import: 'binaryen' '_BinaryenCallIndirectGetOperandAt' */
extern u32 (*Z_binaryenZ__BinaryenCallIndirectGetOperandAtZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenGlobalSetGetValue' */
extern u32 (*Z_binaryenZ__BinaryenGlobalSetGetValueZ_ii)(u32);
/* import: 'binaryen' '_BinaryenLoadGetPtr' */
extern u32 (*Z_binaryenZ__BinaryenLoadGetPtrZ_ii)(u32);
/* import: 'binaryen' '_BinaryenStoreGetPtr' */
extern u32 (*Z_binaryenZ__BinaryenStoreGetPtrZ_ii)(u32);
/* import: 'binaryen' '_BinaryenStoreGetValue' */
extern u32 (*Z_binaryenZ__BinaryenStoreGetValueZ_ii)(u32);
/* import: 'binaryen' '_BinaryenSelectGetCondition' */
extern u32 (*Z_binaryenZ__BinaryenSelectGetConditionZ_ii)(u32);
/* import: 'binaryen' '_BinaryenDropGetValue' */
extern u32 (*Z_binaryenZ__BinaryenDropGetValueZ_ii)(u32);
/* import: 'binaryen' '_BinaryenReturnGetValue' */
extern u32 (*Z_binaryenZ__BinaryenReturnGetValueZ_ii)(u32);
/* import: 'binaryen' '_BinaryenMemoryGrowGetDelta' */
extern u32 (*Z_binaryenZ__BinaryenMemoryGrowGetDeltaZ_ii)(u32);
/* import: 'binaryen' '_BinaryenAtomicRMWGetPtr' */
extern u32 (*Z_binaryenZ__BinaryenAtomicRMWGetPtrZ_ii)(u32);
/* import: 'binaryen' '_BinaryenAtomicRMWGetValue' */
extern u32 (*Z_binaryenZ__BinaryenAtomicRMWGetValueZ_ii)(u32);
/* import: 'binaryen' '_BinaryenAtomicCmpxchgGetPtr' */
extern u32 (*Z_binaryenZ__BinaryenAtomicCmpxchgGetPtrZ_ii)(u32);
/* import: 'binaryen' '_BinaryenAtomicCmpxchgGetExpected' */
extern u32 (*Z_binaryenZ__BinaryenAtomicCmpxchgGetExpectedZ_ii)(u32);
/* import: 'binaryen' '_BinaryenAtomicCmpxchgGetReplacement' */
extern u32 (*Z_binaryenZ__BinaryenAtomicCmpxchgGetReplacementZ_ii)(u32);
/* import: 'binaryen' '_BinaryenAtomicWaitGetPtr' */
extern u32 (*Z_binaryenZ__BinaryenAtomicWaitGetPtrZ_ii)(u32);
/* import: 'binaryen' '_BinaryenAtomicWaitGetExpected' */
extern u32 (*Z_binaryenZ__BinaryenAtomicWaitGetExpectedZ_ii)(u32);
/* import: 'binaryen' '_BinaryenAtomicWaitGetTimeout' */
extern u32 (*Z_binaryenZ__BinaryenAtomicWaitGetTimeoutZ_ii)(u32);
/* import: 'binaryen' '_BinaryenAtomicNotifyGetPtr' */
extern u32 (*Z_binaryenZ__BinaryenAtomicNotifyGetPtrZ_ii)(u32);
/* import: 'binaryen' '_BinaryenSIMDExtractGetVec' */
extern u32 (*Z_binaryenZ__BinaryenSIMDExtractGetVecZ_ii)(u32);
/* import: 'binaryen' '_BinaryenSIMDReplaceGetVec' */
extern u32 (*Z_binaryenZ__BinaryenSIMDReplaceGetVecZ_ii)(u32);
/* import: 'binaryen' '_BinaryenSIMDReplaceGetValue' */
extern u32 (*Z_binaryenZ__BinaryenSIMDReplaceGetValueZ_ii)(u32);
/* import: 'binaryen' '_BinaryenSIMDShuffleGetLeft' */
extern u32 (*Z_binaryenZ__BinaryenSIMDShuffleGetLeftZ_ii)(u32);
/* import: 'binaryen' '_BinaryenSIMDShuffleGetRight' */
extern u32 (*Z_binaryenZ__BinaryenSIMDShuffleGetRightZ_ii)(u32);
/* import: 'binaryen' '_BinaryenSIMDTernaryGetA' */
extern u32 (*Z_binaryenZ__BinaryenSIMDTernaryGetAZ_ii)(u32);
/* import: 'binaryen' '_BinaryenSIMDTernaryGetB' */
extern u32 (*Z_binaryenZ__BinaryenSIMDTernaryGetBZ_ii)(u32);
/* import: 'binaryen' '_BinaryenSIMDTernaryGetC' */
extern u32 (*Z_binaryenZ__BinaryenSIMDTernaryGetCZ_ii)(u32);
/* import: 'binaryen' '_BinaryenSIMDShiftGetVec' */
extern u32 (*Z_binaryenZ__BinaryenSIMDShiftGetVecZ_ii)(u32);
/* import: 'binaryen' '_BinaryenSIMDShiftGetShift' */
extern u32 (*Z_binaryenZ__BinaryenSIMDShiftGetShiftZ_ii)(u32);
/* import: 'binaryen' '_BinaryenSIMDLoadGetPtr' */
extern u32 (*Z_binaryenZ__BinaryenSIMDLoadGetPtrZ_ii)(u32);
/* import: 'binaryen' '_BinaryenMemoryInitGetDest' */
extern u32 (*Z_binaryenZ__BinaryenMemoryInitGetDestZ_ii)(u32);
/* import: 'binaryen' '_BinaryenMemoryInitGetOffset' */
extern u32 (*Z_binaryenZ__BinaryenMemoryInitGetOffsetZ_ii)(u32);
/* import: 'binaryen' '_BinaryenMemoryInitGetSize' */
extern u32 (*Z_binaryenZ__BinaryenMemoryInitGetSizeZ_ii)(u32);
/* import: 'binaryen' '_BinaryenMemoryCopyGetDest' */
extern u32 (*Z_binaryenZ__BinaryenMemoryCopyGetDestZ_ii)(u32);
/* import: 'binaryen' '_BinaryenMemoryCopyGetSource' */
extern u32 (*Z_binaryenZ__BinaryenMemoryCopyGetSourceZ_ii)(u32);
/* import: 'binaryen' '_BinaryenMemoryCopyGetSize' */
extern u32 (*Z_binaryenZ__BinaryenMemoryCopyGetSizeZ_ii)(u32);
/* import: 'binaryen' '_BinaryenMemoryFillGetDest' */
extern u32 (*Z_binaryenZ__BinaryenMemoryFillGetDestZ_ii)(u32);
/* import: 'binaryen' '_BinaryenMemoryFillGetValue' */
extern u32 (*Z_binaryenZ__BinaryenMemoryFillGetValueZ_ii)(u32);
/* import: 'binaryen' '_BinaryenMemoryFillGetSize' */
extern u32 (*Z_binaryenZ__BinaryenMemoryFillGetSizeZ_ii)(u32);
/* import: 'binaryen' '_BinaryenRefIsNullGetValue' */
extern u32 (*Z_binaryenZ__BinaryenRefIsNullGetValueZ_ii)(u32);
/* import: 'binaryen' '_BinaryenTryGetBody' */
extern u32 (*Z_binaryenZ__BinaryenTryGetBodyZ_ii)(u32);
/* import: 'binaryen' '_BinaryenTryGetCatchBody' */
extern u32 (*Z_binaryenZ__BinaryenTryGetCatchBodyZ_ii)(u32);
/* import: 'binaryen' '_BinaryenThrowGetNumOperands' */
extern u32 (*Z_binaryenZ__BinaryenThrowGetNumOperandsZ_ii)(u32);
/* import: 'binaryen' '_BinaryenThrowGetOperandAt' */
extern u32 (*Z_binaryenZ__BinaryenThrowGetOperandAtZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenRethrowGetExnref' */
extern u32 (*Z_binaryenZ__BinaryenRethrowGetExnrefZ_ii)(u32);
/* import: 'binaryen' '_BinaryenBrOnExnGetExnref' */
extern u32 (*Z_binaryenZ__BinaryenBrOnExnGetExnrefZ_ii)(u32);
/* import: 'binaryen' '_BinaryenTupleMakeGetNumOperands' */
extern u32 (*Z_binaryenZ__BinaryenTupleMakeGetNumOperandsZ_ii)(u32);
/* import: 'binaryen' '_BinaryenTupleMakeGetOperandAt' */
extern u32 (*Z_binaryenZ__BinaryenTupleMakeGetOperandAtZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenAddGlobalImport' */
extern void (*Z_binaryenZ__BinaryenAddGlobalImportZ_viiiiii)(u32, u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenGetGlobal' */
extern u32 (*Z_binaryenZ__BinaryenGetGlobalZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenGlobalIsMutable' */
extern u32 (*Z_binaryenZ__BinaryenGlobalIsMutableZ_ii)(u32);
/* import: 'binaryen' '_BinaryenAddGlobal' */
extern u32 (*Z_binaryenZ__BinaryenAddGlobalZ_iiiiii)(u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenGlobalSet' */
extern u32 (*Z_binaryenZ__BinaryenGlobalSetZ_iiii)(u32, u32, u32);
/* import: 'binaryen' '_BinaryenGlobalGet' */
extern u32 (*Z_binaryenZ__BinaryenGlobalGetZ_iiii)(u32, u32, u32);
/* import: 'binaryen' '_BinaryenSwitch' */
extern u32 (*Z_binaryenZ__BinaryenSwitchZ_iiiiiii)(u32, u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenExpressionGetSideEffects' */
extern u32 (*Z_binaryenZ__BinaryenExpressionGetSideEffectsZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenLoad' */
extern u32 (*Z_binaryenZ__BinaryenLoadZ_iiiiiiii)(u32, u32, u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenSelect' */
extern u32 (*Z_binaryenZ__BinaryenSelectZ_iiiiii)(u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenLoadIsAtomic' */
extern u32 (*Z_binaryenZ__BinaryenLoadIsAtomicZ_ii)(u32);
/* import: 'binaryen' '_BinaryenLoadGetOffset' */
extern u32 (*Z_binaryenZ__BinaryenLoadGetOffsetZ_ii)(u32);
/* import: 'binaryen' '_BinaryenAtomicLoad' */
extern u32 (*Z_binaryenZ__BinaryenAtomicLoadZ_iiiiii)(u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenLoadGetAlign' */
extern u32 (*Z_binaryenZ__BinaryenLoadGetAlignZ_ii)(u32);
/* import: 'binaryen' '_BinaryenReturnCallIndirect' */
extern u32 (*Z_binaryenZ__BinaryenReturnCallIndirectZ_iiiiiii)(u32, u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenCallIndirect' */
extern u32 (*Z_binaryenZ__BinaryenCallIndirectZ_iiiiiii)(u32, u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenRefFunc' */
extern u32 (*Z_binaryenZ__BinaryenRefFuncZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenAtomicStore' */
extern u32 (*Z_binaryenZ__BinaryenAtomicStoreZ_iiiiiii)(u32, u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenAtomicRMW' */
extern u32 (*Z_binaryenZ__BinaryenAtomicRMWZ_iiiiiiii)(u32, u32, u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenAtomicCmpxchg' */
extern u32 (*Z_binaryenZ__BinaryenAtomicCmpxchgZ_iiiiiiii)(u32, u32, u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenAtomicWait' */
extern u32 (*Z_binaryenZ__BinaryenAtomicWaitZ_iiiiii)(u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenAtomicNotify' */
extern u32 (*Z_binaryenZ__BinaryenAtomicNotifyZ_iiii)(u32, u32, u32);
/* import: 'binaryen' '_BinaryenAtomicFence' */
extern u32 (*Z_binaryenZ__BinaryenAtomicFenceZ_ii)(u32);
/* import: 'binaryen' '_BinaryenMemorySize' */
extern u32 (*Z_binaryenZ__BinaryenMemorySizeZ_ii)(u32);
/* import: 'binaryen' '_BinaryenMemoryGrow' */
extern u32 (*Z_binaryenZ__BinaryenMemoryGrowZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenMemoryCopy' */
extern u32 (*Z_binaryenZ__BinaryenMemoryCopyZ_iiiii)(u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenMemoryFill' */
extern u32 (*Z_binaryenZ__BinaryenMemoryFillZ_iiiii)(u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenSIMDExtract' */
extern u32 (*Z_binaryenZ__BinaryenSIMDExtractZ_iiiii)(u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenSIMDReplace' */
extern u32 (*Z_binaryenZ__BinaryenSIMDReplaceZ_iiiiii)(u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenSIMDShuffle' */
extern u32 (*Z_binaryenZ__BinaryenSIMDShuffleZ_iiiii)(u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenSIMDLoad' */
extern u32 (*Z_binaryenZ__BinaryenSIMDLoadZ_iiiiii)(u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenSIMDShift' */
extern u32 (*Z_binaryenZ__BinaryenSIMDShiftZ_iiiii)(u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenSIMDTernary' */
extern u32 (*Z_binaryenZ__BinaryenSIMDTernaryZ_iiiiii)(u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenSizeofLiteral' */
extern u32 (*Z_binaryenZ__BinaryenSizeofLiteralZ_iv)(void);
/* import: 'binaryen' '_BinaryenModuleCreate' */
extern u32 (*Z_binaryenZ__BinaryenModuleCreateZ_iv)(void);
/* import: 'binaryen' '_BinaryenSetLowMemoryUnused' */
extern void (*Z_binaryenZ__BinaryenSetLowMemoryUnusedZ_vi)(u32);
/* import: 'binaryen' '_BinaryenModuleSetFeatures' */
extern void (*Z_binaryenZ__BinaryenModuleSetFeaturesZ_vii)(u32, u32);
/* import: 'binaryen' '_BinaryenSetStart' */
extern void (*Z_binaryenZ__BinaryenSetStartZ_vii)(u32, u32);
/* import: 'binaryen' '_BinaryenAddFunctionExport' */
extern u32 (*Z_binaryenZ__BinaryenAddFunctionExportZ_iiii)(u32, u32, u32);
/* import: 'binaryen' '_BinaryenRemoveFunction' */
extern void (*Z_binaryenZ__BinaryenRemoveFunctionZ_vii)(u32, u32);
/* import: 'binaryen' '_BinaryenRemoveGlobal' */
extern void (*Z_binaryenZ__BinaryenRemoveGlobalZ_vii)(u32, u32);
/* import: 'binaryen' '_BinaryenSetMemory' */
extern void (*Z_binaryenZ__BinaryenSetMemoryZ_viiiiiiiiii)(u32, u32, u32, u32, u32, u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenAddMemoryImport' */
extern void (*Z_binaryenZ__BinaryenAddMemoryImportZ_viiiii)(u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenSetFunctionTable' */
extern void (*Z_binaryenZ__BinaryenSetFunctionTableZ_viiiiii)(u32, u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenAddTableImport' */
extern void (*Z_binaryenZ__BinaryenAddTableImportZ_viiii)(u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenAddTableExport' */
extern u32 (*Z_binaryenZ__BinaryenAddTableExportZ_iiii)(u32, u32, u32);
/* import: 'binaryen' '_BinaryenAddGlobalExport' */
extern u32 (*Z_binaryenZ__BinaryenAddGlobalExportZ_iiii)(u32, u32, u32);
/* import: 'binaryen' '_BinaryenModuleRead' */
extern u32 (*Z_binaryenZ__BinaryenModuleReadZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenTry' */
extern u32 (*Z_binaryenZ__BinaryenTryZ_iiii)(u32, u32, u32);
/* import: 'binaryen' '_BinaryenThrow' */
extern u32 (*Z_binaryenZ__BinaryenThrowZ_iiiii)(u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenRethrow' */
extern u32 (*Z_binaryenZ__BinaryenRethrowZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenBrOnExn' */
extern u32 (*Z_binaryenZ__BinaryenBrOnExnZ_iiiii)(u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenPop' */
extern u32 (*Z_binaryenZ__BinaryenPopZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenTupleMake' */
extern u32 (*Z_binaryenZ__BinaryenTupleMakeZ_iiii)(u32, u32, u32);
/* import: 'binaryen' '_BinaryenTupleExtract' */
extern u32 (*Z_binaryenZ__BinaryenTupleExtractZ_iiii)(u32, u32, u32);
/* import: 'binaryen' '_BinaryenAddEvent' */
extern u32 (*Z_binaryenZ__BinaryenAddEventZ_iiiiii)(u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenGetEvent' */
extern u32 (*Z_binaryenZ__BinaryenGetEventZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenRemoveEvent' */
extern void (*Z_binaryenZ__BinaryenRemoveEventZ_vii)(u32, u32);
/* import: 'binaryen' '_BinaryenAddMemoryExport' */
extern u32 (*Z_binaryenZ__BinaryenAddMemoryExportZ_iiii)(u32, u32, u32);
/* import: 'binaryen' '_BinaryenAddEventExport' */
extern u32 (*Z_binaryenZ__BinaryenAddEventExportZ_iiii)(u32, u32, u32);
/* import: 'binaryen' '_BinaryenRemoveExport' */
extern void (*Z_binaryenZ__BinaryenRemoveExportZ_vii)(u32, u32);
/* import: 'binaryen' '_BinaryenAddEventImport' */
extern void (*Z_binaryenZ__BinaryenAddEventImportZ_viiiiiii)(u32, u32, u32, u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenAddCustomSection' */
extern void (*Z_binaryenZ__BinaryenAddCustomSectionZ_viiii)(u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenGetOptimizeLevel' */
extern u32 (*Z_binaryenZ__BinaryenGetOptimizeLevelZ_iv)(void);
/* import: 'binaryen' '_BinaryenSetOptimizeLevel' */
extern void (*Z_binaryenZ__BinaryenSetOptimizeLevelZ_vi)(u32);
/* import: 'binaryen' '_BinaryenGetShrinkLevel' */
extern u32 (*Z_binaryenZ__BinaryenGetShrinkLevelZ_iv)(void);
/* import: 'binaryen' '_BinaryenSetShrinkLevel' */
extern void (*Z_binaryenZ__BinaryenSetShrinkLevelZ_vi)(u32);
/* import: 'binaryen' '_BinaryenGetDebugInfo' */
extern u32 (*Z_binaryenZ__BinaryenGetDebugInfoZ_iv)(void);
/* import: 'binaryen' '_BinaryenSetDebugInfo' */
extern void (*Z_binaryenZ__BinaryenSetDebugInfoZ_vi)(u32);
/* import: 'binaryen' '_BinaryenGetLowMemoryUnused' */
extern u32 (*Z_binaryenZ__BinaryenGetLowMemoryUnusedZ_iv)(void);
/* import: 'binaryen' '_BinaryenGetFastMath' */
extern u32 (*Z_binaryenZ__BinaryenGetFastMathZ_iv)(void);
/* import: 'binaryen' '_BinaryenSetFastMath' */
extern void (*Z_binaryenZ__BinaryenSetFastMathZ_vi)(u32);
/* import: 'binaryen' '_BinaryenGetPassArgument' */
extern u32 (*Z_binaryenZ__BinaryenGetPassArgumentZ_ii)(u32);
/* import: 'binaryen' '_BinaryenSetPassArgument' */
extern void (*Z_binaryenZ__BinaryenSetPassArgumentZ_vii)(u32, u32);
/* import: 'binaryen' '_BinaryenClearPassArguments' */
extern void (*Z_binaryenZ__BinaryenClearPassArgumentsZ_vv)(void);
/* import: 'binaryen' '_BinaryenGetAlwaysInlineMaxSize' */
extern u32 (*Z_binaryenZ__BinaryenGetAlwaysInlineMaxSizeZ_iv)(void);
/* import: 'binaryen' '_BinaryenSetAlwaysInlineMaxSize' */
extern void (*Z_binaryenZ__BinaryenSetAlwaysInlineMaxSizeZ_vi)(u32);
/* import: 'binaryen' '_BinaryenGetFlexibleInlineMaxSize' */
extern u32 (*Z_binaryenZ__BinaryenGetFlexibleInlineMaxSizeZ_iv)(void);
/* import: 'binaryen' '_BinaryenSetFlexibleInlineMaxSize' */
extern void (*Z_binaryenZ__BinaryenSetFlexibleInlineMaxSizeZ_vi)(u32);
/* import: 'binaryen' '_BinaryenGetOneCallerInlineMaxSize' */
extern u32 (*Z_binaryenZ__BinaryenGetOneCallerInlineMaxSizeZ_iv)(void);
/* import: 'binaryen' '_BinaryenSetOneCallerInlineMaxSize' */
extern void (*Z_binaryenZ__BinaryenSetOneCallerInlineMaxSizeZ_vi)(u32);
/* import: 'binaryen' '_BinaryenGetAllowInliningFunctionsWithLoops' */
extern u32 (*Z_binaryenZ__BinaryenGetAllowInliningFunctionsWithLoopsZ_iv)(void);
/* import: 'binaryen' '_BinaryenSetAllowInliningFunctionsWithLoops' */
extern void (*Z_binaryenZ__BinaryenSetAllowInliningFunctionsWithLoopsZ_vi)(u32);
/* import: 'binaryen' '_BinaryenModuleGetFeatures' */
extern u32 (*Z_binaryenZ__BinaryenModuleGetFeaturesZ_ii)(u32);
/* import: 'binaryen' '_BinaryenFunctionRunPasses' */
extern void (*Z_binaryenZ__BinaryenFunctionRunPassesZ_viiii)(u32, u32, u32, u32);
/* import: 'binaryen' '_BinaryenModuleRunPasses' */
extern void (*Z_binaryenZ__BinaryenModuleRunPassesZ_viii)(u32, u32, u32);
/* import: 'binaryen' '_BinaryenModuleValidate' */
extern u32 (*Z_binaryenZ__BinaryenModuleValidateZ_ii)(u32);
/* import: 'binaryen' '_BinaryenModuleInterpret' */
extern void (*Z_binaryenZ__BinaryenModuleInterpretZ_vi)(u32);
/* import: 'binaryen' '_BinaryenModuleAllocateAndWrite' */
extern void (*Z_binaryenZ__BinaryenModuleAllocateAndWriteZ_viii)(u32, u32, u32);
/* import: 'binaryen' '__i32_load' */
extern u32 (*Z_binaryenZ___i32_loadZ_ii)(u32);
/* import: 'binaryen' '_BinaryenModuleDispose' */
extern void (*Z_binaryenZ__BinaryenModuleDisposeZ_vi)(u32);
/* import: 'binaryen' '_RelooperCreate' */
extern u32 (*Z_binaryenZ__RelooperCreateZ_ii)(u32);
/* import: 'binaryen' '_BinaryenExpressionCopy' */
extern u32 (*Z_binaryenZ__BinaryenExpressionCopyZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenModuleGetDebugInfoFileName' */
extern u32 (*Z_binaryenZ__BinaryenModuleGetDebugInfoFileNameZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenTypeArity' */
extern u32 (*Z_binaryenZ__BinaryenTypeArityZ_ii)(u32);
/* import: 'binaryen' '_BinaryenTypeExpand' */
extern void (*Z_binaryenZ__BinaryenTypeExpandZ_vii)(u32, u32);
/* import: 'binaryen' '_BinaryenStoreGetBytes' */
extern u32 (*Z_binaryenZ__BinaryenStoreGetBytesZ_ii)(u32);
/* import: 'binaryen' '_BinaryenStoreGetOffset' */
extern u32 (*Z_binaryenZ__BinaryenStoreGetOffsetZ_ii)(u32);
/* import: 'binaryen' '_BinaryenLoopGetName' */
extern u32 (*Z_binaryenZ__BinaryenLoopGetNameZ_ii)(u32);
/* import: 'binaryen' '_BinaryenBreakGetName' */
extern u32 (*Z_binaryenZ__BinaryenBreakGetNameZ_ii)(u32);
/* import: 'binaryen' '_BinaryenFunctionGetBody' */
extern u32 (*Z_binaryenZ__BinaryenFunctionGetBodyZ_ii)(u32);
/* import: 'binaryen' '_BinaryenFunctionGetName' */
extern u32 (*Z_binaryenZ__BinaryenFunctionGetNameZ_ii)(u32);
/* import: 'binaryen' '_BinaryenFunctionGetParams' */
extern u32 (*Z_binaryenZ__BinaryenFunctionGetParamsZ_ii)(u32);
/* import: 'binaryen' '_BinaryenFunctionGetResults' */
extern u32 (*Z_binaryenZ__BinaryenFunctionGetResultsZ_ii)(u32);
/* import: 'binaryen' '_BinaryenFunctionGetNumVars' */
extern u32 (*Z_binaryenZ__BinaryenFunctionGetNumVarsZ_ii)(u32);
/* import: 'binaryen' '_BinaryenFunctionGetVar' */
extern u32 (*Z_binaryenZ__BinaryenFunctionGetVarZ_iii)(u32, u32);
/* import: 'binaryen' '_BinaryenGlobalGetName' */
extern u32 (*Z_binaryenZ__BinaryenGlobalGetNameZ_ii)(u32);
/* import: 'binaryen' '_BinaryenGlobalGetType' */
extern u32 (*Z_binaryenZ__BinaryenGlobalGetTypeZ_ii)(u32);
/* import: 'binaryen' '_BinaryenGlobalGetInitExpr' */
extern u32 (*Z_binaryenZ__BinaryenGlobalGetInitExprZ_ii)(u32);
/* import: 'binaryen' '_BinaryenEventGetName' */
extern u32 (*Z_binaryenZ__BinaryenEventGetNameZ_ii)(u32);
/* import: 'binaryen' '_BinaryenEventGetAttribute' */
extern u32 (*Z_binaryenZ__BinaryenEventGetAttributeZ_ii)(u32);
/* import: 'binaryen' '_BinaryenEventGetParams' */
extern u32 (*Z_binaryenZ__BinaryenEventGetParamsZ_ii)(u32);
/* import: 'binaryen' '_BinaryenEventGetResults' */
extern u32 (*Z_binaryenZ__BinaryenEventGetResultsZ_ii)(u32);
/* import: 'binaryen' '_RelooperAddBlock' */
extern u32 (*Z_binaryenZ__RelooperAddBlockZ_iii)(u32, u32);
/* import: 'binaryen' '_RelooperAddBranch' */
extern void (*Z_binaryenZ__RelooperAddBranchZ_viiii)(u32, u32, u32, u32);
/* import: 'binaryen' '_RelooperAddBlockWithSwitch' */
extern u32 (*Z_binaryenZ__RelooperAddBlockWithSwitchZ_iiii)(u32, u32, u32);
/* import: 'binaryen' '_RelooperAddBranchForSwitch' */
extern void (*Z_binaryenZ__RelooperAddBranchForSwitchZ_viiiii)(u32, u32, u32, u32, u32);
/* import: 'binaryen' '_RelooperRenderAndDispose' */
extern u32 (*Z_binaryenZ__RelooperRenderAndDisposeZ_iiii)(u32, u32, u32);

/* export: '_start' */
extern void (*WASM_RT_ADD_PREFIX(Z__startZ_vv))(void);
/* export: 'memory' */
extern wasm_rt_memory_t (*WASM_RT_ADD_PREFIX(Z_memory));
/* export: '__new' */
extern u32 (*WASM_RT_ADD_PREFIX(Z___newZ_iii))(u32, u32);
/* export: '__link' */
extern void (*WASM_RT_ADD_PREFIX(Z___linkZ_viii))(u32, u32, u32);
/* export: '__collect' */
extern void (*WASM_RT_ADD_PREFIX(Z___collectZ_vi))(u32);
/* export: '__mark' */
extern void (*WASM_RT_ADD_PREFIX(Z___markZ_vi))(u32);
/* export: '__rtti_base' */
extern u32 (*WASM_RT_ADD_PREFIX(Z___rtti_baseZ_i));
/* export: 'newOptions' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_newOptionsZ_iv))(void);
/* export: 'setTarget' */
extern void (*WASM_RT_ADD_PREFIX(Z_setTargetZ_vii))(u32, u32);
/* export: 'setNoAssert' */
extern void (*WASM_RT_ADD_PREFIX(Z_setNoAssertZ_vii))(u32, u32);
/* export: 'setExportMemory' */
extern void (*WASM_RT_ADD_PREFIX(Z_setExportMemoryZ_vii))(u32, u32);
/* export: 'setImportMemory' */
extern void (*WASM_RT_ADD_PREFIX(Z_setImportMemoryZ_vii))(u32, u32);
/* export: 'setInitialMemory' */
extern void (*WASM_RT_ADD_PREFIX(Z_setInitialMemoryZ_vii))(u32, u32);
/* export: 'setMaximumMemory' */
extern void (*WASM_RT_ADD_PREFIX(Z_setMaximumMemoryZ_vii))(u32, u32);
/* export: 'setSharedMemory' */
extern void (*WASM_RT_ADD_PREFIX(Z_setSharedMemoryZ_vii))(u32, u32);
/* export: 'setImportTable' */
extern void (*WASM_RT_ADD_PREFIX(Z_setImportTableZ_vii))(u32, u32);
/* export: 'setExportTable' */
extern void (*WASM_RT_ADD_PREFIX(Z_setExportTableZ_vii))(u32, u32);
/* export: 'setSourceMap' */
extern void (*WASM_RT_ADD_PREFIX(Z_setSourceMapZ_vii))(u32, u32);
/* export: 'setMemoryBase' */
extern void (*WASM_RT_ADD_PREFIX(Z_setMemoryBaseZ_vii))(u32, u32);
/* export: 'setTableBase' */
extern void (*WASM_RT_ADD_PREFIX(Z_setTableBaseZ_vii))(u32, u32);
/* export: 'setGlobalAlias' */
extern void (*WASM_RT_ADD_PREFIX(Z_setGlobalAliasZ_viii))(u32, u32, u32);
/* export: 'setExplicitStart' */
extern void (*WASM_RT_ADD_PREFIX(Z_setExplicitStartZ_vii))(u32, u32);
/* export: 'setNoUnsafe' */
extern void (*WASM_RT_ADD_PREFIX(Z_setNoUnsafeZ_vii))(u32, u32);
/* export: 'setLowMemoryLimit' */
extern void (*WASM_RT_ADD_PREFIX(Z_setLowMemoryLimitZ_vii))(u32, u32);
/* export: 'setNoExportRuntime' */
extern void (*WASM_RT_ADD_PREFIX(Z_setNoExportRuntimeZ_vii))(u32, u32);
/* export: 'FEATURE_SIGN_EXTENSION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FEATURE_SIGN_EXTENSIONZ_i));
/* export: 'FEATURE_MUTABLE_GLOBALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FEATURE_MUTABLE_GLOBALSZ_i));
/* export: 'FEATURE_NONTRAPPING_F2I' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FEATURE_NONTRAPPING_F2IZ_i));
/* export: 'FEATURE_BULK_MEMORY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FEATURE_BULK_MEMORYZ_i));
/* export: 'FEATURE_SIMD' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FEATURE_SIMDZ_i));
/* export: 'FEATURE_THREADS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FEATURE_THREADSZ_i));
/* export: 'FEATURE_EXCEPTION_HANDLING' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FEATURE_EXCEPTION_HANDLINGZ_i));
/* export: 'FEATURE_TAIL_CALLS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FEATURE_TAIL_CALLSZ_i));
/* export: 'FEATURE_REFERENCE_TYPES' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FEATURE_REFERENCE_TYPESZ_i));
/* export: 'FEATURE_MULTI_VALUE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FEATURE_MULTI_VALUEZ_i));
/* export: 'FEATURE_GC' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FEATURE_GCZ_i));
/* export: 'FEATURE_MEMORY64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FEATURE_MEMORY64Z_i));
/* export: 'enableFeature' */
extern void (*WASM_RT_ADD_PREFIX(Z_enableFeatureZ_vii))(u32, u32);
/* export: 'disableFeature' */
extern void (*WASM_RT_ADD_PREFIX(Z_disableFeatureZ_vii))(u32, u32);
/* export: 'setOptimizeLevelHints' */
extern void (*WASM_RT_ADD_PREFIX(Z_setOptimizeLevelHintsZ_viii))(u32, u32, u32);
/* export: 'setPedantic' */
extern void (*WASM_RT_ADD_PREFIX(Z_setPedanticZ_vii))(u32, u32);
/* export: 'newProgram' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_newProgramZ_ii))(u32);
/* export: 'nextDiagnostic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_nextDiagnosticZ_ii))(u32);
/* export: 'getSource' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getSourceZ_iii))(u32, u32);
/* export: 'isInfo' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_isInfoZ_ii))(u32);
/* export: 'isWarning' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_isWarningZ_ii))(u32);
/* export: 'isError' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_isErrorZ_ii))(u32);
/* export: 'parse' */
extern void (*WASM_RT_ADD_PREFIX(Z_parseZ_viiii))(u32, u32, u32, u32);
/* export: 'nextFile' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_nextFileZ_ii))(u32);
/* export: 'getDependee' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getDependeeZ_iii))(u32, u32);
/* export: 'initializeProgram' */
extern void (*WASM_RT_ADD_PREFIX(Z_initializeProgramZ_vi))(u32);
/* export: 'compile' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_compileZ_ii))(u32);
/* export: 'buildIDL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_buildIDLZ_ii))(u32);
/* export: 'buildTSD' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_buildTSDZ_ii))(u32);
/* export: 'formatDiagnostic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_formatDiagnosticZ_iiii))(u32, u32, u32);
/* export: 'util.readI8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2EreadI8Z_iii))(u32, u32);
/* export: 'util.writeI8' */
extern void (*WASM_RT_ADD_PREFIX(Z_utilZ2EwriteI8Z_viii))(u32, u32, u32);
/* export: 'util.readI16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2EreadI16Z_iii))(u32, u32);
/* export: 'util.writeI16' */
extern void (*WASM_RT_ADD_PREFIX(Z_utilZ2EwriteI16Z_viii))(u32, u32, u32);
/* export: 'util.readI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2EreadI32Z_iii))(u32, u32);
/* export: 'util.writeI32' */
extern void (*WASM_RT_ADD_PREFIX(Z_utilZ2EwriteI32Z_viii))(u32, u32, u32);
/* export: 'util.writeI32AsI64' */
extern void (*WASM_RT_ADD_PREFIX(Z_utilZ2EwriteI32AsI64Z_viiii))(u32, u32, u32, u32);
/* export: 'util.readI64' */
extern u64 (*WASM_RT_ADD_PREFIX(Z_utilZ2EreadI64Z_jii))(u32, u32);
/* export: 'util.writeI64' */
extern void (*WASM_RT_ADD_PREFIX(Z_utilZ2EwriteI64Z_vjii))(u64, u32, u32);
/* export: 'util.writeI64AsI32' */
extern void (*WASM_RT_ADD_PREFIX(Z_utilZ2EwriteI64AsI32Z_vjiii))(u64, u32, u32, u32);
/* export: 'util.readF32' */
extern f32 (*WASM_RT_ADD_PREFIX(Z_utilZ2EreadF32Z_fii))(u32, u32);
/* export: 'util.writeF32' */
extern void (*WASM_RT_ADD_PREFIX(Z_utilZ2EwriteF32Z_vfii))(f32, u32, u32);
/* export: 'util.readF64' */
extern f64 (*WASM_RT_ADD_PREFIX(Z_utilZ2EreadF64Z_dii))(u32, u32);
/* export: 'util.writeF64' */
extern void (*WASM_RT_ADD_PREFIX(Z_utilZ2EwriteF64Z_vdii))(f64, u32, u32);
/* export: 'util.uniqueMap<~lib/string/String,src/types/Type>' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2EuniqueMapZ3CZ7ElibZ2FstringZ2FStringZ2CsrcZ2FtypesZ2FTypeZ3EZ_iii))(u32, u32);
/* export: 'util.uniqueMap<src/program/Field,i32>' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2EuniqueMapZ3CsrcZ2FprogramZ2FFieldZ2Ci32Z3EZ_iii))(u32, u32);
/* export: 'util.isPowerOf2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2EisPowerOf2Z_ii))(u32);
/* export: 'util.normalizePath' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2EnormalizePathZ_ii))(u32);
/* export: 'util.resolvePath' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2EresolvePathZ_iii))(u32, u32);
/* export: 'util.dirname' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2EdirnameZ_ii))(u32);
/* export: 'util.COLOR_GRAY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECOLOR_GRAYZ_i));
/* export: 'util.COLOR_RED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECOLOR_REDZ_i));
/* export: 'util.COLOR_GREEN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECOLOR_GREENZ_i));
/* export: 'util.COLOR_YELLOW' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECOLOR_YELLOWZ_i));
/* export: 'util.COLOR_BLUE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECOLOR_BLUEZ_i));
/* export: 'util.COLOR_MAGENTA' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECOLOR_MAGENTAZ_i));
/* export: 'util.COLOR_CYAN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECOLOR_CYANZ_i));
/* export: 'util.COLOR_WHITE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECOLOR_WHITEZ_i));
/* export: 'util.COLOR_RESET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECOLOR_RESETZ_i));
/* export: 'util.isColorsEnabled' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2EisColorsEnabledZ_iv))(void);
/* export: 'util.setColorsEnabled' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2EsetColorsEnabledZ_ii))(u32);
/* export: 'util.colorize' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2EcolorizeZ_iii))(u32, u32);
/* export: 'util.CharCode.NULL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ENULLZ_i));
/* export: 'util.CharCode.LINEFEED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ELINEFEEDZ_i));
/* export: 'util.CharCode.CARRIAGERETURN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ECARRIAGERETURNZ_i));
/* export: 'util.CharCode.LINESEPARATOR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ELINESEPARATORZ_i));
/* export: 'util.CharCode.PARAGRAPHSEPARATOR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EPARAGRAPHSEPARATORZ_i));
/* export: 'util.CharCode.NEXTLINE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ENEXTLINEZ_i));
/* export: 'util.CharCode.SPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ESPACEZ_i));
/* export: 'util.CharCode.NONBREAKINGSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ENONBREAKINGSPACEZ_i));
/* export: 'util.CharCode.ENQUAD' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EENQUADZ_i));
/* export: 'util.CharCode.EMQUAD' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EEMQUADZ_i));
/* export: 'util.CharCode.ENSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EENSPACEZ_i));
/* export: 'util.CharCode.EMSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EEMSPACEZ_i));
/* export: 'util.CharCode.THREEPEREMSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ETHREEPEREMSPACEZ_i));
/* export: 'util.CharCode.FOURPEREMSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EFOURPEREMSPACEZ_i));
/* export: 'util.CharCode.SIXPEREMSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ESIXPEREMSPACEZ_i));
/* export: 'util.CharCode.FIGURESPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EFIGURESPACEZ_i));
/* export: 'util.CharCode.PUNCTUATIONSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EPUNCTUATIONSPACEZ_i));
/* export: 'util.CharCode.THINSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ETHINSPACEZ_i));
/* export: 'util.CharCode.HAIRSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EHAIRSPACEZ_i));
/* export: 'util.CharCode.ZEROWIDTHSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EZ5AEROWIDTHSPACEZ_i));
/* export: 'util.CharCode.NARROWNOBREAKSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ENARROWNOBREAKSPACEZ_i));
/* export: 'util.CharCode.IDEOGRAPHICSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EIDEOGRAPHICSPACEZ_i));
/* export: 'util.CharCode.MATHEMATICALSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EMATHEMATICALSPACEZ_i));
/* export: 'util.CharCode.OGHAM' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EOGHAMZ_i));
/* export: 'util.CharCode._' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2E_Z_i));
/* export: 'util.CharCode._0' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2E_0Z_i));
/* export: 'util.CharCode._1' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2E_1Z_i));
/* export: 'util.CharCode._2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2E_2Z_i));
/* export: 'util.CharCode._3' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2E_3Z_i));
/* export: 'util.CharCode._4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2E_4Z_i));
/* export: 'util.CharCode._5' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2E_5Z_i));
/* export: 'util.CharCode._6' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2E_6Z_i));
/* export: 'util.CharCode._7' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2E_7Z_i));
/* export: 'util.CharCode._8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2E_8Z_i));
/* export: 'util.CharCode._9' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2E_9Z_i));
/* export: 'util.CharCode.a' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EaZ_i));
/* export: 'util.CharCode.b' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EbZ_i));
/* export: 'util.CharCode.c' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EcZ_i));
/* export: 'util.CharCode.d' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EdZ_i));
/* export: 'util.CharCode.e' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EeZ_i));
/* export: 'util.CharCode.f' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EfZ_i));
/* export: 'util.CharCode.g' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EgZ_i));
/* export: 'util.CharCode.h' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EhZ_i));
/* export: 'util.CharCode.i' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EiZ_i));
/* export: 'util.CharCode.j' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EjZ_i));
/* export: 'util.CharCode.k' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EkZ_i));
/* export: 'util.CharCode.l' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ElZ_i));
/* export: 'util.CharCode.m' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EmZ_i));
/* export: 'util.CharCode.n' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EnZ_i));
/* export: 'util.CharCode.o' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EoZ_i));
/* export: 'util.CharCode.p' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EpZ_i));
/* export: 'util.CharCode.q' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EqZ_i));
/* export: 'util.CharCode.r' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ErZ_i));
/* export: 'util.CharCode.s' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EsZ_i));
/* export: 'util.CharCode.t' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EtZ_i));
/* export: 'util.CharCode.u' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EuZ_i));
/* export: 'util.CharCode.v' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EvZ_i));
/* export: 'util.CharCode.w' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EwZ_i));
/* export: 'util.CharCode.x' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ExZ_i));
/* export: 'util.CharCode.y' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EyZ_i));
/* export: 'util.CharCode.z' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EzZ_i));
/* export: 'util.CharCode.A' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EAZ_i));
/* export: 'util.CharCode.B' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EBZ_i));
/* export: 'util.CharCode.C' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ECZ_i));
/* export: 'util.CharCode.D' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EDZ_i));
/* export: 'util.CharCode.E' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EEZ_i));
/* export: 'util.CharCode.F' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EFZ_i));
/* export: 'util.CharCode.G' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EGZ_i));
/* export: 'util.CharCode.H' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EHZ_i));
/* export: 'util.CharCode.I' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EIZ_i));
/* export: 'util.CharCode.J' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EJZ_i));
/* export: 'util.CharCode.K' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EKZ_i));
/* export: 'util.CharCode.L' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ELZ_i));
/* export: 'util.CharCode.M' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EMZ_i));
/* export: 'util.CharCode.N' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ENZ_i));
/* export: 'util.CharCode.O' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EOZ_i));
/* export: 'util.CharCode.P' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EPZ_i));
/* export: 'util.CharCode.Q' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EQZ_i));
/* export: 'util.CharCode.R' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ERZ_i));
/* export: 'util.CharCode.S' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ESZ_i));
/* export: 'util.CharCode.T' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ETZ_i));
/* export: 'util.CharCode.U' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EUZ_i));
/* export: 'util.CharCode.V' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EVZ_i));
/* export: 'util.CharCode.W' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EWZ_i));
/* export: 'util.CharCode.X' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EXZ_i));
/* export: 'util.CharCode.Y' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EYZ_i));
/* export: 'util.CharCode.Z' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EZ5AZ_i));
/* export: 'util.CharCode.AMPERSAND' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EAMPERSANDZ_i));
/* export: 'util.CharCode.ASTERISK' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EASTERISKZ_i));
/* export: 'util.CharCode.AT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EATZ_i));
/* export: 'util.CharCode.BACKSLASH' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EBACKSLASHZ_i));
/* export: 'util.CharCode.BACKTICK' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EBACKTICKZ_i));
/* export: 'util.CharCode.BAR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EBARZ_i));
/* export: 'util.CharCode.CARET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ECARETZ_i));
/* export: 'util.CharCode.CLOSEBRACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ECLOSEBRACEZ_i));
/* export: 'util.CharCode.CLOSEBRACKET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ECLOSEBRACKETZ_i));
/* export: 'util.CharCode.CLOSEPAREN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ECLOSEPARENZ_i));
/* export: 'util.CharCode.COLON' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ECOLONZ_i));
/* export: 'util.CharCode.COMMA' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ECOMMAZ_i));
/* export: 'util.CharCode.DOLLAR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EDOLLARZ_i));
/* export: 'util.CharCode.DOT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EDOTZ_i));
/* export: 'util.CharCode.DOUBLEQUOTE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EDOUBLEQUOTEZ_i));
/* export: 'util.CharCode.EQUALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EEQUALSZ_i));
/* export: 'util.CharCode.EXCLAMATION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EEXCLAMATIONZ_i));
/* export: 'util.CharCode.GREATERTHAN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EGREATERTHANZ_i));
/* export: 'util.CharCode.HASH' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EHASHZ_i));
/* export: 'util.CharCode.LESSTHAN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ELESSTHANZ_i));
/* export: 'util.CharCode.MINUS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EMINUSZ_i));
/* export: 'util.CharCode.OPENBRACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EOPENBRACEZ_i));
/* export: 'util.CharCode.OPENBRACKET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EOPENBRACKETZ_i));
/* export: 'util.CharCode.OPENPAREN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EOPENPARENZ_i));
/* export: 'util.CharCode.PERCENT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EPERCENTZ_i));
/* export: 'util.CharCode.PLUS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EPLUSZ_i));
/* export: 'util.CharCode.QUESTION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EQUESTIONZ_i));
/* export: 'util.CharCode.SEMICOLON' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ESEMICOLONZ_i));
/* export: 'util.CharCode.SINGLEQUOTE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ESINGLEQUOTEZ_i));
/* export: 'util.CharCode.SLASH' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ESLASHZ_i));
/* export: 'util.CharCode.TILDE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ETILDEZ_i));
/* export: 'util.CharCode.BACKSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EBACKSPACEZ_i));
/* export: 'util.CharCode.FORMFEED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EFORMFEEDZ_i));
/* export: 'util.CharCode.BYTEORDERMARK' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EBYTEORDERMARKZ_i));
/* export: 'util.CharCode.TAB' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2ETABZ_i));
/* export: 'util.CharCode.VERTICALTAB' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2ECharCodeZ2EVERTICALTABZ_i));
/* export: 'util.isLineBreak' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2EisLineBreakZ_ii))(u32);
/* export: 'util.isWhiteSpace' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2EisWhiteSpaceZ_ii))(u32);
/* export: 'util.isDecimalDigit' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2EisDecimalDigitZ_ii))(u32);
/* export: 'util.isOctalDigit' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2EisOctalDigitZ_ii))(u32);
/* export: 'util.isTrivialAlphanum' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2EisTrivialAlphanumZ_ii))(u32);
/* export: 'util.isIdentifierStart' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2EisIdentifierStartZ_ii))(u32);
/* export: 'util.isKeywordCharacter' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2EisKeywordCharacterZ_ii))(u32);
/* export: 'util.isIdentifierPart' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2EisIdentifierPartZ_ii))(u32);
/* export: 'util.indent' */
extern void (*WASM_RT_ADD_PREFIX(Z_utilZ2EindentZ_vii))(u32, u32);
/* export: 'util.v128_zero' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_utilZ2Ev128_zeroZ_i));
/* export: 'NodeKind.SOURCE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ESOURCEZ_i));
/* export: 'NodeKind.NAMEDTYPE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ENAMEDTYPEZ_i));
/* export: 'NodeKind.FUNCTIONTYPE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EFUNCTIONTYPEZ_i));
/* export: 'NodeKind.TYPENAME' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ETYPENAMEZ_i));
/* export: 'NodeKind.TYPEPARAMETER' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ETYPEPARAMETERZ_i));
/* export: 'NodeKind.PARAMETER' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EPARAMETERZ_i));
/* export: 'NodeKind.IDENTIFIER' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EIDENTIFIERZ_i));
/* export: 'NodeKind.ASSERTION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EASSERTIONZ_i));
/* export: 'NodeKind.BINARY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EBINARYZ_i));
/* export: 'NodeKind.CALL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ECALLZ_i));
/* export: 'NodeKind.CLASS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ECLASSZ_i));
/* export: 'NodeKind.COMMA' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ECOMMAZ_i));
/* export: 'NodeKind.ELEMENTACCESS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EELEMENTACCESSZ_i));
/* export: 'NodeKind.FALSE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EFALSEZ_i));
/* export: 'NodeKind.FUNCTION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EFUNCTIONZ_i));
/* export: 'NodeKind.INSTANCEOF' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EINSTANCEOFZ_i));
/* export: 'NodeKind.LITERAL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ELITERALZ_i));
/* export: 'NodeKind.NEW' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ENEWZ_i));
/* export: 'NodeKind.NULL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ENULLZ_i));
/* export: 'NodeKind.OMITTED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EOMITTEDZ_i));
/* export: 'NodeKind.PARENTHESIZED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EPARENTHESIZ5AEDZ_i));
/* export: 'NodeKind.PROPERTYACCESS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EPROPERTYACCESSZ_i));
/* export: 'NodeKind.TERNARY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ETERNARYZ_i));
/* export: 'NodeKind.SUPER' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ESUPERZ_i));
/* export: 'NodeKind.THIS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ETHISZ_i));
/* export: 'NodeKind.TRUE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ETRUEZ_i));
/* export: 'NodeKind.CONSTRUCTOR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ECONSTRUCTORZ_i));
/* export: 'NodeKind.UNARYPOSTFIX' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EUNARYPOSTFIXZ_i));
/* export: 'NodeKind.UNARYPREFIX' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EUNARYPREFIXZ_i));
/* export: 'NodeKind.BLOCK' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EBLOCKZ_i));
/* export: 'NodeKind.BREAK' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EBREAKZ_i));
/* export: 'NodeKind.CONTINUE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ECONTINUEZ_i));
/* export: 'NodeKind.DO' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EDOZ_i));
/* export: 'NodeKind.EMPTY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EEMPTYZ_i));
/* export: 'NodeKind.EXPORT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EEXPORTZ_i));
/* export: 'NodeKind.EXPORTDEFAULT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EEXPORTDEFAULTZ_i));
/* export: 'NodeKind.EXPORTIMPORT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EEXPORTIMPORTZ_i));
/* export: 'NodeKind.EXPRESSION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EEXPRESSIONZ_i));
/* export: 'NodeKind.FOR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EFORZ_i));
/* export: 'NodeKind.FOROF' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EFOROFZ_i));
/* export: 'NodeKind.IF' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EIFZ_i));
/* export: 'NodeKind.IMPORT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EIMPORTZ_i));
/* export: 'NodeKind.RETURN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ERETURNZ_i));
/* export: 'NodeKind.SWITCH' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ESWITCHZ_i));
/* export: 'NodeKind.THROW' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ETHROWZ_i));
/* export: 'NodeKind.TRY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ETRYZ_i));
/* export: 'NodeKind.VARIABLE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EVARIABLEZ_i));
/* export: 'NodeKind.VOID' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EVOIDZ_i));
/* export: 'NodeKind.WHILE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EWHILEZ_i));
/* export: 'NodeKind.CLASSDECLARATION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ECLASSDECLARATIONZ_i));
/* export: 'NodeKind.ENUMDECLARATION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EENUMDECLARATIONZ_i));
/* export: 'NodeKind.ENUMVALUEDECLARATION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EENUMVALUEDECLARATIONZ_i));
/* export: 'NodeKind.FIELDDECLARATION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EFIELDDECLARATIONZ_i));
/* export: 'NodeKind.FUNCTIONDECLARATION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EFUNCTIONDECLARATIONZ_i));
/* export: 'NodeKind.IMPORTDECLARATION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EIMPORTDECLARATIONZ_i));
/* export: 'NodeKind.INTERFACEDECLARATION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EINTERFACEDECLARATIONZ_i));
/* export: 'NodeKind.METHODDECLARATION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EMETHODDECLARATIONZ_i));
/* export: 'NodeKind.NAMESPACEDECLARATION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ENAMESPACEDECLARATIONZ_i));
/* export: 'NodeKind.TYPEDECLARATION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ETYPEDECLARATIONZ_i));
/* export: 'NodeKind.VARIABLEDECLARATION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EVARIABLEDECLARATIONZ_i));
/* export: 'NodeKind.DECORATOR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EDECORATORZ_i));
/* export: 'NodeKind.EXPORTMEMBER' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EEXPORTMEMBERZ_i));
/* export: 'NodeKind.SWITCHCASE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ESWITCHCASEZ_i));
/* export: 'NodeKind.INDEXSIGNATURE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2EINDEXSIGNATUREZ_i));
/* export: 'NodeKind.COMMENT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeKindZ2ECOMMENTZ_i));
/* export: 'Node' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ_i));
/* export: 'Node#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ23getZ3AkindZ_ii))(u32);
/* export: 'Node#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_NodeZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'Node#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ23getZ3ArangeZ_ii))(u32);
/* export: 'Node#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_NodeZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'Node#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'Node#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'Node#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'Node#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'Node#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'Node#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'Node.createSimpleTypeName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateSimpleTypeNameZ_iii))(u32, u32);
/* export: 'Node.createNamedType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateNamedTypeZ_iiiii))(u32, u32, u32, u32);
/* export: 'Node.createFunctionType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateFunctionTypeZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Node.createOmittedType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateOmittedTypeZ_ii))(u32);
/* export: 'Node.createTypeParameter' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateTypeParameterZ_iiiii))(u32, u32, u32, u32);
/* export: 'Node.createParameter' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateParameterZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Node.createDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateDecoratorZ_iiii))(u32, u32, u32);
/* export: 'Node.createComment' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateCommentZ_iiii))(u32, u32, u32);
/* export: 'Node.createIdentifierExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateIdentifierExpressionZ_iiii))(u32, u32, u32);
/* export: 'Node.createEmptyIdentifierExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateEmptyIdentifierExpressionZ_ii))(u32);
/* export: 'Node.createArrayLiteralExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateArrayLiteralExpressionZ_iii))(u32, u32);
/* export: 'Node.createAssertionExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateAssertionExpressionZ_iiiii))(u32, u32, u32, u32);
/* export: 'Node.createBinaryExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateBinaryExpressionZ_iiiii))(u32, u32, u32, u32);
/* export: 'Node.createCallExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateCallExpressionZ_iiiii))(u32, u32, u32, u32);
/* export: 'Node.createClassExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateClassExpressionZ_ii))(u32);
/* export: 'Node.createCommaExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateCommaExpressionZ_iii))(u32, u32);
/* export: 'Node.createConstructorExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateConstructorExpressionZ_ii))(u32);
/* export: 'Node.createElementAccessExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateElementAccessExpressionZ_iiii))(u32, u32, u32);
/* export: 'Node.createFalseExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateFalseExpressionZ_ii))(u32);
/* export: 'Node.createFloatLiteralExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateFloatLiteralExpressionZ_idi))(f64, u32);
/* export: 'Node.createFunctionExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateFunctionExpressionZ_ii))(u32);
/* export: 'Node.createInstanceOfExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateInstanceOfExpressionZ_iiii))(u32, u32, u32);
/* export: 'Node.createIntegerLiteralExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateIntegerLiteralExpressionZ_iji))(u64, u32);
/* export: 'Node.createNewExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateNewExpressionZ_iiiii))(u32, u32, u32, u32);
/* export: 'Node.createNullExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateNullExpressionZ_ii))(u32);
/* export: 'Node.createObjectLiteralExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateObjectLiteralExpressionZ_iiii))(u32, u32, u32);
/* export: 'Node.createOmittedExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateOmittedExpressionZ_ii))(u32);
/* export: 'Node.createParenthesizedExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateParenthesizedExpressionZ_iii))(u32, u32);
/* export: 'Node.createPropertyAccessExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreatePropertyAccessExpressionZ_iiii))(u32, u32, u32);
/* export: 'Node.createRegexpLiteralExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateRegexpLiteralExpressionZ_iiii))(u32, u32, u32);
/* export: 'Node.createTernaryExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateTernaryExpressionZ_iiiii))(u32, u32, u32, u32);
/* export: 'Node.createStringLiteralExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateStringLiteralExpressionZ_iii))(u32, u32);
/* export: 'Node.createSuperExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateSuperExpressionZ_ii))(u32);
/* export: 'Node.createThisExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateThisExpressionZ_ii))(u32);
/* export: 'Node.createTrueExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateTrueExpressionZ_ii))(u32);
/* export: 'Node.createUnaryPostfixExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateUnaryPostfixExpressionZ_iiii))(u32, u32, u32);
/* export: 'Node.createUnaryPrefixExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateUnaryPrefixExpressionZ_iiii))(u32, u32, u32);
/* export: 'Node.createBlockStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateBlockStatementZ_iii))(u32, u32);
/* export: 'Node.createBreakStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateBreakStatementZ_iii))(u32, u32);
/* export: 'Node.createClassDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateClassDeclarationZ_iiiiiiiii))(u32, u32, u32, u32, u32, u32, u32, u32);
/* export: 'Node.createContinueStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateContinueStatementZ_iii))(u32, u32);
/* export: 'Node.createDoStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateDoStatementZ_iiii))(u32, u32, u32);
/* export: 'Node.createEmptyStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateEmptyStatementZ_ii))(u32);
/* export: 'Node.createEnumDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateEnumDeclarationZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Node.createEnumValueDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateEnumValueDeclarationZ_iiiii))(u32, u32, u32, u32);
/* export: 'Node.createExportStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateExportStatementZ_iiiii))(u32, u32, u32, u32);
/* export: 'Node.createExportDefaultStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateExportDefaultStatementZ_iii))(u32, u32);
/* export: 'Node.createExportImportStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateExportImportStatementZ_iiii))(u32, u32, u32);
/* export: 'Node.createExportMember' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateExportMemberZ_iiii))(u32, u32, u32);
/* export: 'Node.createExpressionStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateExpressionStatementZ_ii))(u32);
/* export: 'Node.createIfStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateIfStatementZ_iiiii))(u32, u32, u32, u32);
/* export: 'Node.createImportStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateImportStatementZ_iiii))(u32, u32, u32);
/* export: 'Node.createWildcardImportStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateWildcardImportStatementZ_iiii))(u32, u32, u32);
/* export: 'Node.createImportDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateImportDeclarationZ_iiii))(u32, u32, u32);
/* export: 'Node.createInterfaceDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateInterfaceDeclarationZ_iiiiiiiii))(u32, u32, u32, u32, u32, u32, u32, u32);
/* export: 'Node.createFieldDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateFieldDeclarationZ_iiiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Node.createForStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateForStatementZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Node.createForOfStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateForOfStatementZ_iiiii))(u32, u32, u32, u32);
/* export: 'Node.createFunctionDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateFunctionDeclarationZ_iiiiiiiii))(u32, u32, u32, u32, u32, u32, u32, u32);
/* export: 'Node.createIndexSignature' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateIndexSignatureZ_iiiii))(u32, u32, u32, u32);
/* export: 'Node.createMethodDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateMethodDeclarationZ_iiiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Node.createNamespaceDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateNamespaceDeclarationZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Node.createReturnStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateReturnStatementZ_iii))(u32, u32);
/* export: 'Node.createSwitchStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateSwitchStatementZ_iiii))(u32, u32, u32);
/* export: 'Node.createSwitchCase' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateSwitchCaseZ_iiii))(u32, u32, u32);
/* export: 'Node.createThrowStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateThrowStatementZ_iii))(u32, u32);
/* export: 'Node.createTryStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateTryStatementZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Node.createTypeDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateTypeDeclarationZ_iiiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Node.createVariableStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateVariableStatementZ_iiii))(u32, u32, u32);
/* export: 'Node.createVariableDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateVariableDeclarationZ_iiiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Node.createVoidStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateVoidStatementZ_iii))(u32, u32);
/* export: 'Node.createWhileStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NodeZ2EcreateWhileStatementZ_iiii))(u32, u32, u32);
/* export: 'TypeNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeNodeZ_i));
/* export: 'TypeNode#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeNodeZ23getZ3AkindZ_ii))(u32);
/* export: 'TypeNode#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeNodeZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'TypeNode#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeNodeZ23getZ3ArangeZ_ii))(u32);
/* export: 'TypeNode#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeNodeZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'TypeNode#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeNodeZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'TypeNode#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeNodeZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'TypeNode#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeNodeZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'TypeNode#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeNodeZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'TypeNode#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeNodeZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'TypeNode#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeNodeZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'TypeNode#get:isNullable' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeNodeZ23getZ3AisNullableZ_ii))(u32);
/* export: 'TypeNode#set:isNullable' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeNodeZ23setZ3AisNullableZ_vii))(u32, u32);
/* export: 'TypeNode#hasGenericComponent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeNodeZ23hasGenericComponentZ_iii))(u32, u32);
/* export: 'TypeName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeNameZ_i));
/* export: 'TypeName#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeNameZ23getZ3AkindZ_ii))(u32);
/* export: 'TypeName#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeNameZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'TypeName#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeNameZ23getZ3ArangeZ_ii))(u32);
/* export: 'TypeName#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeNameZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'TypeName#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeNameZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'TypeName#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeNameZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'TypeName#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeNameZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'TypeName#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeNameZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'TypeName#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeNameZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'TypeName#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeNameZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'TypeName#get:identifier' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeNameZ23getZ3AidentifierZ_ii))(u32);
/* export: 'TypeName#set:identifier' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeNameZ23setZ3AidentifierZ_vii))(u32, u32);
/* export: 'TypeName#get:next' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeNameZ23getZ3AnextZ_ii))(u32);
/* export: 'TypeName#set:next' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeNameZ23setZ3AnextZ_vii))(u32, u32);
/* export: 'NamedTypeNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamedTypeNodeZ_i));
/* export: 'NamedTypeNode#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamedTypeNodeZ23getZ3AkindZ_ii))(u32);
/* export: 'NamedTypeNode#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamedTypeNodeZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'NamedTypeNode#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamedTypeNodeZ23getZ3ArangeZ_ii))(u32);
/* export: 'NamedTypeNode#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamedTypeNodeZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'NamedTypeNode#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamedTypeNodeZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'NamedTypeNode#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamedTypeNodeZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'NamedTypeNode#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamedTypeNodeZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'NamedTypeNode#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamedTypeNodeZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'NamedTypeNode#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamedTypeNodeZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'NamedTypeNode#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamedTypeNodeZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'NamedTypeNode#get:isNullable' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamedTypeNodeZ23getZ3AisNullableZ_ii))(u32);
/* export: 'NamedTypeNode#set:isNullable' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamedTypeNodeZ23setZ3AisNullableZ_vii))(u32, u32);
/* export: 'NamedTypeNode#hasGenericComponent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamedTypeNodeZ23hasGenericComponentZ_iii))(u32, u32);
/* export: 'NamedTypeNode#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamedTypeNodeZ23getZ3AnameZ_ii))(u32);
/* export: 'NamedTypeNode#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamedTypeNodeZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'NamedTypeNode#get:typeArguments' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamedTypeNodeZ23getZ3AtypeArgumentsZ_ii))(u32);
/* export: 'NamedTypeNode#set:typeArguments' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamedTypeNodeZ23setZ3AtypeArgumentsZ_vii))(u32, u32);
/* export: 'NamedTypeNode#get:hasTypeArguments' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamedTypeNodeZ23getZ3AhasTypeArgumentsZ_ii))(u32);
/* export: 'FunctionTypeNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionTypeNodeZ_i));
/* export: 'FunctionTypeNode#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionTypeNodeZ23getZ3AkindZ_ii))(u32);
/* export: 'FunctionTypeNode#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionTypeNodeZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'FunctionTypeNode#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionTypeNodeZ23getZ3ArangeZ_ii))(u32);
/* export: 'FunctionTypeNode#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionTypeNodeZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'FunctionTypeNode#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionTypeNodeZ23constructorZ_iiiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'FunctionTypeNode#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionTypeNodeZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'FunctionTypeNode#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionTypeNodeZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'FunctionTypeNode#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionTypeNodeZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'FunctionTypeNode#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionTypeNodeZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'FunctionTypeNode#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionTypeNodeZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'FunctionTypeNode#get:isNullable' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionTypeNodeZ23getZ3AisNullableZ_ii))(u32);
/* export: 'FunctionTypeNode#set:isNullable' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionTypeNodeZ23setZ3AisNullableZ_vii))(u32, u32);
/* export: 'FunctionTypeNode#hasGenericComponent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionTypeNodeZ23hasGenericComponentZ_iii))(u32, u32);
/* export: 'FunctionTypeNode#get:parameters' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionTypeNodeZ23getZ3AparametersZ_ii))(u32);
/* export: 'FunctionTypeNode#set:parameters' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionTypeNodeZ23setZ3AparametersZ_vii))(u32, u32);
/* export: 'FunctionTypeNode#get:returnType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionTypeNodeZ23getZ3AreturnTypeZ_ii))(u32);
/* export: 'FunctionTypeNode#set:returnType' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionTypeNodeZ23setZ3AreturnTypeZ_vii))(u32, u32);
/* export: 'FunctionTypeNode#get:explicitThisType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionTypeNodeZ23getZ3AexplicitThisTypeZ_ii))(u32);
/* export: 'FunctionTypeNode#set:explicitThisType' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionTypeNodeZ23setZ3AexplicitThisTypeZ_vii))(u32, u32);
/* export: 'TypeParameterNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeParameterNodeZ_i));
/* export: 'TypeParameterNode#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeParameterNodeZ23getZ3AkindZ_ii))(u32);
/* export: 'TypeParameterNode#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeParameterNodeZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'TypeParameterNode#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeParameterNodeZ23getZ3ArangeZ_ii))(u32);
/* export: 'TypeParameterNode#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeParameterNodeZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'TypeParameterNode#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeParameterNodeZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'TypeParameterNode#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeParameterNodeZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'TypeParameterNode#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeParameterNodeZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'TypeParameterNode#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeParameterNodeZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'TypeParameterNode#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeParameterNodeZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'TypeParameterNode#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeParameterNodeZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'TypeParameterNode#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeParameterNodeZ23getZ3AnameZ_ii))(u32);
/* export: 'TypeParameterNode#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeParameterNodeZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'TypeParameterNode#get:extendsType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeParameterNodeZ23getZ3AextendsTypeZ_ii))(u32);
/* export: 'TypeParameterNode#set:extendsType' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeParameterNodeZ23setZ3AextendsTypeZ_vii))(u32, u32);
/* export: 'TypeParameterNode#get:defaultType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeParameterNodeZ23getZ3AdefaultTypeZ_ii))(u32);
/* export: 'TypeParameterNode#set:defaultType' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeParameterNodeZ23setZ3AdefaultTypeZ_vii))(u32, u32);
/* export: 'ParameterKind.DEFAULT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterKindZ2EDEFAULTZ_i));
/* export: 'ParameterKind.OPTIONAL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterKindZ2EOPTIONALZ_i));
/* export: 'ParameterKind.REST' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterKindZ2ERESTZ_i));
/* export: 'ParameterNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ_i));
/* export: 'ParameterNode#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23getZ3AkindZ_ii))(u32);
/* export: 'ParameterNode#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'ParameterNode#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23getZ3ArangeZ_ii))(u32);
/* export: 'ParameterNode#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'ParameterNode#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23constructorZ_iiiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'ParameterNode#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'ParameterNode#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'ParameterNode#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'ParameterNode#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'ParameterNode#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'ParameterNode#get:parameterKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23getZ3AparameterKindZ_ii))(u32);
/* export: 'ParameterNode#set:parameterKind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23setZ3AparameterKindZ_vii))(u32, u32);
/* export: 'ParameterNode#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23getZ3AnameZ_ii))(u32);
/* export: 'ParameterNode#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'ParameterNode#get:type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23getZ3AtypeZ_ii))(u32);
/* export: 'ParameterNode#set:type' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23setZ3AtypeZ_vii))(u32, u32);
/* export: 'ParameterNode#get:initializer' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23getZ3AinitializerZ_ii))(u32);
/* export: 'ParameterNode#set:initializer' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23setZ3AinitializerZ_vii))(u32, u32);
/* export: 'ParameterNode#get:implicitFieldDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23getZ3AimplicitFieldDeclarationZ_ii))(u32);
/* export: 'ParameterNode#set:implicitFieldDeclaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23setZ3AimplicitFieldDeclarationZ_vii))(u32, u32);
/* export: 'ParameterNode#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23getZ3AflagsZ_ii))(u32);
/* export: 'ParameterNode#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'ParameterNode#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23isZ_iii))(u32, u32);
/* export: 'ParameterNode#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23isAnyZ_iii))(u32, u32);
/* export: 'ParameterNode#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParameterNodeZ23setZ_vii))(u32, u32);
/* export: 'DecoratorKind.CUSTOM' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorKindZ2ECUSTOMZ_i));
/* export: 'DecoratorKind.GLOBAL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorKindZ2EGLOBALZ_i));
/* export: 'DecoratorKind.OPERATOR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorKindZ2EOPERATORZ_i));
/* export: 'DecoratorKind.OPERATOR_BINARY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorKindZ2EOPERATOR_BINARYZ_i));
/* export: 'DecoratorKind.OPERATOR_PREFIX' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorKindZ2EOPERATOR_PREFIXZ_i));
/* export: 'DecoratorKind.OPERATOR_POSTFIX' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorKindZ2EOPERATOR_POSTFIXZ_i));
/* export: 'DecoratorKind.UNMANAGED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorKindZ2EUNMANAGEDZ_i));
/* export: 'DecoratorKind.FINAL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorKindZ2EFINALZ_i));
/* export: 'DecoratorKind.INLINE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorKindZ2EINLINEZ_i));
/* export: 'DecoratorKind.EXTERNAL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorKindZ2EEXTERNALZ_i));
/* export: 'DecoratorKind.BUILTIN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorKindZ2EBUILTINZ_i));
/* export: 'DecoratorKind.LAZY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorKindZ2ELAZ5AYZ_i));
/* export: 'DecoratorKind.UNSAFE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorKindZ2EUNSAFEZ_i));
/* export: 'DecoratorKind.fromNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorKindZ2EfromNodeZ_ii))(u32);
/* export: 'DecoratorNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorNodeZ_i));
/* export: 'DecoratorNode#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorNodeZ23getZ3AkindZ_ii))(u32);
/* export: 'DecoratorNode#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_DecoratorNodeZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'DecoratorNode#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorNodeZ23getZ3ArangeZ_ii))(u32);
/* export: 'DecoratorNode#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_DecoratorNodeZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'DecoratorNode#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorNodeZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'DecoratorNode#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorNodeZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'DecoratorNode#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorNodeZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'DecoratorNode#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorNodeZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'DecoratorNode#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorNodeZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'DecoratorNode#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorNodeZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'DecoratorNode#get:decoratorKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorNodeZ23getZ3AdecoratorKindZ_ii))(u32);
/* export: 'DecoratorNode#set:decoratorKind' */
extern void (*WASM_RT_ADD_PREFIX(Z_DecoratorNodeZ23setZ3AdecoratorKindZ_vii))(u32, u32);
/* export: 'DecoratorNode#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorNodeZ23getZ3AnameZ_ii))(u32);
/* export: 'DecoratorNode#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_DecoratorNodeZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'DecoratorNode#get:args' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorNodeZ23getZ3AargsZ_ii))(u32);
/* export: 'DecoratorNode#set:args' */
extern void (*WASM_RT_ADD_PREFIX(Z_DecoratorNodeZ23setZ3AargsZ_vii))(u32, u32);
/* export: 'CommentKind.LINE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommentKindZ2ELINEZ_i));
/* export: 'CommentKind.TRIPLE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommentKindZ2ETRIPLEZ_i));
/* export: 'CommentKind.BLOCK' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommentKindZ2EBLOCKZ_i));
/* export: 'CommentNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommentNodeZ_i));
/* export: 'CommentNode#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommentNodeZ23getZ3AkindZ_ii))(u32);
/* export: 'CommentNode#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_CommentNodeZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'CommentNode#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommentNodeZ23getZ3ArangeZ_ii))(u32);
/* export: 'CommentNode#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_CommentNodeZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'CommentNode#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommentNodeZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'CommentNode#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommentNodeZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'CommentNode#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommentNodeZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'CommentNode#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommentNodeZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'CommentNode#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommentNodeZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'CommentNode#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommentNodeZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'CommentNode#get:commentKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommentNodeZ23getZ3AcommentKindZ_ii))(u32);
/* export: 'CommentNode#set:commentKind' */
extern void (*WASM_RT_ADD_PREFIX(Z_CommentNodeZ23setZ3AcommentKindZ_vii))(u32, u32);
/* export: 'CommentNode#get:text' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommentNodeZ23getZ3AtextZ_ii))(u32);
/* export: 'CommentNode#set:text' */
extern void (*WASM_RT_ADD_PREFIX(Z_CommentNodeZ23setZ3AtextZ_vii))(u32, u32);
/* export: 'Expression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionZ_i));
/* export: 'Expression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'Expression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'Expression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'Expression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'Expression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'Expression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'Expression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'Expression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'Expression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'Expression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'IdentifierExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IdentifierExpressionZ_i));
/* export: 'IdentifierExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IdentifierExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'IdentifierExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_IdentifierExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'IdentifierExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IdentifierExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'IdentifierExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_IdentifierExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'IdentifierExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IdentifierExpressionZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'IdentifierExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IdentifierExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'IdentifierExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IdentifierExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'IdentifierExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IdentifierExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'IdentifierExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IdentifierExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'IdentifierExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IdentifierExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'IdentifierExpression#get:text' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IdentifierExpressionZ23getZ3AtextZ_ii))(u32);
/* export: 'IdentifierExpression#set:text' */
extern void (*WASM_RT_ADD_PREFIX(Z_IdentifierExpressionZ23setZ3AtextZ_vii))(u32, u32);
/* export: 'IdentifierExpression#get:isQuoted' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IdentifierExpressionZ23getZ3AisQuotedZ_ii))(u32);
/* export: 'IdentifierExpression#set:isQuoted' */
extern void (*WASM_RT_ADD_PREFIX(Z_IdentifierExpressionZ23setZ3AisQuotedZ_vii))(u32, u32);
/* export: 'LiteralKind.FLOAT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LiteralKindZ2EFLOATZ_i));
/* export: 'LiteralKind.INTEGER' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LiteralKindZ2EINTEGERZ_i));
/* export: 'LiteralKind.STRING' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LiteralKindZ2ESTRINGZ_i));
/* export: 'LiteralKind.REGEXP' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LiteralKindZ2EREGEXPZ_i));
/* export: 'LiteralKind.ARRAY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LiteralKindZ2EARRAYZ_i));
/* export: 'LiteralKind.OBJECT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LiteralKindZ2EOBJECTZ_i));
/* export: 'LiteralExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LiteralExpressionZ_i));
/* export: 'LiteralExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LiteralExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'LiteralExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_LiteralExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'LiteralExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LiteralExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'LiteralExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_LiteralExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'LiteralExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LiteralExpressionZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'LiteralExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LiteralExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'LiteralExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LiteralExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'LiteralExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LiteralExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'LiteralExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LiteralExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'LiteralExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LiteralExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'LiteralExpression#get:literalKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LiteralExpressionZ23getZ3AliteralKindZ_ii))(u32);
/* export: 'LiteralExpression#set:literalKind' */
extern void (*WASM_RT_ADD_PREFIX(Z_LiteralExpressionZ23setZ3AliteralKindZ_vii))(u32, u32);
/* export: 'ArrayLiteralExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ArrayLiteralExpressionZ_i));
/* export: 'ArrayLiteralExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ArrayLiteralExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'ArrayLiteralExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ArrayLiteralExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'ArrayLiteralExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ArrayLiteralExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'ArrayLiteralExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_ArrayLiteralExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'ArrayLiteralExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ArrayLiteralExpressionZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'ArrayLiteralExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ArrayLiteralExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'ArrayLiteralExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ArrayLiteralExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'ArrayLiteralExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ArrayLiteralExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'ArrayLiteralExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ArrayLiteralExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'ArrayLiteralExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ArrayLiteralExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'ArrayLiteralExpression#get:literalKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ArrayLiteralExpressionZ23getZ3AliteralKindZ_ii))(u32);
/* export: 'ArrayLiteralExpression#set:literalKind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ArrayLiteralExpressionZ23setZ3AliteralKindZ_vii))(u32, u32);
/* export: 'ArrayLiteralExpression#get:elementExpressions' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ArrayLiteralExpressionZ23getZ3AelementExpressionsZ_ii))(u32);
/* export: 'ArrayLiteralExpression#set:elementExpressions' */
extern void (*WASM_RT_ADD_PREFIX(Z_ArrayLiteralExpressionZ23setZ3AelementExpressionsZ_vii))(u32, u32);
/* export: 'AssertionKind.PREFIX' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_AssertionKindZ2EPREFIXZ_i));
/* export: 'AssertionKind.AS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_AssertionKindZ2EASZ_i));
/* export: 'AssertionKind.NONNULL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_AssertionKindZ2ENONNULLZ_i));
/* export: 'AssertionKind.CONST' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_AssertionKindZ2ECONSTZ_i));
/* export: 'AssertionExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_AssertionExpressionZ_i));
/* export: 'AssertionExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_AssertionExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'AssertionExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_AssertionExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'AssertionExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_AssertionExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'AssertionExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_AssertionExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'AssertionExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_AssertionExpressionZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'AssertionExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_AssertionExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'AssertionExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_AssertionExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'AssertionExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_AssertionExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'AssertionExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_AssertionExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'AssertionExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_AssertionExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'AssertionExpression#get:assertionKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_AssertionExpressionZ23getZ3AassertionKindZ_ii))(u32);
/* export: 'AssertionExpression#set:assertionKind' */
extern void (*WASM_RT_ADD_PREFIX(Z_AssertionExpressionZ23setZ3AassertionKindZ_vii))(u32, u32);
/* export: 'AssertionExpression#get:expression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_AssertionExpressionZ23getZ3AexpressionZ_ii))(u32);
/* export: 'AssertionExpression#set:expression' */
extern void (*WASM_RT_ADD_PREFIX(Z_AssertionExpressionZ23setZ3AexpressionZ_vii))(u32, u32);
/* export: 'AssertionExpression#get:toType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_AssertionExpressionZ23getZ3AtoTypeZ_ii))(u32);
/* export: 'AssertionExpression#set:toType' */
extern void (*WASM_RT_ADD_PREFIX(Z_AssertionExpressionZ23setZ3AtoTypeZ_vii))(u32, u32);
/* export: 'BinaryExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryExpressionZ_i));
/* export: 'BinaryExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'BinaryExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_BinaryExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'BinaryExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'BinaryExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_BinaryExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'BinaryExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryExpressionZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'BinaryExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'BinaryExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'BinaryExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'BinaryExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'BinaryExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'BinaryExpression#get:operator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryExpressionZ23getZ3AoperatorZ_ii))(u32);
/* export: 'BinaryExpression#set:operator' */
extern void (*WASM_RT_ADD_PREFIX(Z_BinaryExpressionZ23setZ3AoperatorZ_vii))(u32, u32);
/* export: 'BinaryExpression#get:left' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryExpressionZ23getZ3AleftZ_ii))(u32);
/* export: 'BinaryExpression#set:left' */
extern void (*WASM_RT_ADD_PREFIX(Z_BinaryExpressionZ23setZ3AleftZ_vii))(u32, u32);
/* export: 'BinaryExpression#get:right' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryExpressionZ23getZ3ArightZ_ii))(u32);
/* export: 'BinaryExpression#set:right' */
extern void (*WASM_RT_ADD_PREFIX(Z_BinaryExpressionZ23setZ3ArightZ_vii))(u32, u32);
/* export: 'CallExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CallExpressionZ_i));
/* export: 'CallExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CallExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'CallExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_CallExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'CallExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CallExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'CallExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_CallExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'CallExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CallExpressionZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'CallExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CallExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'CallExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CallExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'CallExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CallExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'CallExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CallExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'CallExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CallExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'CallExpression#get:expression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CallExpressionZ23getZ3AexpressionZ_ii))(u32);
/* export: 'CallExpression#set:expression' */
extern void (*WASM_RT_ADD_PREFIX(Z_CallExpressionZ23setZ3AexpressionZ_vii))(u32, u32);
/* export: 'CallExpression#get:typeArguments' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CallExpressionZ23getZ3AtypeArgumentsZ_ii))(u32);
/* export: 'CallExpression#set:typeArguments' */
extern void (*WASM_RT_ADD_PREFIX(Z_CallExpressionZ23setZ3AtypeArgumentsZ_vii))(u32, u32);
/* export: 'CallExpression#get:args' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CallExpressionZ23getZ3AargsZ_ii))(u32);
/* export: 'CallExpression#set:args' */
extern void (*WASM_RT_ADD_PREFIX(Z_CallExpressionZ23setZ3AargsZ_vii))(u32, u32);
/* export: 'CallExpression#get:typeArgumentsRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CallExpressionZ23getZ3AtypeArgumentsRangeZ_ii))(u32);
/* export: 'CallExpression#get:argumentsRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CallExpressionZ23getZ3AargumentsRangeZ_ii))(u32);
/* export: 'ClassExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassExpressionZ_i));
/* export: 'ClassExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'ClassExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'ClassExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'ClassExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'ClassExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassExpressionZ23constructorZ_iii))(u32, u32);
/* export: 'ClassExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'ClassExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'ClassExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'ClassExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'ClassExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'ClassExpression#get:declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassExpressionZ23getZ3AdeclarationZ_ii))(u32);
/* export: 'ClassExpression#set:declaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassExpressionZ23setZ3AdeclarationZ_vii))(u32, u32);
/* export: 'CommaExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommaExpressionZ_i));
/* export: 'CommaExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommaExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'CommaExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_CommaExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'CommaExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommaExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'CommaExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_CommaExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'CommaExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommaExpressionZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'CommaExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommaExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'CommaExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommaExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'CommaExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommaExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'CommaExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommaExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'CommaExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommaExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'CommaExpression#get:expressions' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommaExpressionZ23getZ3AexpressionsZ_ii))(u32);
/* export: 'CommaExpression#set:expressions' */
extern void (*WASM_RT_ADD_PREFIX(Z_CommaExpressionZ23setZ3AexpressionsZ_vii))(u32, u32);
/* export: 'ConstructorExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConstructorExpressionZ_i));
/* export: 'ConstructorExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConstructorExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'ConstructorExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ConstructorExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'ConstructorExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConstructorExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'ConstructorExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_ConstructorExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'ConstructorExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConstructorExpressionZ23constructorZ_iii))(u32, u32);
/* export: 'ConstructorExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConstructorExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'ConstructorExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConstructorExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'ConstructorExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConstructorExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'ConstructorExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConstructorExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'ConstructorExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConstructorExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'ConstructorExpression#get:text' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConstructorExpressionZ23getZ3AtextZ_ii))(u32);
/* export: 'ConstructorExpression#set:text' */
extern void (*WASM_RT_ADD_PREFIX(Z_ConstructorExpressionZ23setZ3AtextZ_vii))(u32, u32);
/* export: 'ConstructorExpression#get:isQuoted' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConstructorExpressionZ23getZ3AisQuotedZ_ii))(u32);
/* export: 'ConstructorExpression#set:isQuoted' */
extern void (*WASM_RT_ADD_PREFIX(Z_ConstructorExpressionZ23setZ3AisQuotedZ_vii))(u32, u32);
/* export: 'ElementAccessExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementAccessExpressionZ_i));
/* export: 'ElementAccessExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementAccessExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'ElementAccessExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ElementAccessExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'ElementAccessExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementAccessExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'ElementAccessExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_ElementAccessExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'ElementAccessExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementAccessExpressionZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'ElementAccessExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementAccessExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'ElementAccessExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementAccessExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'ElementAccessExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementAccessExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'ElementAccessExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementAccessExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'ElementAccessExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementAccessExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'ElementAccessExpression#get:expression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementAccessExpressionZ23getZ3AexpressionZ_ii))(u32);
/* export: 'ElementAccessExpression#set:expression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ElementAccessExpressionZ23setZ3AexpressionZ_vii))(u32, u32);
/* export: 'ElementAccessExpression#get:elementExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementAccessExpressionZ23getZ3AelementExpressionZ_ii))(u32);
/* export: 'ElementAccessExpression#set:elementExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ElementAccessExpressionZ23setZ3AelementExpressionZ_vii))(u32, u32);
/* export: 'FloatLiteralExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FloatLiteralExpressionZ_i));
/* export: 'FloatLiteralExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FloatLiteralExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'FloatLiteralExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_FloatLiteralExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'FloatLiteralExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FloatLiteralExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'FloatLiteralExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_FloatLiteralExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'FloatLiteralExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FloatLiteralExpressionZ23constructorZ_iidi))(u32, f64, u32);
/* export: 'FloatLiteralExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FloatLiteralExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'FloatLiteralExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FloatLiteralExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'FloatLiteralExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FloatLiteralExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'FloatLiteralExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FloatLiteralExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'FloatLiteralExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FloatLiteralExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'FloatLiteralExpression#get:literalKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FloatLiteralExpressionZ23getZ3AliteralKindZ_ii))(u32);
/* export: 'FloatLiteralExpression#set:literalKind' */
extern void (*WASM_RT_ADD_PREFIX(Z_FloatLiteralExpressionZ23setZ3AliteralKindZ_vii))(u32, u32);
/* export: 'FloatLiteralExpression#get:value' */
extern f64 (*WASM_RT_ADD_PREFIX(Z_FloatLiteralExpressionZ23getZ3AvalueZ_di))(u32);
/* export: 'FloatLiteralExpression#set:value' */
extern void (*WASM_RT_ADD_PREFIX(Z_FloatLiteralExpressionZ23setZ3AvalueZ_vid))(u32, f64);
/* export: 'FunctionExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionExpressionZ_i));
/* export: 'FunctionExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'FunctionExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'FunctionExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'FunctionExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'FunctionExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionExpressionZ23constructorZ_iii))(u32, u32);
/* export: 'FunctionExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'FunctionExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'FunctionExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'FunctionExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'FunctionExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'FunctionExpression#get:declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionExpressionZ23getZ3AdeclarationZ_ii))(u32);
/* export: 'FunctionExpression#set:declaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionExpressionZ23setZ3AdeclarationZ_vii))(u32, u32);
/* export: 'InstanceOfExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InstanceOfExpressionZ_i));
/* export: 'InstanceOfExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InstanceOfExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'InstanceOfExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_InstanceOfExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'InstanceOfExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InstanceOfExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'InstanceOfExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_InstanceOfExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'InstanceOfExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InstanceOfExpressionZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'InstanceOfExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InstanceOfExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'InstanceOfExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InstanceOfExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'InstanceOfExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InstanceOfExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'InstanceOfExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InstanceOfExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'InstanceOfExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InstanceOfExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'InstanceOfExpression#get:expression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InstanceOfExpressionZ23getZ3AexpressionZ_ii))(u32);
/* export: 'InstanceOfExpression#set:expression' */
extern void (*WASM_RT_ADD_PREFIX(Z_InstanceOfExpressionZ23setZ3AexpressionZ_vii))(u32, u32);
/* export: 'InstanceOfExpression#get:isType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InstanceOfExpressionZ23getZ3AisTypeZ_ii))(u32);
/* export: 'InstanceOfExpression#set:isType' */
extern void (*WASM_RT_ADD_PREFIX(Z_InstanceOfExpressionZ23setZ3AisTypeZ_vii))(u32, u32);
/* export: 'IntegerLiteralExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IntegerLiteralExpressionZ_i));
/* export: 'IntegerLiteralExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IntegerLiteralExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'IntegerLiteralExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_IntegerLiteralExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'IntegerLiteralExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IntegerLiteralExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'IntegerLiteralExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_IntegerLiteralExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'IntegerLiteralExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IntegerLiteralExpressionZ23constructorZ_iiji))(u32, u64, u32);
/* export: 'IntegerLiteralExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IntegerLiteralExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'IntegerLiteralExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IntegerLiteralExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'IntegerLiteralExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IntegerLiteralExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'IntegerLiteralExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IntegerLiteralExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'IntegerLiteralExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IntegerLiteralExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'IntegerLiteralExpression#get:literalKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IntegerLiteralExpressionZ23getZ3AliteralKindZ_ii))(u32);
/* export: 'IntegerLiteralExpression#set:literalKind' */
extern void (*WASM_RT_ADD_PREFIX(Z_IntegerLiteralExpressionZ23setZ3AliteralKindZ_vii))(u32, u32);
/* export: 'IntegerLiteralExpression#get:value' */
extern u64 (*WASM_RT_ADD_PREFIX(Z_IntegerLiteralExpressionZ23getZ3AvalueZ_ji))(u32);
/* export: 'IntegerLiteralExpression#set:value' */
extern void (*WASM_RT_ADD_PREFIX(Z_IntegerLiteralExpressionZ23setZ3AvalueZ_vij))(u32, u64);
/* export: 'NewExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NewExpressionZ_i));
/* export: 'NewExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NewExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'NewExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_NewExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'NewExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NewExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'NewExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_NewExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'NewExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NewExpressionZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'NewExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NewExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'NewExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NewExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'NewExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NewExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'NewExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NewExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'NewExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NewExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'NewExpression#get:typeName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NewExpressionZ23getZ3AtypeNameZ_ii))(u32);
/* export: 'NewExpression#set:typeName' */
extern void (*WASM_RT_ADD_PREFIX(Z_NewExpressionZ23setZ3AtypeNameZ_vii))(u32, u32);
/* export: 'NewExpression#get:typeArguments' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NewExpressionZ23getZ3AtypeArgumentsZ_ii))(u32);
/* export: 'NewExpression#set:typeArguments' */
extern void (*WASM_RT_ADD_PREFIX(Z_NewExpressionZ23setZ3AtypeArgumentsZ_vii))(u32, u32);
/* export: 'NewExpression#get:args' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NewExpressionZ23getZ3AargsZ_ii))(u32);
/* export: 'NewExpression#set:args' */
extern void (*WASM_RT_ADD_PREFIX(Z_NewExpressionZ23setZ3AargsZ_vii))(u32, u32);
/* export: 'NewExpression#get:typeArgumentsRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NewExpressionZ23getZ3AtypeArgumentsRangeZ_ii))(u32);
/* export: 'NewExpression#get:argumentsRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NewExpressionZ23getZ3AargumentsRangeZ_ii))(u32);
/* export: 'NullExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NullExpressionZ_i));
/* export: 'NullExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NullExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'NullExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_NullExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'NullExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NullExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'NullExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_NullExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'NullExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NullExpressionZ23constructorZ_iii))(u32, u32);
/* export: 'NullExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NullExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'NullExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NullExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'NullExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NullExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'NullExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NullExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'NullExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NullExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'NullExpression#get:text' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NullExpressionZ23getZ3AtextZ_ii))(u32);
/* export: 'NullExpression#set:text' */
extern void (*WASM_RT_ADD_PREFIX(Z_NullExpressionZ23setZ3AtextZ_vii))(u32, u32);
/* export: 'NullExpression#get:isQuoted' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NullExpressionZ23getZ3AisQuotedZ_ii))(u32);
/* export: 'NullExpression#set:isQuoted' */
extern void (*WASM_RT_ADD_PREFIX(Z_NullExpressionZ23setZ3AisQuotedZ_vii))(u32, u32);
/* export: 'ObjectLiteralExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ObjectLiteralExpressionZ_i));
/* export: 'ObjectLiteralExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ObjectLiteralExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'ObjectLiteralExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ObjectLiteralExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'ObjectLiteralExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ObjectLiteralExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'ObjectLiteralExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_ObjectLiteralExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'ObjectLiteralExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ObjectLiteralExpressionZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'ObjectLiteralExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ObjectLiteralExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'ObjectLiteralExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ObjectLiteralExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'ObjectLiteralExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ObjectLiteralExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'ObjectLiteralExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ObjectLiteralExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'ObjectLiteralExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ObjectLiteralExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'ObjectLiteralExpression#get:literalKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ObjectLiteralExpressionZ23getZ3AliteralKindZ_ii))(u32);
/* export: 'ObjectLiteralExpression#set:literalKind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ObjectLiteralExpressionZ23setZ3AliteralKindZ_vii))(u32, u32);
/* export: 'ObjectLiteralExpression#get:names' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ObjectLiteralExpressionZ23getZ3AnamesZ_ii))(u32);
/* export: 'ObjectLiteralExpression#set:names' */
extern void (*WASM_RT_ADD_PREFIX(Z_ObjectLiteralExpressionZ23setZ3AnamesZ_vii))(u32, u32);
/* export: 'ObjectLiteralExpression#get:values' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ObjectLiteralExpressionZ23getZ3AvaluesZ_ii))(u32);
/* export: 'ObjectLiteralExpression#set:values' */
extern void (*WASM_RT_ADD_PREFIX(Z_ObjectLiteralExpressionZ23setZ3AvaluesZ_vii))(u32, u32);
/* export: 'OmittedExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OmittedExpressionZ_i));
/* export: 'OmittedExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OmittedExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'OmittedExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_OmittedExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'OmittedExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OmittedExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'OmittedExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_OmittedExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'OmittedExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OmittedExpressionZ23constructorZ_iii))(u32, u32);
/* export: 'OmittedExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OmittedExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'OmittedExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OmittedExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'OmittedExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OmittedExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'OmittedExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OmittedExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'OmittedExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OmittedExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'ParenthesizedExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParenthesizedExpressionZ_i));
/* export: 'ParenthesizedExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParenthesizedExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'ParenthesizedExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParenthesizedExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'ParenthesizedExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParenthesizedExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'ParenthesizedExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParenthesizedExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'ParenthesizedExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParenthesizedExpressionZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'ParenthesizedExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParenthesizedExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'ParenthesizedExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParenthesizedExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'ParenthesizedExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParenthesizedExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'ParenthesizedExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParenthesizedExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'ParenthesizedExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParenthesizedExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'ParenthesizedExpression#get:expression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParenthesizedExpressionZ23getZ3AexpressionZ_ii))(u32);
/* export: 'ParenthesizedExpression#set:expression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParenthesizedExpressionZ23setZ3AexpressionZ_vii))(u32, u32);
/* export: 'PropertyAccessExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyAccessExpressionZ_i));
/* export: 'PropertyAccessExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyAccessExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'PropertyAccessExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyAccessExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'PropertyAccessExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyAccessExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'PropertyAccessExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyAccessExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'PropertyAccessExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyAccessExpressionZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'PropertyAccessExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyAccessExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'PropertyAccessExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyAccessExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'PropertyAccessExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyAccessExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'PropertyAccessExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyAccessExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'PropertyAccessExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyAccessExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'PropertyAccessExpression#get:expression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyAccessExpressionZ23getZ3AexpressionZ_ii))(u32);
/* export: 'PropertyAccessExpression#set:expression' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyAccessExpressionZ23setZ3AexpressionZ_vii))(u32, u32);
/* export: 'PropertyAccessExpression#get:property' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyAccessExpressionZ23getZ3ApropertyZ_ii))(u32);
/* export: 'PropertyAccessExpression#set:property' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyAccessExpressionZ23setZ3ApropertyZ_vii))(u32, u32);
/* export: 'RegexpLiteralExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RegexpLiteralExpressionZ_i));
/* export: 'RegexpLiteralExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RegexpLiteralExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'RegexpLiteralExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_RegexpLiteralExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'RegexpLiteralExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RegexpLiteralExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'RegexpLiteralExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_RegexpLiteralExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'RegexpLiteralExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RegexpLiteralExpressionZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'RegexpLiteralExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RegexpLiteralExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'RegexpLiteralExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RegexpLiteralExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'RegexpLiteralExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RegexpLiteralExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'RegexpLiteralExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RegexpLiteralExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'RegexpLiteralExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RegexpLiteralExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'RegexpLiteralExpression#get:literalKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RegexpLiteralExpressionZ23getZ3AliteralKindZ_ii))(u32);
/* export: 'RegexpLiteralExpression#set:literalKind' */
extern void (*WASM_RT_ADD_PREFIX(Z_RegexpLiteralExpressionZ23setZ3AliteralKindZ_vii))(u32, u32);
/* export: 'RegexpLiteralExpression#get:pattern' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RegexpLiteralExpressionZ23getZ3ApatternZ_ii))(u32);
/* export: 'RegexpLiteralExpression#set:pattern' */
extern void (*WASM_RT_ADD_PREFIX(Z_RegexpLiteralExpressionZ23setZ3ApatternZ_vii))(u32, u32);
/* export: 'RegexpLiteralExpression#get:patternFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RegexpLiteralExpressionZ23getZ3ApatternFlagsZ_ii))(u32);
/* export: 'RegexpLiteralExpression#set:patternFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_RegexpLiteralExpressionZ23setZ3ApatternFlagsZ_vii))(u32, u32);
/* export: 'TernaryExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TernaryExpressionZ_i));
/* export: 'TernaryExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TernaryExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'TernaryExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_TernaryExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'TernaryExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TernaryExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'TernaryExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_TernaryExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'TernaryExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TernaryExpressionZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'TernaryExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TernaryExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'TernaryExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TernaryExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'TernaryExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TernaryExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'TernaryExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TernaryExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'TernaryExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TernaryExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'TernaryExpression#get:condition' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TernaryExpressionZ23getZ3AconditionZ_ii))(u32);
/* export: 'TernaryExpression#set:condition' */
extern void (*WASM_RT_ADD_PREFIX(Z_TernaryExpressionZ23setZ3AconditionZ_vii))(u32, u32);
/* export: 'TernaryExpression#get:ifThen' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TernaryExpressionZ23getZ3AifThenZ_ii))(u32);
/* export: 'TernaryExpression#set:ifThen' */
extern void (*WASM_RT_ADD_PREFIX(Z_TernaryExpressionZ23setZ3AifThenZ_vii))(u32, u32);
/* export: 'TernaryExpression#get:ifElse' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TernaryExpressionZ23getZ3AifElseZ_ii))(u32);
/* export: 'TernaryExpression#set:ifElse' */
extern void (*WASM_RT_ADD_PREFIX(Z_TernaryExpressionZ23setZ3AifElseZ_vii))(u32, u32);
/* export: 'StringLiteralExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StringLiteralExpressionZ_i));
/* export: 'StringLiteralExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StringLiteralExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'StringLiteralExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_StringLiteralExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'StringLiteralExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StringLiteralExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'StringLiteralExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_StringLiteralExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'StringLiteralExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StringLiteralExpressionZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'StringLiteralExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StringLiteralExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'StringLiteralExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StringLiteralExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'StringLiteralExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StringLiteralExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'StringLiteralExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StringLiteralExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'StringLiteralExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StringLiteralExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'StringLiteralExpression#get:literalKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StringLiteralExpressionZ23getZ3AliteralKindZ_ii))(u32);
/* export: 'StringLiteralExpression#set:literalKind' */
extern void (*WASM_RT_ADD_PREFIX(Z_StringLiteralExpressionZ23setZ3AliteralKindZ_vii))(u32, u32);
/* export: 'StringLiteralExpression#get:value' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StringLiteralExpressionZ23getZ3AvalueZ_ii))(u32);
/* export: 'StringLiteralExpression#set:value' */
extern void (*WASM_RT_ADD_PREFIX(Z_StringLiteralExpressionZ23setZ3AvalueZ_vii))(u32, u32);
/* export: 'SuperExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SuperExpressionZ_i));
/* export: 'SuperExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SuperExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'SuperExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_SuperExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'SuperExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SuperExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'SuperExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_SuperExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'SuperExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SuperExpressionZ23constructorZ_iii))(u32, u32);
/* export: 'SuperExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SuperExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'SuperExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SuperExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'SuperExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SuperExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'SuperExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SuperExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'SuperExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SuperExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'SuperExpression#get:text' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SuperExpressionZ23getZ3AtextZ_ii))(u32);
/* export: 'SuperExpression#set:text' */
extern void (*WASM_RT_ADD_PREFIX(Z_SuperExpressionZ23setZ3AtextZ_vii))(u32, u32);
/* export: 'SuperExpression#get:isQuoted' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SuperExpressionZ23getZ3AisQuotedZ_ii))(u32);
/* export: 'SuperExpression#set:isQuoted' */
extern void (*WASM_RT_ADD_PREFIX(Z_SuperExpressionZ23setZ3AisQuotedZ_vii))(u32, u32);
/* export: 'ThisExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ThisExpressionZ_i));
/* export: 'ThisExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ThisExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'ThisExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ThisExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'ThisExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ThisExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'ThisExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_ThisExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'ThisExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ThisExpressionZ23constructorZ_iii))(u32, u32);
/* export: 'ThisExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ThisExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'ThisExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ThisExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'ThisExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ThisExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'ThisExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ThisExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'ThisExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ThisExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'ThisExpression#get:text' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ThisExpressionZ23getZ3AtextZ_ii))(u32);
/* export: 'ThisExpression#set:text' */
extern void (*WASM_RT_ADD_PREFIX(Z_ThisExpressionZ23setZ3AtextZ_vii))(u32, u32);
/* export: 'ThisExpression#get:isQuoted' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ThisExpressionZ23getZ3AisQuotedZ_ii))(u32);
/* export: 'ThisExpression#set:isQuoted' */
extern void (*WASM_RT_ADD_PREFIX(Z_ThisExpressionZ23setZ3AisQuotedZ_vii))(u32, u32);
/* export: 'TrueExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TrueExpressionZ_i));
/* export: 'TrueExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TrueExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'TrueExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_TrueExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'TrueExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TrueExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'TrueExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_TrueExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'TrueExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TrueExpressionZ23constructorZ_iii))(u32, u32);
/* export: 'TrueExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TrueExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'TrueExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TrueExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'TrueExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TrueExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'TrueExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TrueExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'TrueExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TrueExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'TrueExpression#get:text' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TrueExpressionZ23getZ3AtextZ_ii))(u32);
/* export: 'TrueExpression#set:text' */
extern void (*WASM_RT_ADD_PREFIX(Z_TrueExpressionZ23setZ3AtextZ_vii))(u32, u32);
/* export: 'TrueExpression#get:isQuoted' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TrueExpressionZ23getZ3AisQuotedZ_ii))(u32);
/* export: 'TrueExpression#set:isQuoted' */
extern void (*WASM_RT_ADD_PREFIX(Z_TrueExpressionZ23setZ3AisQuotedZ_vii))(u32, u32);
/* export: 'FalseExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FalseExpressionZ_i));
/* export: 'FalseExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FalseExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'FalseExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_FalseExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'FalseExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FalseExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'FalseExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_FalseExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'FalseExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FalseExpressionZ23constructorZ_iii))(u32, u32);
/* export: 'FalseExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FalseExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'FalseExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FalseExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'FalseExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FalseExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'FalseExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FalseExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'FalseExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FalseExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'FalseExpression#get:text' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FalseExpressionZ23getZ3AtextZ_ii))(u32);
/* export: 'FalseExpression#set:text' */
extern void (*WASM_RT_ADD_PREFIX(Z_FalseExpressionZ23setZ3AtextZ_vii))(u32, u32);
/* export: 'FalseExpression#get:isQuoted' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FalseExpressionZ23getZ3AisQuotedZ_ii))(u32);
/* export: 'FalseExpression#set:isQuoted' */
extern void (*WASM_RT_ADD_PREFIX(Z_FalseExpressionZ23setZ3AisQuotedZ_vii))(u32, u32);
/* export: 'UnaryExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryExpressionZ_i));
/* export: 'UnaryExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'UnaryExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_UnaryExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'UnaryExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'UnaryExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_UnaryExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'UnaryExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryExpressionZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'UnaryExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'UnaryExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'UnaryExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'UnaryExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'UnaryExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'UnaryExpression#get:operator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryExpressionZ23getZ3AoperatorZ_ii))(u32);
/* export: 'UnaryExpression#set:operator' */
extern void (*WASM_RT_ADD_PREFIX(Z_UnaryExpressionZ23setZ3AoperatorZ_vii))(u32, u32);
/* export: 'UnaryExpression#get:operand' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryExpressionZ23getZ3AoperandZ_ii))(u32);
/* export: 'UnaryExpression#set:operand' */
extern void (*WASM_RT_ADD_PREFIX(Z_UnaryExpressionZ23setZ3AoperandZ_vii))(u32, u32);
/* export: 'UnaryPostfixExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryPostfixExpressionZ_i));
/* export: 'UnaryPostfixExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryPostfixExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'UnaryPostfixExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_UnaryPostfixExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'UnaryPostfixExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryPostfixExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'UnaryPostfixExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_UnaryPostfixExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'UnaryPostfixExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryPostfixExpressionZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'UnaryPostfixExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryPostfixExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'UnaryPostfixExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryPostfixExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'UnaryPostfixExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryPostfixExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'UnaryPostfixExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryPostfixExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'UnaryPostfixExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryPostfixExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'UnaryPostfixExpression#get:operator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryPostfixExpressionZ23getZ3AoperatorZ_ii))(u32);
/* export: 'UnaryPostfixExpression#set:operator' */
extern void (*WASM_RT_ADD_PREFIX(Z_UnaryPostfixExpressionZ23setZ3AoperatorZ_vii))(u32, u32);
/* export: 'UnaryPostfixExpression#get:operand' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryPostfixExpressionZ23getZ3AoperandZ_ii))(u32);
/* export: 'UnaryPostfixExpression#set:operand' */
extern void (*WASM_RT_ADD_PREFIX(Z_UnaryPostfixExpressionZ23setZ3AoperandZ_vii))(u32, u32);
/* export: 'UnaryPrefixExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryPrefixExpressionZ_i));
/* export: 'UnaryPrefixExpression#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryPrefixExpressionZ23getZ3AkindZ_ii))(u32);
/* export: 'UnaryPrefixExpression#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_UnaryPrefixExpressionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'UnaryPrefixExpression#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryPrefixExpressionZ23getZ3ArangeZ_ii))(u32);
/* export: 'UnaryPrefixExpression#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_UnaryPrefixExpressionZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'UnaryPrefixExpression#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryPrefixExpressionZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'UnaryPrefixExpression#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryPrefixExpressionZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'UnaryPrefixExpression#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryPrefixExpressionZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'UnaryPrefixExpression#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryPrefixExpressionZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'UnaryPrefixExpression#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryPrefixExpressionZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'UnaryPrefixExpression#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryPrefixExpressionZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'UnaryPrefixExpression#get:operator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryPrefixExpressionZ23getZ3AoperatorZ_ii))(u32);
/* export: 'UnaryPrefixExpression#set:operator' */
extern void (*WASM_RT_ADD_PREFIX(Z_UnaryPrefixExpressionZ23setZ3AoperatorZ_vii))(u32, u32);
/* export: 'UnaryPrefixExpression#get:operand' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryPrefixExpressionZ23getZ3AoperandZ_ii))(u32);
/* export: 'UnaryPrefixExpression#set:operand' */
extern void (*WASM_RT_ADD_PREFIX(Z_UnaryPrefixExpressionZ23setZ3AoperandZ_vii))(u32, u32);
/* export: 'Statement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StatementZ_i));
/* export: 'Statement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StatementZ23getZ3AkindZ_ii))(u32);
/* export: 'Statement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_StatementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'Statement#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StatementZ23getZ3ArangeZ_ii))(u32);
/* export: 'Statement#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_StatementZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'Statement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StatementZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'Statement#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StatementZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'Statement#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StatementZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'Statement#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StatementZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'Statement#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StatementZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'Statement#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StatementZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'SourceKind.USER' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceKindZ2EUSERZ_i));
/* export: 'SourceKind.USER_ENTRY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceKindZ2EUSER_ENTRYZ_i));
/* export: 'SourceKind.LIBRARY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceKindZ2ELIBRARYZ_i));
/* export: 'SourceKind.LIBRARY_ENTRY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceKindZ2ELIBRARY_ENTRYZ_i));
/* export: 'Source' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceZ_i));
/* export: 'Source#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceZ23getZ3AkindZ_ii))(u32);
/* export: 'Source#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_SourceZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'Source#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceZ23getZ3ArangeZ_ii))(u32);
/* export: 'Source#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_SourceZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'Source#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'Source#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'Source#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'Source#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'Source#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'Source#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'Source#get:sourceKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceZ23getZ3AsourceKindZ_ii))(u32);
/* export: 'Source#set:sourceKind' */
extern void (*WASM_RT_ADD_PREFIX(Z_SourceZ23setZ3AsourceKindZ_vii))(u32, u32);
/* export: 'Source#get:normalizedPath' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceZ23getZ3AnormalizedPathZ_ii))(u32);
/* export: 'Source#set:normalizedPath' */
extern void (*WASM_RT_ADD_PREFIX(Z_SourceZ23setZ3AnormalizedPathZ_vii))(u32, u32);
/* export: 'Source#get:text' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceZ23getZ3AtextZ_ii))(u32);
/* export: 'Source#set:text' */
extern void (*WASM_RT_ADD_PREFIX(Z_SourceZ23setZ3AtextZ_vii))(u32, u32);
/* export: 'Source#get:internalPath' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceZ23getZ3AinternalPathZ_ii))(u32);
/* export: 'Source#set:internalPath' */
extern void (*WASM_RT_ADD_PREFIX(Z_SourceZ23setZ3AinternalPathZ_vii))(u32, u32);
/* export: 'Source#get:simplePath' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceZ23getZ3AsimplePathZ_ii))(u32);
/* export: 'Source#set:simplePath' */
extern void (*WASM_RT_ADD_PREFIX(Z_SourceZ23setZ3AsimplePathZ_vii))(u32, u32);
/* export: 'Source#get:statements' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceZ23getZ3AstatementsZ_ii))(u32);
/* export: 'Source#set:statements' */
extern void (*WASM_RT_ADD_PREFIX(Z_SourceZ23setZ3AstatementsZ_vii))(u32, u32);
/* export: 'Source#get:debugInfoIndex' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceZ23getZ3AdebugInfoIndexZ_ii))(u32);
/* export: 'Source#set:debugInfoIndex' */
extern void (*WASM_RT_ADD_PREFIX(Z_SourceZ23setZ3AdebugInfoIndexZ_vii))(u32, u32);
/* export: 'Source#get:exportPaths' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceZ23getZ3AexportPathsZ_ii))(u32);
/* export: 'Source#set:exportPaths' */
extern void (*WASM_RT_ADD_PREFIX(Z_SourceZ23setZ3AexportPathsZ_vii))(u32, u32);
/* export: 'Source#get:isNative' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceZ23getZ3AisNativeZ_ii))(u32);
/* export: 'Source#get:isLibrary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceZ23getZ3AisLibraryZ_ii))(u32);
/* export: 'Source#lineAt' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceZ23lineAtZ_iii))(u32, u32);
/* export: 'Source#columnAt' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SourceZ23columnAtZ_ii))(u32);
/* export: 'DeclarationStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclarationStatementZ_i));
/* export: 'DeclarationStatement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclarationStatementZ23getZ3AkindZ_ii))(u32);
/* export: 'DeclarationStatement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_DeclarationStatementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'DeclarationStatement#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclarationStatementZ23getZ3ArangeZ_ii))(u32);
/* export: 'DeclarationStatement#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_DeclarationStatementZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'DeclarationStatement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclarationStatementZ23constructorZ_iiiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'DeclarationStatement#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclarationStatementZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'DeclarationStatement#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclarationStatementZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'DeclarationStatement#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclarationStatementZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'DeclarationStatement#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclarationStatementZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'DeclarationStatement#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclarationStatementZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'DeclarationStatement#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclarationStatementZ23getZ3AnameZ_ii))(u32);
/* export: 'DeclarationStatement#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_DeclarationStatementZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'DeclarationStatement#get:decorators' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclarationStatementZ23getZ3AdecoratorsZ_ii))(u32);
/* export: 'DeclarationStatement#set:decorators' */
extern void (*WASM_RT_ADD_PREFIX(Z_DeclarationStatementZ23setZ3AdecoratorsZ_vii))(u32, u32);
/* export: 'DeclarationStatement#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclarationStatementZ23getZ3AflagsZ_ii))(u32);
/* export: 'DeclarationStatement#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_DeclarationStatementZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'DeclarationStatement#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclarationStatementZ23isZ_iii))(u32, u32);
/* export: 'DeclarationStatement#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclarationStatementZ23isAnyZ_iii))(u32, u32);
/* export: 'DeclarationStatement#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_DeclarationStatementZ23setZ_vii))(u32, u32);
/* export: 'IndexSignatureNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureNodeZ_i));
/* export: 'IndexSignatureNode#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureNodeZ23getZ3AkindZ_ii))(u32);
/* export: 'IndexSignatureNode#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_IndexSignatureNodeZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'IndexSignatureNode#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureNodeZ23getZ3ArangeZ_ii))(u32);
/* export: 'IndexSignatureNode#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_IndexSignatureNodeZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'IndexSignatureNode#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureNodeZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'IndexSignatureNode#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureNodeZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'IndexSignatureNode#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureNodeZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'IndexSignatureNode#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureNodeZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'IndexSignatureNode#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureNodeZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'IndexSignatureNode#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureNodeZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'IndexSignatureNode#get:keyType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureNodeZ23getZ3AkeyTypeZ_ii))(u32);
/* export: 'IndexSignatureNode#set:keyType' */
extern void (*WASM_RT_ADD_PREFIX(Z_IndexSignatureNodeZ23setZ3AkeyTypeZ_vii))(u32, u32);
/* export: 'IndexSignatureNode#get:valueType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureNodeZ23getZ3AvalueTypeZ_ii))(u32);
/* export: 'IndexSignatureNode#set:valueType' */
extern void (*WASM_RT_ADD_PREFIX(Z_IndexSignatureNodeZ23setZ3AvalueTypeZ_vii))(u32, u32);
/* export: 'IndexSignatureNode#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureNodeZ23getZ3AflagsZ_ii))(u32);
/* export: 'IndexSignatureNode#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_IndexSignatureNodeZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'VariableLikeDeclarationStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ_i));
/* export: 'VariableLikeDeclarationStatement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ23getZ3AkindZ_ii))(u32);
/* export: 'VariableLikeDeclarationStatement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'VariableLikeDeclarationStatement#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ23getZ3ArangeZ_ii))(u32);
/* export: 'VariableLikeDeclarationStatement#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'VariableLikeDeclarationStatement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ23constructorZ_iiiiiiiii))(u32, u32, u32, u32, u32, u32, u32, u32);
/* export: 'VariableLikeDeclarationStatement#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'VariableLikeDeclarationStatement#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'VariableLikeDeclarationStatement#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'VariableLikeDeclarationStatement#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'VariableLikeDeclarationStatement#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'VariableLikeDeclarationStatement#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ23getZ3AnameZ_ii))(u32);
/* export: 'VariableLikeDeclarationStatement#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'VariableLikeDeclarationStatement#get:decorators' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ23getZ3AdecoratorsZ_ii))(u32);
/* export: 'VariableLikeDeclarationStatement#set:decorators' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ23setZ3AdecoratorsZ_vii))(u32, u32);
/* export: 'VariableLikeDeclarationStatement#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ23getZ3AflagsZ_ii))(u32);
/* export: 'VariableLikeDeclarationStatement#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'VariableLikeDeclarationStatement#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ23isZ_iii))(u32, u32);
/* export: 'VariableLikeDeclarationStatement#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ23isAnyZ_iii))(u32, u32);
/* export: 'VariableLikeDeclarationStatement#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ23setZ_vii))(u32, u32);
/* export: 'VariableLikeDeclarationStatement#get:type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ23getZ3AtypeZ_ii))(u32);
/* export: 'VariableLikeDeclarationStatement#set:type' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ23setZ3AtypeZ_vii))(u32, u32);
/* export: 'VariableLikeDeclarationStatement#get:initializer' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ23getZ3AinitializerZ_ii))(u32);
/* export: 'VariableLikeDeclarationStatement#set:initializer' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeDeclarationStatementZ23setZ3AinitializerZ_vii))(u32, u32);
/* export: 'BlockStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BlockStatementZ_i));
/* export: 'BlockStatement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BlockStatementZ23getZ3AkindZ_ii))(u32);
/* export: 'BlockStatement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_BlockStatementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'BlockStatement#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BlockStatementZ23getZ3ArangeZ_ii))(u32);
/* export: 'BlockStatement#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_BlockStatementZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'BlockStatement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BlockStatementZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'BlockStatement#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BlockStatementZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'BlockStatement#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BlockStatementZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'BlockStatement#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BlockStatementZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'BlockStatement#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BlockStatementZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'BlockStatement#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BlockStatementZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'BlockStatement#get:statements' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BlockStatementZ23getZ3AstatementsZ_ii))(u32);
/* export: 'BlockStatement#set:statements' */
extern void (*WASM_RT_ADD_PREFIX(Z_BlockStatementZ23setZ3AstatementsZ_vii))(u32, u32);
/* export: 'BreakStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BreakStatementZ_i));
/* export: 'BreakStatement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BreakStatementZ23getZ3AkindZ_ii))(u32);
/* export: 'BreakStatement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_BreakStatementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'BreakStatement#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BreakStatementZ23getZ3ArangeZ_ii))(u32);
/* export: 'BreakStatement#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_BreakStatementZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'BreakStatement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BreakStatementZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'BreakStatement#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BreakStatementZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'BreakStatement#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BreakStatementZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'BreakStatement#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BreakStatementZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'BreakStatement#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BreakStatementZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'BreakStatement#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BreakStatementZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'BreakStatement#get:label' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BreakStatementZ23getZ3AlabelZ_ii))(u32);
/* export: 'BreakStatement#set:label' */
extern void (*WASM_RT_ADD_PREFIX(Z_BreakStatementZ23setZ3AlabelZ_vii))(u32, u32);
/* export: 'ClassDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ_i));
/* export: 'ClassDeclaration#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23getZ3AkindZ_ii))(u32);
/* export: 'ClassDeclaration#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'ClassDeclaration#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23getZ3ArangeZ_ii))(u32);
/* export: 'ClassDeclaration#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'ClassDeclaration#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23constructorZ_iiiiiiiiii))(u32, u32, u32, u32, u32, u32, u32, u32, u32);
/* export: 'ClassDeclaration#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'ClassDeclaration#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'ClassDeclaration#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'ClassDeclaration#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'ClassDeclaration#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'ClassDeclaration#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23getZ3AnameZ_ii))(u32);
/* export: 'ClassDeclaration#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'ClassDeclaration#get:decorators' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23getZ3AdecoratorsZ_ii))(u32);
/* export: 'ClassDeclaration#set:decorators' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23setZ3AdecoratorsZ_vii))(u32, u32);
/* export: 'ClassDeclaration#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23getZ3AflagsZ_ii))(u32);
/* export: 'ClassDeclaration#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'ClassDeclaration#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23isZ_iii))(u32, u32);
/* export: 'ClassDeclaration#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23isAnyZ_iii))(u32, u32);
/* export: 'ClassDeclaration#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23setZ_vii))(u32, u32);
/* export: 'ClassDeclaration#get:typeParameters' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23getZ3AtypeParametersZ_ii))(u32);
/* export: 'ClassDeclaration#set:typeParameters' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23setZ3AtypeParametersZ_vii))(u32, u32);
/* export: 'ClassDeclaration#get:extendsType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23getZ3AextendsTypeZ_ii))(u32);
/* export: 'ClassDeclaration#set:extendsType' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23setZ3AextendsTypeZ_vii))(u32, u32);
/* export: 'ClassDeclaration#get:implementsTypes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23getZ3AimplementsTypesZ_ii))(u32);
/* export: 'ClassDeclaration#set:implementsTypes' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23setZ3AimplementsTypesZ_vii))(u32, u32);
/* export: 'ClassDeclaration#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23getZ3AmembersZ_ii))(u32);
/* export: 'ClassDeclaration#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'ClassDeclaration#get:indexSignature' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23getZ3AindexSignatureZ_ii))(u32);
/* export: 'ClassDeclaration#set:indexSignature' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23setZ3AindexSignatureZ_vii))(u32, u32);
/* export: 'ClassDeclaration#get:isGeneric' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassDeclarationZ23getZ3AisGenericZ_ii))(u32);
/* export: 'ContinueStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ContinueStatementZ_i));
/* export: 'ContinueStatement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ContinueStatementZ23getZ3AkindZ_ii))(u32);
/* export: 'ContinueStatement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ContinueStatementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'ContinueStatement#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ContinueStatementZ23getZ3ArangeZ_ii))(u32);
/* export: 'ContinueStatement#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_ContinueStatementZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'ContinueStatement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ContinueStatementZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'ContinueStatement#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ContinueStatementZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'ContinueStatement#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ContinueStatementZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'ContinueStatement#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ContinueStatementZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'ContinueStatement#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ContinueStatementZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'ContinueStatement#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ContinueStatementZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'ContinueStatement#get:label' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ContinueStatementZ23getZ3AlabelZ_ii))(u32);
/* export: 'ContinueStatement#set:label' */
extern void (*WASM_RT_ADD_PREFIX(Z_ContinueStatementZ23setZ3AlabelZ_vii))(u32, u32);
/* export: 'DoStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DoStatementZ_i));
/* export: 'DoStatement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DoStatementZ23getZ3AkindZ_ii))(u32);
/* export: 'DoStatement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_DoStatementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'DoStatement#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DoStatementZ23getZ3ArangeZ_ii))(u32);
/* export: 'DoStatement#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_DoStatementZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'DoStatement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DoStatementZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'DoStatement#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DoStatementZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'DoStatement#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DoStatementZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'DoStatement#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DoStatementZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'DoStatement#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DoStatementZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'DoStatement#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DoStatementZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'DoStatement#get:statement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DoStatementZ23getZ3AstatementZ_ii))(u32);
/* export: 'DoStatement#set:statement' */
extern void (*WASM_RT_ADD_PREFIX(Z_DoStatementZ23setZ3AstatementZ_vii))(u32, u32);
/* export: 'DoStatement#get:condition' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DoStatementZ23getZ3AconditionZ_ii))(u32);
/* export: 'DoStatement#set:condition' */
extern void (*WASM_RT_ADD_PREFIX(Z_DoStatementZ23setZ3AconditionZ_vii))(u32, u32);
/* export: 'EmptyStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EmptyStatementZ_i));
/* export: 'EmptyStatement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EmptyStatementZ23getZ3AkindZ_ii))(u32);
/* export: 'EmptyStatement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_EmptyStatementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'EmptyStatement#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EmptyStatementZ23getZ3ArangeZ_ii))(u32);
/* export: 'EmptyStatement#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_EmptyStatementZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'EmptyStatement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EmptyStatementZ23constructorZ_iii))(u32, u32);
/* export: 'EmptyStatement#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EmptyStatementZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'EmptyStatement#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EmptyStatementZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'EmptyStatement#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EmptyStatementZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'EmptyStatement#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EmptyStatementZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'EmptyStatement#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EmptyStatementZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'EnumDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumDeclarationZ_i));
/* export: 'EnumDeclaration#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumDeclarationZ23getZ3AkindZ_ii))(u32);
/* export: 'EnumDeclaration#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumDeclarationZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'EnumDeclaration#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumDeclarationZ23getZ3ArangeZ_ii))(u32);
/* export: 'EnumDeclaration#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumDeclarationZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'EnumDeclaration#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumDeclarationZ23constructorZ_iiiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'EnumDeclaration#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumDeclarationZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'EnumDeclaration#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumDeclarationZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'EnumDeclaration#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumDeclarationZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'EnumDeclaration#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumDeclarationZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'EnumDeclaration#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumDeclarationZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'EnumDeclaration#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumDeclarationZ23getZ3AnameZ_ii))(u32);
/* export: 'EnumDeclaration#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumDeclarationZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'EnumDeclaration#get:decorators' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumDeclarationZ23getZ3AdecoratorsZ_ii))(u32);
/* export: 'EnumDeclaration#set:decorators' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumDeclarationZ23setZ3AdecoratorsZ_vii))(u32, u32);
/* export: 'EnumDeclaration#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumDeclarationZ23getZ3AflagsZ_ii))(u32);
/* export: 'EnumDeclaration#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumDeclarationZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'EnumDeclaration#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumDeclarationZ23isZ_iii))(u32, u32);
/* export: 'EnumDeclaration#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumDeclarationZ23isAnyZ_iii))(u32, u32);
/* export: 'EnumDeclaration#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumDeclarationZ23setZ_vii))(u32, u32);
/* export: 'EnumDeclaration#get:values' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumDeclarationZ23getZ3AvaluesZ_ii))(u32);
/* export: 'EnumDeclaration#set:values' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumDeclarationZ23setZ3AvaluesZ_vii))(u32, u32);
/* export: 'EnumValueDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ_i));
/* export: 'EnumValueDeclaration#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ23getZ3AkindZ_ii))(u32);
/* export: 'EnumValueDeclaration#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'EnumValueDeclaration#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ23getZ3ArangeZ_ii))(u32);
/* export: 'EnumValueDeclaration#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'EnumValueDeclaration#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'EnumValueDeclaration#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'EnumValueDeclaration#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'EnumValueDeclaration#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'EnumValueDeclaration#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'EnumValueDeclaration#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'EnumValueDeclaration#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ23getZ3AnameZ_ii))(u32);
/* export: 'EnumValueDeclaration#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'EnumValueDeclaration#get:decorators' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ23getZ3AdecoratorsZ_ii))(u32);
/* export: 'EnumValueDeclaration#set:decorators' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ23setZ3AdecoratorsZ_vii))(u32, u32);
/* export: 'EnumValueDeclaration#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ23getZ3AflagsZ_ii))(u32);
/* export: 'EnumValueDeclaration#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'EnumValueDeclaration#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ23isZ_iii))(u32, u32);
/* export: 'EnumValueDeclaration#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ23isAnyZ_iii))(u32, u32);
/* export: 'EnumValueDeclaration#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ23setZ_vii))(u32, u32);
/* export: 'EnumValueDeclaration#get:type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ23getZ3AtypeZ_ii))(u32);
/* export: 'EnumValueDeclaration#set:type' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ23setZ3AtypeZ_vii))(u32, u32);
/* export: 'EnumValueDeclaration#get:initializer' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ23getZ3AinitializerZ_ii))(u32);
/* export: 'EnumValueDeclaration#set:initializer' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueDeclarationZ23setZ3AinitializerZ_vii))(u32, u32);
/* export: 'ExportImportStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportImportStatementZ_i));
/* export: 'ExportImportStatement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportImportStatementZ23getZ3AkindZ_ii))(u32);
/* export: 'ExportImportStatement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportImportStatementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'ExportImportStatement#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportImportStatementZ23getZ3ArangeZ_ii))(u32);
/* export: 'ExportImportStatement#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportImportStatementZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'ExportImportStatement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportImportStatementZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'ExportImportStatement#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportImportStatementZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'ExportImportStatement#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportImportStatementZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'ExportImportStatement#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportImportStatementZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'ExportImportStatement#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportImportStatementZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'ExportImportStatement#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportImportStatementZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'ExportImportStatement#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportImportStatementZ23getZ3AnameZ_ii))(u32);
/* export: 'ExportImportStatement#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportImportStatementZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'ExportImportStatement#get:externalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportImportStatementZ23getZ3AexternalNameZ_ii))(u32);
/* export: 'ExportImportStatement#set:externalName' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportImportStatementZ23setZ3AexternalNameZ_vii))(u32, u32);
/* export: 'ExportMember' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportMemberZ_i));
/* export: 'ExportMember#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportMemberZ23getZ3AkindZ_ii))(u32);
/* export: 'ExportMember#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportMemberZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'ExportMember#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportMemberZ23getZ3ArangeZ_ii))(u32);
/* export: 'ExportMember#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportMemberZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'ExportMember#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportMemberZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'ExportMember#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportMemberZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'ExportMember#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportMemberZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'ExportMember#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportMemberZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'ExportMember#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportMemberZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'ExportMember#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportMemberZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'ExportMember#get:localName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportMemberZ23getZ3AlocalNameZ_ii))(u32);
/* export: 'ExportMember#set:localName' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportMemberZ23setZ3AlocalNameZ_vii))(u32, u32);
/* export: 'ExportMember#get:exportedName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportMemberZ23getZ3AexportedNameZ_ii))(u32);
/* export: 'ExportMember#set:exportedName' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportMemberZ23setZ3AexportedNameZ_vii))(u32, u32);
/* export: 'ExportStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportStatementZ_i));
/* export: 'ExportStatement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportStatementZ23getZ3AkindZ_ii))(u32);
/* export: 'ExportStatement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportStatementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'ExportStatement#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportStatementZ23getZ3ArangeZ_ii))(u32);
/* export: 'ExportStatement#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportStatementZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'ExportStatement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportStatementZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'ExportStatement#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportStatementZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'ExportStatement#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportStatementZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'ExportStatement#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportStatementZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'ExportStatement#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportStatementZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'ExportStatement#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportStatementZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'ExportStatement#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportStatementZ23getZ3AmembersZ_ii))(u32);
/* export: 'ExportStatement#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportStatementZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'ExportStatement#get:path' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportStatementZ23getZ3ApathZ_ii))(u32);
/* export: 'ExportStatement#set:path' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportStatementZ23setZ3ApathZ_vii))(u32, u32);
/* export: 'ExportStatement#get:isDeclare' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportStatementZ23getZ3AisDeclareZ_ii))(u32);
/* export: 'ExportStatement#set:isDeclare' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportStatementZ23setZ3AisDeclareZ_vii))(u32, u32);
/* export: 'ExportStatement#get:internalPath' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportStatementZ23getZ3AinternalPathZ_ii))(u32);
/* export: 'ExportStatement#set:internalPath' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportStatementZ23setZ3AinternalPathZ_vii))(u32, u32);
/* export: 'ExportDefaultStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportDefaultStatementZ_i));
/* export: 'ExportDefaultStatement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportDefaultStatementZ23getZ3AkindZ_ii))(u32);
/* export: 'ExportDefaultStatement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportDefaultStatementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'ExportDefaultStatement#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportDefaultStatementZ23getZ3ArangeZ_ii))(u32);
/* export: 'ExportDefaultStatement#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportDefaultStatementZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'ExportDefaultStatement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportDefaultStatementZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'ExportDefaultStatement#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportDefaultStatementZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'ExportDefaultStatement#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportDefaultStatementZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'ExportDefaultStatement#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportDefaultStatementZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'ExportDefaultStatement#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportDefaultStatementZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'ExportDefaultStatement#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportDefaultStatementZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'ExportDefaultStatement#get:declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportDefaultStatementZ23getZ3AdeclarationZ_ii))(u32);
/* export: 'ExportDefaultStatement#set:declaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportDefaultStatementZ23setZ3AdeclarationZ_vii))(u32, u32);
/* export: 'ExpressionStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionStatementZ_i));
/* export: 'ExpressionStatement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionStatementZ23getZ3AkindZ_ii))(u32);
/* export: 'ExpressionStatement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExpressionStatementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'ExpressionStatement#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionStatementZ23getZ3ArangeZ_ii))(u32);
/* export: 'ExpressionStatement#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExpressionStatementZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'ExpressionStatement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionStatementZ23constructorZ_iii))(u32, u32);
/* export: 'ExpressionStatement#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionStatementZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'ExpressionStatement#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionStatementZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'ExpressionStatement#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionStatementZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'ExpressionStatement#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionStatementZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'ExpressionStatement#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionStatementZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'ExpressionStatement#get:expression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionStatementZ23getZ3AexpressionZ_ii))(u32);
/* export: 'ExpressionStatement#set:expression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExpressionStatementZ23setZ3AexpressionZ_vii))(u32, u32);
/* export: 'FieldDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ_i));
/* export: 'FieldDeclaration#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23getZ3AkindZ_ii))(u32);
/* export: 'FieldDeclaration#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'FieldDeclaration#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23getZ3ArangeZ_ii))(u32);
/* export: 'FieldDeclaration#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'FieldDeclaration#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23constructorZ_iiiiiiiii))(u32, u32, u32, u32, u32, u32, u32, u32);
/* export: 'FieldDeclaration#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'FieldDeclaration#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'FieldDeclaration#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'FieldDeclaration#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'FieldDeclaration#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'FieldDeclaration#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23getZ3AnameZ_ii))(u32);
/* export: 'FieldDeclaration#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'FieldDeclaration#get:decorators' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23getZ3AdecoratorsZ_ii))(u32);
/* export: 'FieldDeclaration#set:decorators' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23setZ3AdecoratorsZ_vii))(u32, u32);
/* export: 'FieldDeclaration#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23getZ3AflagsZ_ii))(u32);
/* export: 'FieldDeclaration#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'FieldDeclaration#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23isZ_iii))(u32, u32);
/* export: 'FieldDeclaration#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23isAnyZ_iii))(u32, u32);
/* export: 'FieldDeclaration#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23setZ_vii))(u32, u32);
/* export: 'FieldDeclaration#get:type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23getZ3AtypeZ_ii))(u32);
/* export: 'FieldDeclaration#set:type' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23setZ3AtypeZ_vii))(u32, u32);
/* export: 'FieldDeclaration#get:initializer' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23getZ3AinitializerZ_ii))(u32);
/* export: 'FieldDeclaration#set:initializer' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23setZ3AinitializerZ_vii))(u32, u32);
/* export: 'FieldDeclaration#get:parameterIndex' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23getZ3AparameterIndexZ_ii))(u32);
/* export: 'FieldDeclaration#set:parameterIndex' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldDeclarationZ23setZ3AparameterIndexZ_vii))(u32, u32);
/* export: 'ForStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForStatementZ_i));
/* export: 'ForStatement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForStatementZ23getZ3AkindZ_ii))(u32);
/* export: 'ForStatement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ForStatementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'ForStatement#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForStatementZ23getZ3ArangeZ_ii))(u32);
/* export: 'ForStatement#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_ForStatementZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'ForStatement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForStatementZ23constructorZ_iiiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'ForStatement#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForStatementZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'ForStatement#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForStatementZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'ForStatement#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForStatementZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'ForStatement#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForStatementZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'ForStatement#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForStatementZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'ForStatement#get:initializer' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForStatementZ23getZ3AinitializerZ_ii))(u32);
/* export: 'ForStatement#set:initializer' */
extern void (*WASM_RT_ADD_PREFIX(Z_ForStatementZ23setZ3AinitializerZ_vii))(u32, u32);
/* export: 'ForStatement#get:condition' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForStatementZ23getZ3AconditionZ_ii))(u32);
/* export: 'ForStatement#set:condition' */
extern void (*WASM_RT_ADD_PREFIX(Z_ForStatementZ23setZ3AconditionZ_vii))(u32, u32);
/* export: 'ForStatement#get:incrementor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForStatementZ23getZ3AincrementorZ_ii))(u32);
/* export: 'ForStatement#set:incrementor' */
extern void (*WASM_RT_ADD_PREFIX(Z_ForStatementZ23setZ3AincrementorZ_vii))(u32, u32);
/* export: 'ForStatement#get:statement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForStatementZ23getZ3AstatementZ_ii))(u32);
/* export: 'ForStatement#set:statement' */
extern void (*WASM_RT_ADD_PREFIX(Z_ForStatementZ23setZ3AstatementZ_vii))(u32, u32);
/* export: 'ForOfStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForOfStatementZ_i));
/* export: 'ForOfStatement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForOfStatementZ23getZ3AkindZ_ii))(u32);
/* export: 'ForOfStatement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ForOfStatementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'ForOfStatement#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForOfStatementZ23getZ3ArangeZ_ii))(u32);
/* export: 'ForOfStatement#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_ForOfStatementZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'ForOfStatement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForOfStatementZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'ForOfStatement#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForOfStatementZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'ForOfStatement#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForOfStatementZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'ForOfStatement#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForOfStatementZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'ForOfStatement#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForOfStatementZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'ForOfStatement#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForOfStatementZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'ForOfStatement#get:variable' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForOfStatementZ23getZ3AvariableZ_ii))(u32);
/* export: 'ForOfStatement#set:variable' */
extern void (*WASM_RT_ADD_PREFIX(Z_ForOfStatementZ23setZ3AvariableZ_vii))(u32, u32);
/* export: 'ForOfStatement#get:iterable' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForOfStatementZ23getZ3AiterableZ_ii))(u32);
/* export: 'ForOfStatement#set:iterable' */
extern void (*WASM_RT_ADD_PREFIX(Z_ForOfStatementZ23setZ3AiterableZ_vii))(u32, u32);
/* export: 'ForOfStatement#get:statement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ForOfStatementZ23getZ3AstatementZ_ii))(u32);
/* export: 'ForOfStatement#set:statement' */
extern void (*WASM_RT_ADD_PREFIX(Z_ForOfStatementZ23setZ3AstatementZ_vii))(u32, u32);
/* export: 'ArrowKind.NONE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ArrowKindZ2ENONEZ_i));
/* export: 'ArrowKind.ARROW_PARENTHESIZED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ArrowKindZ2EARROW_PARENTHESIZ5AEDZ_i));
/* export: 'ArrowKind.ARROW_SINGLE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ArrowKindZ2EARROW_SINGLEZ_i));
/* export: 'FunctionDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ_i));
/* export: 'FunctionDeclaration#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23getZ3AkindZ_ii))(u32);
/* export: 'FunctionDeclaration#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'FunctionDeclaration#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23getZ3ArangeZ_ii))(u32);
/* export: 'FunctionDeclaration#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'FunctionDeclaration#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23constructorZ_iiiiiiiiii))(u32, u32, u32, u32, u32, u32, u32, u32, u32);
/* export: 'FunctionDeclaration#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'FunctionDeclaration#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'FunctionDeclaration#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'FunctionDeclaration#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'FunctionDeclaration#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'FunctionDeclaration#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23getZ3AnameZ_ii))(u32);
/* export: 'FunctionDeclaration#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'FunctionDeclaration#get:decorators' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23getZ3AdecoratorsZ_ii))(u32);
/* export: 'FunctionDeclaration#set:decorators' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23setZ3AdecoratorsZ_vii))(u32, u32);
/* export: 'FunctionDeclaration#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23getZ3AflagsZ_ii))(u32);
/* export: 'FunctionDeclaration#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'FunctionDeclaration#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23isZ_iii))(u32, u32);
/* export: 'FunctionDeclaration#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23isAnyZ_iii))(u32, u32);
/* export: 'FunctionDeclaration#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23setZ_vii))(u32, u32);
/* export: 'FunctionDeclaration#get:typeParameters' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23getZ3AtypeParametersZ_ii))(u32);
/* export: 'FunctionDeclaration#set:typeParameters' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23setZ3AtypeParametersZ_vii))(u32, u32);
/* export: 'FunctionDeclaration#get:signature' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23getZ3AsignatureZ_ii))(u32);
/* export: 'FunctionDeclaration#set:signature' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23setZ3AsignatureZ_vii))(u32, u32);
/* export: 'FunctionDeclaration#get:body' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23getZ3AbodyZ_ii))(u32);
/* export: 'FunctionDeclaration#set:body' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23setZ3AbodyZ_vii))(u32, u32);
/* export: 'FunctionDeclaration#get:arrowKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23getZ3AarrowKindZ_ii))(u32);
/* export: 'FunctionDeclaration#set:arrowKind' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23setZ3AarrowKindZ_vii))(u32, u32);
/* export: 'FunctionDeclaration#get:isGeneric' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23getZ3AisGenericZ_ii))(u32);
/* export: 'FunctionDeclaration#clone' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionDeclarationZ23cloneZ_ii))(u32);
/* export: 'IfStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IfStatementZ_i));
/* export: 'IfStatement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IfStatementZ23getZ3AkindZ_ii))(u32);
/* export: 'IfStatement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_IfStatementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'IfStatement#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IfStatementZ23getZ3ArangeZ_ii))(u32);
/* export: 'IfStatement#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_IfStatementZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'IfStatement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IfStatementZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'IfStatement#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IfStatementZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'IfStatement#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IfStatementZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'IfStatement#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IfStatementZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'IfStatement#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IfStatementZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'IfStatement#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IfStatementZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'IfStatement#get:condition' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IfStatementZ23getZ3AconditionZ_ii))(u32);
/* export: 'IfStatement#set:condition' */
extern void (*WASM_RT_ADD_PREFIX(Z_IfStatementZ23setZ3AconditionZ_vii))(u32, u32);
/* export: 'IfStatement#get:ifTrue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IfStatementZ23getZ3AifTrueZ_ii))(u32);
/* export: 'IfStatement#set:ifTrue' */
extern void (*WASM_RT_ADD_PREFIX(Z_IfStatementZ23setZ3AifTrueZ_vii))(u32, u32);
/* export: 'IfStatement#get:ifFalse' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IfStatementZ23getZ3AifFalseZ_ii))(u32);
/* export: 'IfStatement#set:ifFalse' */
extern void (*WASM_RT_ADD_PREFIX(Z_IfStatementZ23setZ3AifFalseZ_vii))(u32, u32);
/* export: 'ImportDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportDeclarationZ_i));
/* export: 'ImportDeclaration#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportDeclarationZ23getZ3AkindZ_ii))(u32);
/* export: 'ImportDeclaration#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ImportDeclarationZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'ImportDeclaration#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportDeclarationZ23getZ3ArangeZ_ii))(u32);
/* export: 'ImportDeclaration#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_ImportDeclarationZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'ImportDeclaration#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportDeclarationZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'ImportDeclaration#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportDeclarationZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'ImportDeclaration#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportDeclarationZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'ImportDeclaration#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportDeclarationZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'ImportDeclaration#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportDeclarationZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'ImportDeclaration#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportDeclarationZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'ImportDeclaration#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportDeclarationZ23getZ3AnameZ_ii))(u32);
/* export: 'ImportDeclaration#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_ImportDeclarationZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'ImportDeclaration#get:decorators' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportDeclarationZ23getZ3AdecoratorsZ_ii))(u32);
/* export: 'ImportDeclaration#set:decorators' */
extern void (*WASM_RT_ADD_PREFIX(Z_ImportDeclarationZ23setZ3AdecoratorsZ_vii))(u32, u32);
/* export: 'ImportDeclaration#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportDeclarationZ23getZ3AflagsZ_ii))(u32);
/* export: 'ImportDeclaration#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_ImportDeclarationZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'ImportDeclaration#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportDeclarationZ23isZ_iii))(u32, u32);
/* export: 'ImportDeclaration#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportDeclarationZ23isAnyZ_iii))(u32, u32);
/* export: 'ImportDeclaration#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_ImportDeclarationZ23setZ_vii))(u32, u32);
/* export: 'ImportDeclaration#get:foreignName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportDeclarationZ23getZ3AforeignNameZ_ii))(u32);
/* export: 'ImportDeclaration#set:foreignName' */
extern void (*WASM_RT_ADD_PREFIX(Z_ImportDeclarationZ23setZ3AforeignNameZ_vii))(u32, u32);
/* export: 'ImportStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportStatementZ_i));
/* export: 'ImportStatement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportStatementZ23getZ3AkindZ_ii))(u32);
/* export: 'ImportStatement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ImportStatementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'ImportStatement#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportStatementZ23getZ3ArangeZ_ii))(u32);
/* export: 'ImportStatement#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_ImportStatementZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'ImportStatement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportStatementZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'ImportStatement#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportStatementZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'ImportStatement#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportStatementZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'ImportStatement#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportStatementZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'ImportStatement#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportStatementZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'ImportStatement#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportStatementZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'ImportStatement#get:declarations' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportStatementZ23getZ3AdeclarationsZ_ii))(u32);
/* export: 'ImportStatement#set:declarations' */
extern void (*WASM_RT_ADD_PREFIX(Z_ImportStatementZ23setZ3AdeclarationsZ_vii))(u32, u32);
/* export: 'ImportStatement#get:namespaceName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportStatementZ23getZ3AnamespaceNameZ_ii))(u32);
/* export: 'ImportStatement#set:namespaceName' */
extern void (*WASM_RT_ADD_PREFIX(Z_ImportStatementZ23setZ3AnamespaceNameZ_vii))(u32, u32);
/* export: 'ImportStatement#get:path' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportStatementZ23getZ3ApathZ_ii))(u32);
/* export: 'ImportStatement#set:path' */
extern void (*WASM_RT_ADD_PREFIX(Z_ImportStatementZ23setZ3ApathZ_vii))(u32, u32);
/* export: 'ImportStatement#get:internalPath' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ImportStatementZ23getZ3AinternalPathZ_ii))(u32);
/* export: 'ImportStatement#set:internalPath' */
extern void (*WASM_RT_ADD_PREFIX(Z_ImportStatementZ23setZ3AinternalPathZ_vii))(u32, u32);
/* export: 'InterfaceDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ_i));
/* export: 'InterfaceDeclaration#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23getZ3AkindZ_ii))(u32);
/* export: 'InterfaceDeclaration#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'InterfaceDeclaration#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23getZ3ArangeZ_ii))(u32);
/* export: 'InterfaceDeclaration#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'InterfaceDeclaration#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23constructorZ_iiiiiiiiii))(u32, u32, u32, u32, u32, u32, u32, u32, u32);
/* export: 'InterfaceDeclaration#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'InterfaceDeclaration#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'InterfaceDeclaration#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'InterfaceDeclaration#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'InterfaceDeclaration#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'InterfaceDeclaration#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23getZ3AnameZ_ii))(u32);
/* export: 'InterfaceDeclaration#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'InterfaceDeclaration#get:decorators' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23getZ3AdecoratorsZ_ii))(u32);
/* export: 'InterfaceDeclaration#set:decorators' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23setZ3AdecoratorsZ_vii))(u32, u32);
/* export: 'InterfaceDeclaration#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23getZ3AflagsZ_ii))(u32);
/* export: 'InterfaceDeclaration#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'InterfaceDeclaration#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23isZ_iii))(u32, u32);
/* export: 'InterfaceDeclaration#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23isAnyZ_iii))(u32, u32);
/* export: 'InterfaceDeclaration#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23setZ_vii))(u32, u32);
/* export: 'InterfaceDeclaration#get:typeParameters' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23getZ3AtypeParametersZ_ii))(u32);
/* export: 'InterfaceDeclaration#set:typeParameters' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23setZ3AtypeParametersZ_vii))(u32, u32);
/* export: 'InterfaceDeclaration#get:extendsType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23getZ3AextendsTypeZ_ii))(u32);
/* export: 'InterfaceDeclaration#set:extendsType' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23setZ3AextendsTypeZ_vii))(u32, u32);
/* export: 'InterfaceDeclaration#get:implementsTypes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23getZ3AimplementsTypesZ_ii))(u32);
/* export: 'InterfaceDeclaration#set:implementsTypes' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23setZ3AimplementsTypesZ_vii))(u32, u32);
/* export: 'InterfaceDeclaration#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23getZ3AmembersZ_ii))(u32);
/* export: 'InterfaceDeclaration#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'InterfaceDeclaration#get:indexSignature' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23getZ3AindexSignatureZ_ii))(u32);
/* export: 'InterfaceDeclaration#set:indexSignature' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23setZ3AindexSignatureZ_vii))(u32, u32);
/* export: 'InterfaceDeclaration#get:isGeneric' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceDeclarationZ23getZ3AisGenericZ_ii))(u32);
/* export: 'MethodDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ_i));
/* export: 'MethodDeclaration#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23getZ3AkindZ_ii))(u32);
/* export: 'MethodDeclaration#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'MethodDeclaration#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23getZ3ArangeZ_ii))(u32);
/* export: 'MethodDeclaration#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'MethodDeclaration#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23constructorZ_iiiiiiiii))(u32, u32, u32, u32, u32, u32, u32, u32);
/* export: 'MethodDeclaration#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'MethodDeclaration#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'MethodDeclaration#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'MethodDeclaration#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'MethodDeclaration#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'MethodDeclaration#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23getZ3AnameZ_ii))(u32);
/* export: 'MethodDeclaration#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'MethodDeclaration#get:decorators' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23getZ3AdecoratorsZ_ii))(u32);
/* export: 'MethodDeclaration#set:decorators' */
extern void (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23setZ3AdecoratorsZ_vii))(u32, u32);
/* export: 'MethodDeclaration#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23getZ3AflagsZ_ii))(u32);
/* export: 'MethodDeclaration#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'MethodDeclaration#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23isZ_iii))(u32, u32);
/* export: 'MethodDeclaration#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23isAnyZ_iii))(u32, u32);
/* export: 'MethodDeclaration#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23setZ_vii))(u32, u32);
/* export: 'MethodDeclaration#get:typeParameters' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23getZ3AtypeParametersZ_ii))(u32);
/* export: 'MethodDeclaration#set:typeParameters' */
extern void (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23setZ3AtypeParametersZ_vii))(u32, u32);
/* export: 'MethodDeclaration#get:signature' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23getZ3AsignatureZ_ii))(u32);
/* export: 'MethodDeclaration#set:signature' */
extern void (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23setZ3AsignatureZ_vii))(u32, u32);
/* export: 'MethodDeclaration#get:body' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23getZ3AbodyZ_ii))(u32);
/* export: 'MethodDeclaration#set:body' */
extern void (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23setZ3AbodyZ_vii))(u32, u32);
/* export: 'MethodDeclaration#get:arrowKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23getZ3AarrowKindZ_ii))(u32);
/* export: 'MethodDeclaration#set:arrowKind' */
extern void (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23setZ3AarrowKindZ_vii))(u32, u32);
/* export: 'MethodDeclaration#get:isGeneric' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23getZ3AisGenericZ_ii))(u32);
/* export: 'MethodDeclaration#clone' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_MethodDeclarationZ23cloneZ_ii))(u32);
/* export: 'NamespaceDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceDeclarationZ_i));
/* export: 'NamespaceDeclaration#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceDeclarationZ23getZ3AkindZ_ii))(u32);
/* export: 'NamespaceDeclaration#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamespaceDeclarationZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'NamespaceDeclaration#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceDeclarationZ23getZ3ArangeZ_ii))(u32);
/* export: 'NamespaceDeclaration#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamespaceDeclarationZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'NamespaceDeclaration#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceDeclarationZ23constructorZ_iiiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'NamespaceDeclaration#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceDeclarationZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'NamespaceDeclaration#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceDeclarationZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'NamespaceDeclaration#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceDeclarationZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'NamespaceDeclaration#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceDeclarationZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'NamespaceDeclaration#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceDeclarationZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'NamespaceDeclaration#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceDeclarationZ23getZ3AnameZ_ii))(u32);
/* export: 'NamespaceDeclaration#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamespaceDeclarationZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'NamespaceDeclaration#get:decorators' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceDeclarationZ23getZ3AdecoratorsZ_ii))(u32);
/* export: 'NamespaceDeclaration#set:decorators' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamespaceDeclarationZ23setZ3AdecoratorsZ_vii))(u32, u32);
/* export: 'NamespaceDeclaration#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceDeclarationZ23getZ3AflagsZ_ii))(u32);
/* export: 'NamespaceDeclaration#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamespaceDeclarationZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'NamespaceDeclaration#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceDeclarationZ23isZ_iii))(u32, u32);
/* export: 'NamespaceDeclaration#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceDeclarationZ23isAnyZ_iii))(u32, u32);
/* export: 'NamespaceDeclaration#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamespaceDeclarationZ23setZ_vii))(u32, u32);
/* export: 'NamespaceDeclaration#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceDeclarationZ23getZ3AmembersZ_ii))(u32);
/* export: 'NamespaceDeclaration#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamespaceDeclarationZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'ReturnStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ReturnStatementZ_i));
/* export: 'ReturnStatement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ReturnStatementZ23getZ3AkindZ_ii))(u32);
/* export: 'ReturnStatement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ReturnStatementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'ReturnStatement#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ReturnStatementZ23getZ3ArangeZ_ii))(u32);
/* export: 'ReturnStatement#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_ReturnStatementZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'ReturnStatement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ReturnStatementZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'ReturnStatement#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ReturnStatementZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'ReturnStatement#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ReturnStatementZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'ReturnStatement#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ReturnStatementZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'ReturnStatement#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ReturnStatementZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'ReturnStatement#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ReturnStatementZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'ReturnStatement#get:value' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ReturnStatementZ23getZ3AvalueZ_ii))(u32);
/* export: 'ReturnStatement#set:value' */
extern void (*WASM_RT_ADD_PREFIX(Z_ReturnStatementZ23setZ3AvalueZ_vii))(u32, u32);
/* export: 'SwitchCase' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchCaseZ_i));
/* export: 'SwitchCase#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchCaseZ23getZ3AkindZ_ii))(u32);
/* export: 'SwitchCase#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_SwitchCaseZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'SwitchCase#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchCaseZ23getZ3ArangeZ_ii))(u32);
/* export: 'SwitchCase#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_SwitchCaseZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'SwitchCase#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchCaseZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'SwitchCase#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchCaseZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'SwitchCase#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchCaseZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'SwitchCase#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchCaseZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'SwitchCase#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchCaseZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'SwitchCase#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchCaseZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'SwitchCase#get:label' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchCaseZ23getZ3AlabelZ_ii))(u32);
/* export: 'SwitchCase#set:label' */
extern void (*WASM_RT_ADD_PREFIX(Z_SwitchCaseZ23setZ3AlabelZ_vii))(u32, u32);
/* export: 'SwitchCase#get:statements' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchCaseZ23getZ3AstatementsZ_ii))(u32);
/* export: 'SwitchCase#set:statements' */
extern void (*WASM_RT_ADD_PREFIX(Z_SwitchCaseZ23setZ3AstatementsZ_vii))(u32, u32);
/* export: 'SwitchStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchStatementZ_i));
/* export: 'SwitchStatement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchStatementZ23getZ3AkindZ_ii))(u32);
/* export: 'SwitchStatement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_SwitchStatementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'SwitchStatement#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchStatementZ23getZ3ArangeZ_ii))(u32);
/* export: 'SwitchStatement#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_SwitchStatementZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'SwitchStatement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchStatementZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'SwitchStatement#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchStatementZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'SwitchStatement#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchStatementZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'SwitchStatement#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchStatementZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'SwitchStatement#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchStatementZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'SwitchStatement#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchStatementZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'SwitchStatement#get:condition' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchStatementZ23getZ3AconditionZ_ii))(u32);
/* export: 'SwitchStatement#set:condition' */
extern void (*WASM_RT_ADD_PREFIX(Z_SwitchStatementZ23setZ3AconditionZ_vii))(u32, u32);
/* export: 'SwitchStatement#get:cases' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchStatementZ23getZ3AcasesZ_ii))(u32);
/* export: 'SwitchStatement#set:cases' */
extern void (*WASM_RT_ADD_PREFIX(Z_SwitchStatementZ23setZ3AcasesZ_vii))(u32, u32);
/* export: 'ThrowStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ThrowStatementZ_i));
/* export: 'ThrowStatement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ThrowStatementZ23getZ3AkindZ_ii))(u32);
/* export: 'ThrowStatement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ThrowStatementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'ThrowStatement#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ThrowStatementZ23getZ3ArangeZ_ii))(u32);
/* export: 'ThrowStatement#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_ThrowStatementZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'ThrowStatement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ThrowStatementZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'ThrowStatement#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ThrowStatementZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'ThrowStatement#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ThrowStatementZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'ThrowStatement#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ThrowStatementZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'ThrowStatement#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ThrowStatementZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'ThrowStatement#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ThrowStatementZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'ThrowStatement#get:value' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ThrowStatementZ23getZ3AvalueZ_ii))(u32);
/* export: 'ThrowStatement#set:value' */
extern void (*WASM_RT_ADD_PREFIX(Z_ThrowStatementZ23setZ3AvalueZ_vii))(u32, u32);
/* export: 'TryStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TryStatementZ_i));
/* export: 'TryStatement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TryStatementZ23getZ3AkindZ_ii))(u32);
/* export: 'TryStatement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_TryStatementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'TryStatement#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TryStatementZ23getZ3ArangeZ_ii))(u32);
/* export: 'TryStatement#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_TryStatementZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'TryStatement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TryStatementZ23constructorZ_iiiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'TryStatement#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TryStatementZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'TryStatement#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TryStatementZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'TryStatement#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TryStatementZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'TryStatement#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TryStatementZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'TryStatement#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TryStatementZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'TryStatement#get:statements' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TryStatementZ23getZ3AstatementsZ_ii))(u32);
/* export: 'TryStatement#set:statements' */
extern void (*WASM_RT_ADD_PREFIX(Z_TryStatementZ23setZ3AstatementsZ_vii))(u32, u32);
/* export: 'TryStatement#get:catchVariable' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TryStatementZ23getZ3AcatchVariableZ_ii))(u32);
/* export: 'TryStatement#set:catchVariable' */
extern void (*WASM_RT_ADD_PREFIX(Z_TryStatementZ23setZ3AcatchVariableZ_vii))(u32, u32);
/* export: 'TryStatement#get:catchStatements' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TryStatementZ23getZ3AcatchStatementsZ_ii))(u32);
/* export: 'TryStatement#set:catchStatements' */
extern void (*WASM_RT_ADD_PREFIX(Z_TryStatementZ23setZ3AcatchStatementsZ_vii))(u32, u32);
/* export: 'TryStatement#get:finallyStatements' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TryStatementZ23getZ3AfinallyStatementsZ_ii))(u32);
/* export: 'TryStatement#set:finallyStatements' */
extern void (*WASM_RT_ADD_PREFIX(Z_TryStatementZ23setZ3AfinallyStatementsZ_vii))(u32, u32);
/* export: 'TypeDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ_i));
/* export: 'TypeDeclaration#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ23getZ3AkindZ_ii))(u32);
/* export: 'TypeDeclaration#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'TypeDeclaration#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ23getZ3ArangeZ_ii))(u32);
/* export: 'TypeDeclaration#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'TypeDeclaration#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ23constructorZ_iiiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'TypeDeclaration#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'TypeDeclaration#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'TypeDeclaration#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'TypeDeclaration#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'TypeDeclaration#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'TypeDeclaration#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ23getZ3AnameZ_ii))(u32);
/* export: 'TypeDeclaration#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'TypeDeclaration#get:decorators' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ23getZ3AdecoratorsZ_ii))(u32);
/* export: 'TypeDeclaration#set:decorators' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ23setZ3AdecoratorsZ_vii))(u32, u32);
/* export: 'TypeDeclaration#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ23getZ3AflagsZ_ii))(u32);
/* export: 'TypeDeclaration#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'TypeDeclaration#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ23isZ_iii))(u32, u32);
/* export: 'TypeDeclaration#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ23isAnyZ_iii))(u32, u32);
/* export: 'TypeDeclaration#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ23setZ_vii))(u32, u32);
/* export: 'TypeDeclaration#get:typeParameters' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ23getZ3AtypeParametersZ_ii))(u32);
/* export: 'TypeDeclaration#set:typeParameters' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ23setZ3AtypeParametersZ_vii))(u32, u32);
/* export: 'TypeDeclaration#get:type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ23getZ3AtypeZ_ii))(u32);
/* export: 'TypeDeclaration#set:type' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeDeclarationZ23setZ3AtypeZ_vii))(u32, u32);
/* export: 'VariableDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ_i));
/* export: 'VariableDeclaration#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ23getZ3AkindZ_ii))(u32);
/* export: 'VariableDeclaration#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'VariableDeclaration#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ23getZ3ArangeZ_ii))(u32);
/* export: 'VariableDeclaration#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'VariableDeclaration#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ23constructorZ_iiiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'VariableDeclaration#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'VariableDeclaration#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'VariableDeclaration#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'VariableDeclaration#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'VariableDeclaration#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'VariableDeclaration#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ23getZ3AnameZ_ii))(u32);
/* export: 'VariableDeclaration#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'VariableDeclaration#get:decorators' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ23getZ3AdecoratorsZ_ii))(u32);
/* export: 'VariableDeclaration#set:decorators' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ23setZ3AdecoratorsZ_vii))(u32, u32);
/* export: 'VariableDeclaration#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ23getZ3AflagsZ_ii))(u32);
/* export: 'VariableDeclaration#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'VariableDeclaration#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ23isZ_iii))(u32, u32);
/* export: 'VariableDeclaration#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ23isAnyZ_iii))(u32, u32);
/* export: 'VariableDeclaration#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ23setZ_vii))(u32, u32);
/* export: 'VariableDeclaration#get:type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ23getZ3AtypeZ_ii))(u32);
/* export: 'VariableDeclaration#set:type' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ23setZ3AtypeZ_vii))(u32, u32);
/* export: 'VariableDeclaration#get:initializer' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ23getZ3AinitializerZ_ii))(u32);
/* export: 'VariableDeclaration#set:initializer' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableDeclarationZ23setZ3AinitializerZ_vii))(u32, u32);
/* export: 'VariableStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableStatementZ_i));
/* export: 'VariableStatement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableStatementZ23getZ3AkindZ_ii))(u32);
/* export: 'VariableStatement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableStatementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'VariableStatement#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableStatementZ23getZ3ArangeZ_ii))(u32);
/* export: 'VariableStatement#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableStatementZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'VariableStatement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableStatementZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'VariableStatement#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableStatementZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'VariableStatement#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableStatementZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'VariableStatement#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableStatementZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'VariableStatement#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableStatementZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'VariableStatement#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableStatementZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'VariableStatement#get:decorators' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableStatementZ23getZ3AdecoratorsZ_ii))(u32);
/* export: 'VariableStatement#set:decorators' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableStatementZ23setZ3AdecoratorsZ_vii))(u32, u32);
/* export: 'VariableStatement#get:declarations' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableStatementZ23getZ3AdeclarationsZ_ii))(u32);
/* export: 'VariableStatement#set:declarations' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableStatementZ23setZ3AdeclarationsZ_vii))(u32, u32);
/* export: 'VoidStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VoidStatementZ_i));
/* export: 'VoidStatement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VoidStatementZ23getZ3AkindZ_ii))(u32);
/* export: 'VoidStatement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_VoidStatementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'VoidStatement#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VoidStatementZ23getZ3ArangeZ_ii))(u32);
/* export: 'VoidStatement#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_VoidStatementZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'VoidStatement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VoidStatementZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'VoidStatement#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VoidStatementZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'VoidStatement#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VoidStatementZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'VoidStatement#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VoidStatementZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'VoidStatement#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VoidStatementZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'VoidStatement#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VoidStatementZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'VoidStatement#get:expression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VoidStatementZ23getZ3AexpressionZ_ii))(u32);
/* export: 'VoidStatement#set:expression' */
extern void (*WASM_RT_ADD_PREFIX(Z_VoidStatementZ23setZ3AexpressionZ_vii))(u32, u32);
/* export: 'WhileStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_WhileStatementZ_i));
/* export: 'WhileStatement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_WhileStatementZ23getZ3AkindZ_ii))(u32);
/* export: 'WhileStatement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_WhileStatementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'WhileStatement#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_WhileStatementZ23getZ3ArangeZ_ii))(u32);
/* export: 'WhileStatement#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_WhileStatementZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'WhileStatement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_WhileStatementZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'WhileStatement#isLiteralKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_WhileStatementZ23isLiteralKindZ_iii))(u32, u32);
/* export: 'WhileStatement#get:isNumericLiteral' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_WhileStatementZ23getZ3AisNumericLiteralZ_ii))(u32);
/* export: 'WhileStatement#get:compilesToConst' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_WhileStatementZ23getZ3AcompilesToConstZ_ii))(u32);
/* export: 'WhileStatement#get:isAccessOnThis' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_WhileStatementZ23getZ3AisAccessOnThisZ_ii))(u32);
/* export: 'WhileStatement#get:isAccessOnSuper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_WhileStatementZ23getZ3AisAccessOnSuperZ_ii))(u32);
/* export: 'WhileStatement#get:condition' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_WhileStatementZ23getZ3AconditionZ_ii))(u32);
/* export: 'WhileStatement#set:condition' */
extern void (*WASM_RT_ADD_PREFIX(Z_WhileStatementZ23setZ3AconditionZ_vii))(u32, u32);
/* export: 'WhileStatement#get:statement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_WhileStatementZ23getZ3AstatementZ_ii))(u32);
/* export: 'WhileStatement#set:statement' */
extern void (*WASM_RT_ADD_PREFIX(Z_WhileStatementZ23setZ3AstatementZ_vii))(u32, u32);
/* export: 'findDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_findDecoratorZ_iii))(u32, u32);
/* export: 'mangleInternalPath' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_mangleInternalPathZ_ii))(u32);
/* export: 'isTypeOmitted' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_isTypeOmittedZ_ii))(u32);
/* export: 'CommonFlags.NONE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2ENONEZ_i));
/* export: 'CommonFlags.IMPORT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2EIMPORTZ_i));
/* export: 'CommonFlags.EXPORT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2EEXPORTZ_i));
/* export: 'CommonFlags.DECLARE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2EDECLAREZ_i));
/* export: 'CommonFlags.CONST' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2ECONSTZ_i));
/* export: 'CommonFlags.LET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2ELETZ_i));
/* export: 'CommonFlags.STATIC' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2ESTATICZ_i));
/* export: 'CommonFlags.READONLY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2EREADONLYZ_i));
/* export: 'CommonFlags.ABSTRACT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2EABSTRACTZ_i));
/* export: 'CommonFlags.PUBLIC' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2EPUBLICZ_i));
/* export: 'CommonFlags.PRIVATE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2EPRIVATEZ_i));
/* export: 'CommonFlags.PROTECTED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2EPROTECTEDZ_i));
/* export: 'CommonFlags.GET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2EGETZ_i));
/* export: 'CommonFlags.SET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2ESETZ_i));
/* export: 'CommonFlags.DEFINITELY_ASSIGNED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2EDEFINITELY_ASSIGNEDZ_i));
/* export: 'CommonFlags.AMBIENT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2EAMBIENTZ_i));
/* export: 'CommonFlags.GENERIC' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2EGENERICZ_i));
/* export: 'CommonFlags.GENERIC_CONTEXT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2EGENERIC_CONTEXTZ_i));
/* export: 'CommonFlags.INSTANCE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2EINSTANCEZ_i));
/* export: 'CommonFlags.CONSTRUCTOR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2ECONSTRUCTORZ_i));
/* export: 'CommonFlags.MODULE_EXPORT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2EMODULE_EXPORTZ_i));
/* export: 'CommonFlags.MODULE_IMPORT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2EMODULE_IMPORTZ_i));
/* export: 'CommonFlags.RESOLVED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2ERESOLVEDZ_i));
/* export: 'CommonFlags.COMPILED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2ECOMPILEDZ_i));
/* export: 'CommonFlags.ERRORED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2EERROREDZ_i));
/* export: 'CommonFlags.INLINED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2EINLINEDZ_i));
/* export: 'CommonFlags.SCOPED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2ESCOPEDZ_i));
/* export: 'CommonFlags.STUB' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2ESTUBZ_i));
/* export: 'CommonFlags.VIRTUAL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2EVIRTUALZ_i));
/* export: 'CommonFlags.CLOSURE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2ECLOSUREZ_i));
/* export: 'CommonFlags.QUOTED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonFlagsZ2EQUOTEDZ_i));
/* export: 'PATH_DELIMITER' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PATH_DELIMITERZ_i));
/* export: 'PARENT_SUBST' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PARENT_SUBSTZ_i));
/* export: 'GETTER_PREFIX' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GETTER_PREFIXZ_i));
/* export: 'SETTER_PREFIX' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SETTER_PREFIXZ_i));
/* export: 'INSTANCE_DELIMITER' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_INSTANCE_DELIMITERZ_i));
/* export: 'STATIC_DELIMITER' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_STATIC_DELIMITERZ_i));
/* export: 'INNER_DELIMITER' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_INNER_DELIMITERZ_i));
/* export: 'LIBRARY_SUBST' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LIBRARY_SUBSTZ_i));
/* export: 'LIBRARY_PREFIX' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LIBRARY_PREFIXZ_i));
/* export: 'INDEX_SUFFIX' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_INDEX_SUFFIXZ_i));
/* export: 'STUB_DELIMITER' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_STUB_DELIMITERZ_i));
/* export: 'CommonNames.EMPTY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EEMPTYZ_i));
/* export: 'CommonNames.i8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Ei8Z_i));
/* export: 'CommonNames.i16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Ei16Z_i));
/* export: 'CommonNames.i32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Ei32Z_i));
/* export: 'CommonNames.i64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Ei64Z_i));
/* export: 'CommonNames.isize' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EisizeZ_i));
/* export: 'CommonNames.u8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Eu8Z_i));
/* export: 'CommonNames.u16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Eu16Z_i));
/* export: 'CommonNames.u32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Eu32Z_i));
/* export: 'CommonNames.u64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Eu64Z_i));
/* export: 'CommonNames.usize' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EusizeZ_i));
/* export: 'CommonNames.bool' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EboolZ_i));
/* export: 'CommonNames.f32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Ef32Z_i));
/* export: 'CommonNames.f64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Ef64Z_i));
/* export: 'CommonNames.v128' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Ev128Z_i));
/* export: 'CommonNames.funcref' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EfuncrefZ_i));
/* export: 'CommonNames.externref' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EexternrefZ_i));
/* export: 'CommonNames.exnref' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EexnrefZ_i));
/* export: 'CommonNames.anyref' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EanyrefZ_i));
/* export: 'CommonNames.i8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Ei8x16Z_i));
/* export: 'CommonNames.u8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Eu8x16Z_i));
/* export: 'CommonNames.i16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Ei16x8Z_i));
/* export: 'CommonNames.u16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Eu16x8Z_i));
/* export: 'CommonNames.i32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Ei32x4Z_i));
/* export: 'CommonNames.u32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Eu32x4Z_i));
/* export: 'CommonNames.i64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Ei64x2Z_i));
/* export: 'CommonNames.u64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Eu64x2Z_i));
/* export: 'CommonNames.f32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Ef32x4Z_i));
/* export: 'CommonNames.f64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Ef64x2Z_i));
/* export: 'CommonNames.void_' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Evoid_Z_i));
/* export: 'CommonNames.number' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EnumberZ_i));
/* export: 'CommonNames.boolean' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EbooleanZ_i));
/* export: 'CommonNames.string' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EstringZ_i));
/* export: 'CommonNames.native' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EnativeZ_i));
/* export: 'CommonNames.indexof' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EindexofZ_i));
/* export: 'CommonNames.valueof' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EvalueofZ_i));
/* export: 'CommonNames.returnof' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EreturnofZ_i));
/* export: 'CommonNames.null_' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Enull_Z_i));
/* export: 'CommonNames.true_' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Etrue_Z_i));
/* export: 'CommonNames.false_' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Efalse_Z_i));
/* export: 'CommonNames.this_' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Ethis_Z_i));
/* export: 'CommonNames.super_' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Esuper_Z_i));
/* export: 'CommonNames.constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EconstructorZ_i));
/* export: 'CommonNames.ASC_TARGET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EASC_TARGETZ_i));
/* export: 'CommonNames.ASC_NO_TREESHAKING' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EASC_NO_TREESHAKINGZ_i));
/* export: 'CommonNames.ASC_NO_ASSERT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EASC_NO_ASSERTZ_i));
/* export: 'CommonNames.ASC_MEMORY_BASE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EASC_MEMORY_BASEZ_i));
/* export: 'CommonNames.ASC_TABLE_BASE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EASC_TABLE_BASEZ_i));
/* export: 'CommonNames.ASC_OPTIMIZE_LEVEL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EASC_OPTIMIZ5AE_LEVELZ_i));
/* export: 'CommonNames.ASC_SHRINK_LEVEL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EASC_SHRINK_LEVELZ_i));
/* export: 'CommonNames.ASC_LOW_MEMORY_LIMIT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EASC_LOW_MEMORY_LIMITZ_i));
/* export: 'CommonNames.ASC_WASI' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EASC_WASIZ_i));
/* export: 'CommonNames.ASC_FEATURE_SIGN_EXTENSION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EASC_FEATURE_SIGN_EXTENSIONZ_i));
/* export: 'CommonNames.ASC_FEATURE_MUTABLE_GLOBALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EASC_FEATURE_MUTABLE_GLOBALSZ_i));
/* export: 'CommonNames.ASC_FEATURE_NONTRAPPING_F2I' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EASC_FEATURE_NONTRAPPING_F2IZ_i));
/* export: 'CommonNames.ASC_FEATURE_BULK_MEMORY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EASC_FEATURE_BULK_MEMORYZ_i));
/* export: 'CommonNames.ASC_FEATURE_SIMD' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EASC_FEATURE_SIMDZ_i));
/* export: 'CommonNames.ASC_FEATURE_THREADS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EASC_FEATURE_THREADSZ_i));
/* export: 'CommonNames.ASC_FEATURE_EXCEPTION_HANDLING' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EASC_FEATURE_EXCEPTION_HANDLINGZ_i));
/* export: 'CommonNames.ASC_FEATURE_TAIL_CALLS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EASC_FEATURE_TAIL_CALLSZ_i));
/* export: 'CommonNames.ASC_FEATURE_REFERENCE_TYPES' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EASC_FEATURE_REFERENCE_TYPESZ_i));
/* export: 'CommonNames.ASC_FEATURE_MULTI_VALUE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EASC_FEATURE_MULTI_VALUEZ_i));
/* export: 'CommonNames.ASC_FEATURE_GC' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EASC_FEATURE_GCZ_i));
/* export: 'CommonNames.ASC_FEATURE_MEMORY64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EASC_FEATURE_MEMORY64Z_i));
/* export: 'CommonNames.I8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EI8Z_i));
/* export: 'CommonNames.I16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EI16Z_i));
/* export: 'CommonNames.I32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EI32Z_i));
/* export: 'CommonNames.I64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EI64Z_i));
/* export: 'CommonNames.Isize' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EIsizeZ_i));
/* export: 'CommonNames.U8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EU8Z_i));
/* export: 'CommonNames.U16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EU16Z_i));
/* export: 'CommonNames.U32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EU32Z_i));
/* export: 'CommonNames.U64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EU64Z_i));
/* export: 'CommonNames.Usize' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EUsizeZ_i));
/* export: 'CommonNames.Bool' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EBoolZ_i));
/* export: 'CommonNames.F32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EF32Z_i));
/* export: 'CommonNames.F64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EF64Z_i));
/* export: 'CommonNames.V128' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EV128Z_i));
/* export: 'CommonNames.Funcref' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EFuncrefZ_i));
/* export: 'CommonNames.Externref' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EExternrefZ_i));
/* export: 'CommonNames.Exnref' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EExnrefZ_i));
/* export: 'CommonNames.Anyref' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EAnyrefZ_i));
/* export: 'CommonNames.String' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EStringZ_i));
/* export: 'CommonNames.Array' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EArrayZ_i));
/* export: 'CommonNames.StaticArray' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EStaticArrayZ_i));
/* export: 'CommonNames.Set' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2ESetZ_i));
/* export: 'CommonNames.Map' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EMapZ_i));
/* export: 'CommonNames.Function' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EFunctionZ_i));
/* export: 'CommonNames.ArrayBufferView' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EArrayBufferViewZ_i));
/* export: 'CommonNames.ArrayBuffer' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EArrayBufferZ_i));
/* export: 'CommonNames.Math' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EMathZ_i));
/* export: 'CommonNames.Mathf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EMathfZ_i));
/* export: 'CommonNames.NativeMath' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2ENativeMathZ_i));
/* export: 'CommonNames.NativeMathf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2ENativeMathfZ_i));
/* export: 'CommonNames.Int8Array' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EInt8ArrayZ_i));
/* export: 'CommonNames.Int16Array' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EInt16ArrayZ_i));
/* export: 'CommonNames.Int32Array' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EInt32ArrayZ_i));
/* export: 'CommonNames.Int64Array' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EInt64ArrayZ_i));
/* export: 'CommonNames.Uint8Array' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EUint8ArrayZ_i));
/* export: 'CommonNames.Uint8ClampedArray' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EUint8ClampedArrayZ_i));
/* export: 'CommonNames.Uint16Array' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EUint16ArrayZ_i));
/* export: 'CommonNames.Uint32Array' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EUint32ArrayZ_i));
/* export: 'CommonNames.Uint64Array' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EUint64ArrayZ_i));
/* export: 'CommonNames.Float32Array' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EFloat32ArrayZ_i));
/* export: 'CommonNames.Float64Array' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EFloat64ArrayZ_i));
/* export: 'CommonNames.Error' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EErrorZ_i));
/* export: 'CommonNames.abort' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EabortZ_i));
/* export: 'CommonNames.trace' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EtraceZ_i));
/* export: 'CommonNames.seed' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EseedZ_i));
/* export: 'CommonNames.pow' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EpowZ_i));
/* export: 'CommonNames.ipow32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Eipow32Z_i));
/* export: 'CommonNames.ipow64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Eipow64Z_i));
/* export: 'CommonNames.mod' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EmodZ_i));
/* export: 'CommonNames.alloc' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EallocZ_i));
/* export: 'CommonNames.realloc' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EreallocZ_i));
/* export: 'CommonNames.free' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EfreeZ_i));
/* export: 'CommonNames.new_' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Enew_Z_i));
/* export: 'CommonNames.renew' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2ErenewZ_i));
/* export: 'CommonNames.link' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2ElinkZ_i));
/* export: 'CommonNames.collect' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EcollectZ_i));
/* export: 'CommonNames.typeinfo' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EtypeinfoZ_i));
/* export: 'CommonNames.instanceof_' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2Einstanceof_Z_i));
/* export: 'CommonNames.visit' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EvisitZ_i));
/* export: 'CommonNames.newBuffer' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EnewBufferZ_i));
/* export: 'CommonNames.newArray' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EnewArrayZ_i));
/* export: 'CommonNames.BLOCK' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EBLOCKZ_i));
/* export: 'CommonNames.OBJECT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CommonNamesZ2EOBJECTZ_i));
/* export: 'Feature.NONE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureZ2ENONEZ_i));
/* export: 'Feature.SIGN_EXTENSION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureZ2ESIGN_EXTENSIONZ_i));
/* export: 'Feature.MUTABLE_GLOBALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureZ2EMUTABLE_GLOBALSZ_i));
/* export: 'Feature.NONTRAPPING_F2I' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureZ2ENONTRAPPING_F2IZ_i));
/* export: 'Feature.BULK_MEMORY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureZ2EBULK_MEMORYZ_i));
/* export: 'Feature.SIMD' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureZ2ESIMDZ_i));
/* export: 'Feature.THREADS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureZ2ETHREADSZ_i));
/* export: 'Feature.EXCEPTION_HANDLING' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureZ2EEXCEPTION_HANDLINGZ_i));
/* export: 'Feature.TAIL_CALLS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureZ2ETAIL_CALLSZ_i));
/* export: 'Feature.REFERENCE_TYPES' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureZ2EREFERENCE_TYPESZ_i));
/* export: 'Feature.MULTI_VALUE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureZ2EMULTI_VALUEZ_i));
/* export: 'Feature.GC' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureZ2EGCZ_i));
/* export: 'Feature.MEMORY64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureZ2EMEMORY64Z_i));
/* export: 'featureToString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_featureToStringZ_ii))(u32);
/* export: 'Target.JS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TargetZ2EJSZ_i));
/* export: 'Target.WASM32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TargetZ2EWASM32Z_i));
/* export: 'Target.WASM64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TargetZ2EWASM64Z_i));
/* export: 'Typeinfo#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoZ23getZ3AflagsZ_ii))(u32);
/* export: 'Typeinfo#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeinfoZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'Typeinfo#get:base' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoZ23getZ3AbaseZ_ii))(u32);
/* export: 'Typeinfo#set:base' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeinfoZ23setZ3AbaseZ_vii))(u32, u32);
/* export: 'Typeinfo#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoZ23constructorZ_ii))(u32);
/* export: 'TypeinfoFlags.NONE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2ENONEZ_i));
/* export: 'TypeinfoFlags.ARRAYBUFFERVIEW' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2EARRAYBUFFERVIEWZ_i));
/* export: 'TypeinfoFlags.ARRAY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2EARRAYZ_i));
/* export: 'TypeinfoFlags.STATICARRAY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2ESTATICARRAYZ_i));
/* export: 'TypeinfoFlags.SET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2ESETZ_i));
/* export: 'TypeinfoFlags.MAP' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2EMAPZ_i));
/* export: 'TypeinfoFlags.VALUE_ALIGN_0' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2EVALUE_ALIGN_0Z_i));
/* export: 'TypeinfoFlags.VALUE_ALIGN_1' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2EVALUE_ALIGN_1Z_i));
/* export: 'TypeinfoFlags.VALUE_ALIGN_2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2EVALUE_ALIGN_2Z_i));
/* export: 'TypeinfoFlags.VALUE_ALIGN_3' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2EVALUE_ALIGN_3Z_i));
/* export: 'TypeinfoFlags.VALUE_ALIGN_4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2EVALUE_ALIGN_4Z_i));
/* export: 'TypeinfoFlags.VALUE_SIGNED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2EVALUE_SIGNEDZ_i));
/* export: 'TypeinfoFlags.VALUE_FLOAT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2EVALUE_FLOATZ_i));
/* export: 'TypeinfoFlags.VALUE_NULLABLE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2EVALUE_NULLABLEZ_i));
/* export: 'TypeinfoFlags.VALUE_MANAGED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2EVALUE_MANAGEDZ_i));
/* export: 'TypeinfoFlags.KEY_ALIGN_0' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2EKEY_ALIGN_0Z_i));
/* export: 'TypeinfoFlags.KEY_ALIGN_1' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2EKEY_ALIGN_1Z_i));
/* export: 'TypeinfoFlags.KEY_ALIGN_2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2EKEY_ALIGN_2Z_i));
/* export: 'TypeinfoFlags.KEY_ALIGN_3' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2EKEY_ALIGN_3Z_i));
/* export: 'TypeinfoFlags.KEY_ALIGN_4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2EKEY_ALIGN_4Z_i));
/* export: 'TypeinfoFlags.KEY_SIGNED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2EKEY_SIGNEDZ_i));
/* export: 'TypeinfoFlags.KEY_FLOAT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2EKEY_FLOATZ_i));
/* export: 'TypeinfoFlags.KEY_NULLABLE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2EKEY_NULLABLEZ_i));
/* export: 'TypeinfoFlags.KEY_MANAGED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeinfoFlagsZ2EKEY_MANAGEDZ_i));
/* export: 'Options' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ_i));
/* export: 'Options#get:target' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AtargetZ_ii))(u32);
/* export: 'Options#set:target' */
extern void (*WASM_RT_ADD_PREFIX(Z_OptionsZ23setZ3AtargetZ_vii))(u32, u32);
/* export: 'Options#get:noAssert' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AnoAssertZ_ii))(u32);
/* export: 'Options#set:noAssert' */
extern void (*WASM_RT_ADD_PREFIX(Z_OptionsZ23setZ3AnoAssertZ_vii))(u32, u32);
/* export: 'Options#get:exportMemory' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AexportMemoryZ_ii))(u32);
/* export: 'Options#set:exportMemory' */
extern void (*WASM_RT_ADD_PREFIX(Z_OptionsZ23setZ3AexportMemoryZ_vii))(u32, u32);
/* export: 'Options#get:importMemory' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AimportMemoryZ_ii))(u32);
/* export: 'Options#set:importMemory' */
extern void (*WASM_RT_ADD_PREFIX(Z_OptionsZ23setZ3AimportMemoryZ_vii))(u32, u32);
/* export: 'Options#get:initialMemory' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AinitialMemoryZ_ii))(u32);
/* export: 'Options#set:initialMemory' */
extern void (*WASM_RT_ADD_PREFIX(Z_OptionsZ23setZ3AinitialMemoryZ_vii))(u32, u32);
/* export: 'Options#get:maximumMemory' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AmaximumMemoryZ_ii))(u32);
/* export: 'Options#set:maximumMemory' */
extern void (*WASM_RT_ADD_PREFIX(Z_OptionsZ23setZ3AmaximumMemoryZ_vii))(u32, u32);
/* export: 'Options#get:sharedMemory' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AsharedMemoryZ_ii))(u32);
/* export: 'Options#set:sharedMemory' */
extern void (*WASM_RT_ADD_PREFIX(Z_OptionsZ23setZ3AsharedMemoryZ_vii))(u32, u32);
/* export: 'Options#get:importTable' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AimportTableZ_ii))(u32);
/* export: 'Options#set:importTable' */
extern void (*WASM_RT_ADD_PREFIX(Z_OptionsZ23setZ3AimportTableZ_vii))(u32, u32);
/* export: 'Options#get:exportTable' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AexportTableZ_ii))(u32);
/* export: 'Options#set:exportTable' */
extern void (*WASM_RT_ADD_PREFIX(Z_OptionsZ23setZ3AexportTableZ_vii))(u32, u32);
/* export: 'Options#get:sourceMap' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AsourceMapZ_ii))(u32);
/* export: 'Options#set:sourceMap' */
extern void (*WASM_RT_ADD_PREFIX(Z_OptionsZ23setZ3AsourceMapZ_vii))(u32, u32);
/* export: 'Options#get:explicitStart' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AexplicitStartZ_ii))(u32);
/* export: 'Options#set:explicitStart' */
extern void (*WASM_RT_ADD_PREFIX(Z_OptionsZ23setZ3AexplicitStartZ_vii))(u32, u32);
/* export: 'Options#get:memoryBase' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AmemoryBaseZ_ii))(u32);
/* export: 'Options#set:memoryBase' */
extern void (*WASM_RT_ADD_PREFIX(Z_OptionsZ23setZ3AmemoryBaseZ_vii))(u32, u32);
/* export: 'Options#get:tableBase' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AtableBaseZ_ii))(u32);
/* export: 'Options#set:tableBase' */
extern void (*WASM_RT_ADD_PREFIX(Z_OptionsZ23setZ3AtableBaseZ_vii))(u32, u32);
/* export: 'Options#get:globalAliases' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AglobalAliasesZ_ii))(u32);
/* export: 'Options#set:globalAliases' */
extern void (*WASM_RT_ADD_PREFIX(Z_OptionsZ23setZ3AglobalAliasesZ_vii))(u32, u32);
/* export: 'Options#get:features' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AfeaturesZ_ii))(u32);
/* export: 'Options#set:features' */
extern void (*WASM_RT_ADD_PREFIX(Z_OptionsZ23setZ3AfeaturesZ_vii))(u32, u32);
/* export: 'Options#get:noUnsafe' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AnoUnsafeZ_ii))(u32);
/* export: 'Options#set:noUnsafe' */
extern void (*WASM_RT_ADD_PREFIX(Z_OptionsZ23setZ3AnoUnsafeZ_vii))(u32, u32);
/* export: 'Options#get:pedantic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3ApedanticZ_ii))(u32);
/* export: 'Options#set:pedantic' */
extern void (*WASM_RT_ADD_PREFIX(Z_OptionsZ23setZ3ApedanticZ_vii))(u32, u32);
/* export: 'Options#get:lowMemoryLimit' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AlowMemoryLimitZ_ii))(u32);
/* export: 'Options#set:lowMemoryLimit' */
extern void (*WASM_RT_ADD_PREFIX(Z_OptionsZ23setZ3AlowMemoryLimitZ_vii))(u32, u32);
/* export: 'Options#get:noExportRuntime' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AnoExportRuntimeZ_ii))(u32);
/* export: 'Options#set:noExportRuntime' */
extern void (*WASM_RT_ADD_PREFIX(Z_OptionsZ23setZ3AnoExportRuntimeZ_vii))(u32, u32);
/* export: 'Options#get:optimizeLevelHint' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AoptimizeLevelHintZ_ii))(u32);
/* export: 'Options#set:optimizeLevelHint' */
extern void (*WASM_RT_ADD_PREFIX(Z_OptionsZ23setZ3AoptimizeLevelHintZ_vii))(u32, u32);
/* export: 'Options#get:shrinkLevelHint' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AshrinkLevelHintZ_ii))(u32);
/* export: 'Options#set:shrinkLevelHint' */
extern void (*WASM_RT_ADD_PREFIX(Z_OptionsZ23setZ3AshrinkLevelHintZ_vii))(u32, u32);
/* export: 'Options#get:isWasm64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AisWasm64Z_ii))(u32);
/* export: 'Options#get:usizeType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AusizeTypeZ_ii))(u32);
/* export: 'Options#get:isizeType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AisizeTypeZ_ii))(u32);
/* export: 'Options#get:nativeSizeType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AnativeSizeTypeZ_ii))(u32);
/* export: 'Options#get:willOptimize' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23getZ3AwillOptimizeZ_ii))(u32);
/* export: 'Options#hasFeature' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23hasFeatureZ_iii))(u32, u32);
/* export: 'Options#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OptionsZ23constructorZ_ii))(u32);
/* export: 'Constraints.NONE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConstraintsZ2ENONEZ_i));
/* export: 'Constraints.CONV_IMPLICIT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConstraintsZ2ECONV_IMPLICITZ_i));
/* export: 'Constraints.CONV_EXPLICIT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConstraintsZ2ECONV_EXPLICITZ_i));
/* export: 'Constraints.MUST_WRAP' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConstraintsZ2EMUST_WRAPZ_i));
/* export: 'Constraints.WILL_DROP' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConstraintsZ2EWILL_DROPZ_i));
/* export: 'Constraints.PREFER_STATIC' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConstraintsZ2EPREFER_STATICZ_i));
/* export: 'Constraints.IS_THIS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConstraintsZ2EIS_THISZ_i));
/* export: 'RuntimeFeatures.NONE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RuntimeFeaturesZ2ENONEZ_i));
/* export: 'RuntimeFeatures.HEAP' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RuntimeFeaturesZ2EHEAPZ_i));
/* export: 'RuntimeFeatures.RTTI' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RuntimeFeaturesZ2ERTTIZ_i));
/* export: 'RuntimeFeatures.visitGlobals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RuntimeFeaturesZ2EvisitGlobalsZ_i));
/* export: 'RuntimeFeatures.visitMembers' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RuntimeFeaturesZ2EvisitMembersZ_i));
/* export: 'RuntimeFeatures.setArgumentsLength' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RuntimeFeaturesZ2EsetArgumentsLengthZ_i));
/* export: 'ExportNames.start' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportNamesZ2EstartZ_i));
/* export: 'ExportNames.argumentsLength' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportNamesZ2EargumentsLengthZ_i));
/* export: 'ExportNames.setArgumentsLength' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportNamesZ2EsetArgumentsLengthZ_i));
/* export: 'ExportNames.memory' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportNamesZ2EmemoryZ_i));
/* export: 'ExportNames.table' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportNamesZ2EtableZ_i));
/* export: 'Compiler' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ_i));
/* export: 'Compiler#get:diagnostics' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23getZ3AdiagnosticsZ_ii))(u32);
/* export: 'Compiler#set:diagnostics' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23setZ3AdiagnosticsZ_vii))(u32, u32);
/* export: 'Compiler#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23constructorZ_iii))(u32, u32);
/* export: 'Compiler#emitDiagnostic' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23emitDiagnosticZ_viiiiiiii))(u32, u32, u32, u32, u32, u32, u32, u32);
/* export: 'Compiler#pedantic' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23pedanticZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Compiler#pedanticRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23pedanticRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Compiler#info' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23infoZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Compiler#infoRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23infoRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Compiler#warning' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23warningZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Compiler#warningRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23warningRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Compiler#error' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23errorZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Compiler#errorRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23errorRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Compiler#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23getZ3AprogramZ_ii))(u32);
/* export: 'Compiler#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'Compiler#get:resolver' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23getZ3AresolverZ_ii))(u32);
/* export: 'Compiler#get:options' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23getZ3AoptionsZ_ii))(u32);
/* export: 'Compiler#get:module' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23getZ3AmoduleZ_ii))(u32);
/* export: 'Compiler#set:module' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23setZ3AmoduleZ_vii))(u32, u32);
/* export: 'Compiler#get:currentFlow' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23getZ3AcurrentFlowZ_ii))(u32);
/* export: 'Compiler#set:currentFlow' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23setZ3AcurrentFlowZ_vii))(u32, u32);
/* export: 'Compiler#get:currentParent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23getZ3AcurrentParentZ_ii))(u32);
/* export: 'Compiler#set:currentParent' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23setZ3AcurrentParentZ_vii))(u32, u32);
/* export: 'Compiler#get:currentType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23getZ3AcurrentTypeZ_ii))(u32);
/* export: 'Compiler#set:currentType' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23setZ3AcurrentTypeZ_vii))(u32, u32);
/* export: 'Compiler#get:currentBody' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23getZ3AcurrentBodyZ_ii))(u32);
/* export: 'Compiler#set:currentBody' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23setZ3AcurrentBodyZ_vii))(u32, u32);
/* export: 'Compiler#get:memoryOffset' */
extern u64 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23getZ3AmemoryOffsetZ_ji))(u32);
/* export: 'Compiler#set:memoryOffset' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23setZ3AmemoryOffsetZ_vij))(u32, u64);
/* export: 'Compiler#get:memorySegments' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23getZ3AmemorySegmentsZ_ii))(u32);
/* export: 'Compiler#set:memorySegments' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23setZ3AmemorySegmentsZ_vii))(u32, u32);
/* export: 'Compiler#get:stringSegments' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23getZ3AstringSegmentsZ_ii))(u32);
/* export: 'Compiler#set:stringSegments' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23setZ3AstringSegmentsZ_vii))(u32, u32);
/* export: 'Compiler#get:functionTable' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23getZ3AfunctionTableZ_ii))(u32);
/* export: 'Compiler#set:functionTable' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23setZ3AfunctionTableZ_vii))(u32, u32);
/* export: 'Compiler#get:builtinArgumentsLength' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23getZ3AbuiltinArgumentsLengthZ_ii))(u32);
/* export: 'Compiler#set:builtinArgumentsLength' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23setZ3AbuiltinArgumentsLengthZ_vii))(u32, u32);
/* export: 'Compiler#get:runtimeFeatures' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23getZ3AruntimeFeaturesZ_ii))(u32);
/* export: 'Compiler#set:runtimeFeatures' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23setZ3AruntimeFeaturesZ_vii))(u32, u32);
/* export: 'Compiler#get:inlineStack' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23getZ3AinlineStackZ_ii))(u32);
/* export: 'Compiler#set:inlineStack' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23setZ3AinlineStackZ_vii))(u32, u32);
/* export: 'Compiler#get:lazyFunctions' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23getZ3AlazyFunctionsZ_ii))(u32);
/* export: 'Compiler#set:lazyFunctions' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23setZ3AlazyFunctionsZ_vii))(u32, u32);
/* export: 'Compiler#get:pendingClassInstanceOf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23getZ3ApendingClassInstanceOfZ_ii))(u32);
/* export: 'Compiler#set:pendingClassInstanceOf' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23setZ3ApendingClassInstanceOfZ_vii))(u32, u32);
/* export: 'Compiler#get:virtualCalls' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23getZ3AvirtualCallsZ_ii))(u32);
/* export: 'Compiler#set:virtualCalls' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23setZ3AvirtualCallsZ_vii))(u32, u32);
/* export: 'Compiler#get:pendingElements' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23getZ3ApendingElementsZ_ii))(u32);
/* export: 'Compiler#set:pendingElements' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23setZ3ApendingElementsZ_vii))(u32, u32);
/* export: 'Compiler#get:doneModuleExports' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23getZ3AdoneModuleExportsZ_ii))(u32);
/* export: 'Compiler#set:doneModuleExports' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23setZ3AdoneModuleExportsZ_vii))(u32, u32);
/* export: 'Compiler#compile' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23compileZ_ii))(u32);
/* export: 'Compiler#compileElement' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23compileElementZ_viii))(u32, u32, u32);
/* export: 'Compiler#compileExports' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23compileExportsZ_vii))(u32, u32);
/* export: 'Compiler#compileFileByPath' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23compileFileByPathZ_viii))(u32, u32, u32);
/* export: 'Compiler#compileFile' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23compileFileZ_vii))(u32, u32);
/* export: 'Compiler#compileGlobal' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23compileGlobalZ_iii))(u32, u32);
/* export: 'Compiler#compileEnum' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23compileEnumZ_iii))(u32, u32);
/* export: 'Compiler#compileFunction' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23compileFunctionZ_iiii))(u32, u32, u32);
/* export: 'Compiler#compileClass' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23compileClassZ_iii))(u32, u32);
/* export: 'Compiler#compileField' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23compileFieldZ_iii))(u32, u32);
/* export: 'Compiler#compileFieldGetter' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23compileFieldGetterZ_iii))(u32, u32);
/* export: 'Compiler#compileFieldSetter' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23compileFieldSetterZ_iii))(u32, u32);
/* export: 'Compiler#compileProperty' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23compilePropertyZ_iii))(u32, u32);
/* export: 'Compiler#compilePropertyGetter' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23compilePropertyGetterZ_iii))(u32, u32);
/* export: 'Compiler#compilePropertySetter' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23compilePropertySetterZ_iii))(u32, u32);
/* export: 'Compiler#addAlignedMemorySegment' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23addAlignedMemorySegmentZ_iiii))(u32, u32, u32);
/* export: 'Compiler#addRuntimeMemorySegment' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23addRuntimeMemorySegmentZ_iii))(u32, u32);
/* export: 'Compiler#ensureStaticString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23ensureStaticStringZ_iii))(u32, u32);
/* export: 'Compiler#writeStaticBuffer' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23writeStaticBufferZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Compiler#addStaticBuffer' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23addStaticBufferZ_iiiii))(u32, u32, u32, u32);
/* export: 'Compiler#ensureRuntimeFunction' */
extern u64 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23ensureRuntimeFunctionZ_jii))(u32, u32);
/* export: 'Compiler#compileTopLevelStatement' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23compileTopLevelStatementZ_viii))(u32, u32, u32);
/* export: 'Compiler#compileStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23compileStatementZ_iiii))(u32, u32, u32);
/* export: 'Compiler#compileStatements' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23compileStatementsZ_iiiii))(u32, u32, u32, u32);
/* export: 'Compiler#compileInlineConstant' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23compileInlineConstantZ_iiiii))(u32, u32, u32, u32);
/* export: 'Compiler#compileExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23compileExpressionZ_iiiii))(u32, u32, u32, u32);
/* export: 'Compiler#convertExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23convertExpressionZ_iiiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Compiler#makeLt' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeLtZ_iiiii))(u32, u32, u32, u32);
/* export: 'Compiler#makeGt' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeGtZ_iiiii))(u32, u32, u32, u32);
/* export: 'Compiler#makeLe' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeLeZ_iiiii))(u32, u32, u32, u32);
/* export: 'Compiler#makeGe' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeGeZ_iiiii))(u32, u32, u32, u32);
/* export: 'Compiler#makeEq' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeEqZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Compiler#makeNe' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeNeZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Compiler#makeAdd' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeAddZ_iiiii))(u32, u32, u32, u32);
/* export: 'Compiler#makeSub' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeSubZ_iiiii))(u32, u32, u32, u32);
/* export: 'Compiler#makeMul' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeMulZ_iiiii))(u32, u32, u32, u32);
/* export: 'Compiler#makePow' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makePowZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Compiler#makeDiv' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeDivZ_iiiii))(u32, u32, u32, u32);
/* export: 'Compiler#makeRem' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeRemZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Compiler#makeShl' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeShlZ_iiiii))(u32, u32, u32, u32);
/* export: 'Compiler#makeShr' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeShrZ_iiiii))(u32, u32, u32, u32);
/* export: 'Compiler#makeShru' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeShruZ_iiiii))(u32, u32, u32, u32);
/* export: 'Compiler#makeAnd' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeAndZ_iiiii))(u32, u32, u32, u32);
/* export: 'Compiler#makeOr' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeOrZ_iiiii))(u32, u32, u32, u32);
/* export: 'Compiler#makeXor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeXorZ_iiiii))(u32, u32, u32, u32);
/* export: 'Compiler#makeAssignment' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeAssignmentZ_iiiiiiiii))(u32, u32, u32, u32, u32, u32, u32, u32);
/* export: 'Compiler#checkCallSignature' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23checkCallSignatureZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Compiler#compileCallDirect' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23compileCallDirectZ_iiiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Compiler#makeCallInline' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeCallInlineZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Compiler#ensureArgumentsLength' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23ensureArgumentsLengthZ_vi))(u32);
/* export: 'Compiler#ensureVarargsStub' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23ensureVarargsStubZ_iii))(u32, u32);
/* export: 'Compiler#ensureVirtualStub' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23ensureVirtualStubZ_iii))(u32, u32);
/* export: 'Compiler#makeCallDirect' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeCallDirectZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Compiler#compileCallIndirect' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23compileCallIndirectZ_iiiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Compiler#makeCallIndirect' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeCallIndirectZ_iiiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Compiler#ensureConstructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23ensureConstructorZ_iiii))(u32, u32, u32);
/* export: 'Compiler#checkFieldInitialization' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23checkFieldInitializationZ_viii))(u32, u32, u32);
/* export: 'Compiler#checkFieldInitializationInFlow' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23checkFieldInitializationInFlowZ_viiii))(u32, u32, u32, u32);
/* export: 'Compiler#compileInstantiate' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23compileInstantiateZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Compiler#ensureSmallIntegerWrap' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23ensureSmallIntegerWrapZ_iiii))(u32, u32, u32);
/* export: 'Compiler#addDebugLocation' */
extern void (*WASM_RT_ADD_PREFIX(Z_CompilerZ23addDebugLocationZ_viii))(u32, u32, u32);
/* export: 'Compiler#checkFeatureEnabled' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23checkFeatureEnabledZ_iiii))(u32, u32, u32);
/* export: 'Compiler#checkTypeSupported' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23checkTypeSupportedZ_iiii))(u32, u32, u32);
/* export: 'Compiler#checkSignatureSupported' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23checkSignatureSupportedZ_iiii))(u32, u32, u32);
/* export: 'Compiler#evaluateCondition' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23evaluateConditionZ_iii))(u32, u32);
/* export: 'Compiler#makeZero' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeZ5AeroZ_iiii))(u32, u32, u32);
/* export: 'Compiler#makeOne' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeOneZ_iii))(u32, u32);
/* export: 'Compiler#makeNegOne' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeNegOneZ_iii))(u32, u32);
/* export: 'Compiler#makeIsTrueish' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeIsTrueishZ_iiiii))(u32, u32, u32, u32);
/* export: 'Compiler#makeAllocation' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeAllocationZ_iii))(u32, u32);
/* export: 'Compiler#makeConditionalAllocation' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeConditionalAllocationZ_iiii))(u32, u32, u32);
/* export: 'Compiler#makeFieldInitializationInConstructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeFieldInitializationInConstructorZ_iiii))(u32, u32, u32);
/* export: 'Compiler#makeAbort' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeAbortZ_iiii))(u32, u32, u32);
/* export: 'Compiler#makeStaticAbort' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeStaticAbortZ_iiii))(u32, u32, u32);
/* export: 'Compiler#makeRuntimeNonNullCheck' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeRuntimeNonNullCheckZ_iiiii))(u32, u32, u32, u32);
/* export: 'Compiler#makeRuntimeUpcastCheck' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ23makeRuntimeUpcastCheckZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Compiler.compile' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CompilerZ2EcompileZ_ii))(u32);
/* export: 'ExportsWalker' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportsWalkerZ_i));
/* export: 'ExportsWalker#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportsWalkerZ23getZ3AprogramZ_ii))(u32);
/* export: 'ExportsWalker#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportsWalkerZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'ExportsWalker#get:includePrivate' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportsWalkerZ23getZ3AincludePrivateZ_ii))(u32);
/* export: 'ExportsWalker#set:includePrivate' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportsWalkerZ23setZ3AincludePrivateZ_vii))(u32, u32);
/* export: 'ExportsWalker#get:seen' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportsWalkerZ23getZ3AseenZ_ii))(u32);
/* export: 'ExportsWalker#set:seen' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportsWalkerZ23setZ3AseenZ_vii))(u32, u32);
/* export: 'ExportsWalker#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExportsWalkerZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'ExportsWalker#walk' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportsWalkerZ23walkZ_vi))(u32);
/* export: 'ExportsWalker#visitFile' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportsWalkerZ23visitFileZ_vii))(u32, u32);
/* export: 'ExportsWalker#visitElement' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportsWalkerZ23visitElementZ_viii))(u32, u32, u32);
/* export: 'ExportsWalker#visitGlobal' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportsWalkerZ23visitGlobalZ_viii))(u32, u32, u32);
/* export: 'ExportsWalker#visitEnum' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportsWalkerZ23visitEnumZ_viii))(u32, u32, u32);
/* export: 'ExportsWalker#visitFunction' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportsWalkerZ23visitFunctionZ_viii))(u32, u32, u32);
/* export: 'ExportsWalker#visitClass' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportsWalkerZ23visitClassZ_viii))(u32, u32, u32);
/* export: 'ExportsWalker#visitInterface' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportsWalkerZ23visitInterfaceZ_viii))(u32, u32, u32);
/* export: 'ExportsWalker#visitField' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportsWalkerZ23visitFieldZ_viii))(u32, u32, u32);
/* export: 'ExportsWalker#visitNamespace' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportsWalkerZ23visitNamespaceZ_viii))(u32, u32, u32);
/* export: 'ExportsWalker#visitAlias' */
extern void (*WASM_RT_ADD_PREFIX(Z_ExportsWalkerZ23visitAliasZ_viiii))(u32, u32, u32, u32);
/* export: 'IDLBuilder' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IDLBuilderZ_i));
/* export: 'IDLBuilder#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IDLBuilderZ23getZ3AprogramZ_ii))(u32);
/* export: 'IDLBuilder#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_IDLBuilderZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'IDLBuilder#get:includePrivate' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IDLBuilderZ23getZ3AincludePrivateZ_ii))(u32);
/* export: 'IDLBuilder#set:includePrivate' */
extern void (*WASM_RT_ADD_PREFIX(Z_IDLBuilderZ23setZ3AincludePrivateZ_vii))(u32, u32);
/* export: 'IDLBuilder#get:seen' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IDLBuilderZ23getZ3AseenZ_ii))(u32);
/* export: 'IDLBuilder#set:seen' */
extern void (*WASM_RT_ADD_PREFIX(Z_IDLBuilderZ23setZ3AseenZ_vii))(u32, u32);
/* export: 'IDLBuilder#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IDLBuilderZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'IDLBuilder#walk' */
extern void (*WASM_RT_ADD_PREFIX(Z_IDLBuilderZ23walkZ_vi))(u32);
/* export: 'IDLBuilder#visitFile' */
extern void (*WASM_RT_ADD_PREFIX(Z_IDLBuilderZ23visitFileZ_vii))(u32, u32);
/* export: 'IDLBuilder#visitElement' */
extern void (*WASM_RT_ADD_PREFIX(Z_IDLBuilderZ23visitElementZ_viii))(u32, u32, u32);
/* export: 'IDLBuilder#visitGlobal' */
extern void (*WASM_RT_ADD_PREFIX(Z_IDLBuilderZ23visitGlobalZ_viii))(u32, u32, u32);
/* export: 'IDLBuilder#visitEnum' */
extern void (*WASM_RT_ADD_PREFIX(Z_IDLBuilderZ23visitEnumZ_viii))(u32, u32, u32);
/* export: 'IDLBuilder#visitFunction' */
extern void (*WASM_RT_ADD_PREFIX(Z_IDLBuilderZ23visitFunctionZ_viii))(u32, u32, u32);
/* export: 'IDLBuilder#visitClass' */
extern void (*WASM_RT_ADD_PREFIX(Z_IDLBuilderZ23visitClassZ_viii))(u32, u32, u32);
/* export: 'IDLBuilder#visitInterface' */
extern void (*WASM_RT_ADD_PREFIX(Z_IDLBuilderZ23visitInterfaceZ_viii))(u32, u32, u32);
/* export: 'IDLBuilder#visitField' */
extern void (*WASM_RT_ADD_PREFIX(Z_IDLBuilderZ23visitFieldZ_viii))(u32, u32, u32);
/* export: 'IDLBuilder#visitNamespace' */
extern void (*WASM_RT_ADD_PREFIX(Z_IDLBuilderZ23visitNamespaceZ_viii))(u32, u32, u32);
/* export: 'IDLBuilder#visitAlias' */
extern void (*WASM_RT_ADD_PREFIX(Z_IDLBuilderZ23visitAliasZ_viiii))(u32, u32, u32, u32);
/* export: 'IDLBuilder#typeToString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IDLBuilderZ23typeToStringZ_iii))(u32, u32);
/* export: 'IDLBuilder#build' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IDLBuilderZ23buildZ_ii))(u32);
/* export: 'IDLBuilder.build' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IDLBuilderZ2EbuildZ_ii))(u32);
/* export: 'TSDBuilder' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TSDBuilderZ_i));
/* export: 'TSDBuilder#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TSDBuilderZ23getZ3AprogramZ_ii))(u32);
/* export: 'TSDBuilder#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_TSDBuilderZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'TSDBuilder#get:includePrivate' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TSDBuilderZ23getZ3AincludePrivateZ_ii))(u32);
/* export: 'TSDBuilder#set:includePrivate' */
extern void (*WASM_RT_ADD_PREFIX(Z_TSDBuilderZ23setZ3AincludePrivateZ_vii))(u32, u32);
/* export: 'TSDBuilder#get:seen' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TSDBuilderZ23getZ3AseenZ_ii))(u32);
/* export: 'TSDBuilder#set:seen' */
extern void (*WASM_RT_ADD_PREFIX(Z_TSDBuilderZ23setZ3AseenZ_vii))(u32, u32);
/* export: 'TSDBuilder#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TSDBuilderZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'TSDBuilder#walk' */
extern void (*WASM_RT_ADD_PREFIX(Z_TSDBuilderZ23walkZ_vi))(u32);
/* export: 'TSDBuilder#visitFile' */
extern void (*WASM_RT_ADD_PREFIX(Z_TSDBuilderZ23visitFileZ_vii))(u32, u32);
/* export: 'TSDBuilder#visitElement' */
extern void (*WASM_RT_ADD_PREFIX(Z_TSDBuilderZ23visitElementZ_viii))(u32, u32, u32);
/* export: 'TSDBuilder#visitGlobal' */
extern void (*WASM_RT_ADD_PREFIX(Z_TSDBuilderZ23visitGlobalZ_viii))(u32, u32, u32);
/* export: 'TSDBuilder#visitEnum' */
extern void (*WASM_RT_ADD_PREFIX(Z_TSDBuilderZ23visitEnumZ_viii))(u32, u32, u32);
/* export: 'TSDBuilder#visitFunction' */
extern void (*WASM_RT_ADD_PREFIX(Z_TSDBuilderZ23visitFunctionZ_viii))(u32, u32, u32);
/* export: 'TSDBuilder#visitClass' */
extern void (*WASM_RT_ADD_PREFIX(Z_TSDBuilderZ23visitClassZ_viii))(u32, u32, u32);
/* export: 'TSDBuilder#visitInterface' */
extern void (*WASM_RT_ADD_PREFIX(Z_TSDBuilderZ23visitInterfaceZ_viii))(u32, u32, u32);
/* export: 'TSDBuilder#visitField' */
extern void (*WASM_RT_ADD_PREFIX(Z_TSDBuilderZ23visitFieldZ_viii))(u32, u32, u32);
/* export: 'TSDBuilder#visitNamespace' */
extern void (*WASM_RT_ADD_PREFIX(Z_TSDBuilderZ23visitNamespaceZ_viii))(u32, u32, u32);
/* export: 'TSDBuilder#visitAlias' */
extern void (*WASM_RT_ADD_PREFIX(Z_TSDBuilderZ23visitAliasZ_viiii))(u32, u32, u32, u32);
/* export: 'TSDBuilder#typeToString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TSDBuilderZ23typeToStringZ_iii))(u32, u32);
/* export: 'TSDBuilder#build' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TSDBuilderZ23buildZ_ii))(u32);
/* export: 'TSDBuilder.build' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TSDBuilderZ2EbuildZ_ii))(u32);
/* export: 'DiagnosticCategory.PEDANTIC' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCategoryZ2EPEDANTICZ_i));
/* export: 'DiagnosticCategory.INFO' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCategoryZ2EINFOZ_i));
/* export: 'DiagnosticCategory.WARNING' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCategoryZ2EWARNINGZ_i));
/* export: 'DiagnosticCategory.ERROR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCategoryZ2EERRORZ_i));
/* export: 'diagnosticCategoryToString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_diagnosticCategoryToStringZ_ii))(u32);
/* export: 'diagnosticCategoryToColor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_diagnosticCategoryToColorZ_ii))(u32);
/* export: 'DiagnosticMessage' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticMessageZ_i));
/* export: 'DiagnosticMessage#get:code' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticMessageZ23getZ3AcodeZ_ii))(u32);
/* export: 'DiagnosticMessage#set:code' */
extern void (*WASM_RT_ADD_PREFIX(Z_DiagnosticMessageZ23setZ3AcodeZ_vii))(u32, u32);
/* export: 'DiagnosticMessage#get:category' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticMessageZ23getZ3AcategoryZ_ii))(u32);
/* export: 'DiagnosticMessage#set:category' */
extern void (*WASM_RT_ADD_PREFIX(Z_DiagnosticMessageZ23setZ3AcategoryZ_vii))(u32, u32);
/* export: 'DiagnosticMessage#get:message' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticMessageZ23getZ3AmessageZ_ii))(u32);
/* export: 'DiagnosticMessage#set:message' */
extern void (*WASM_RT_ADD_PREFIX(Z_DiagnosticMessageZ23setZ3AmessageZ_vii))(u32, u32);
/* export: 'DiagnosticMessage#get:range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticMessageZ23getZ3ArangeZ_ii))(u32);
/* export: 'DiagnosticMessage#set:range' */
extern void (*WASM_RT_ADD_PREFIX(Z_DiagnosticMessageZ23setZ3ArangeZ_vii))(u32, u32);
/* export: 'DiagnosticMessage#get:relatedRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticMessageZ23getZ3ArelatedRangeZ_ii))(u32);
/* export: 'DiagnosticMessage#set:relatedRange' */
extern void (*WASM_RT_ADD_PREFIX(Z_DiagnosticMessageZ23setZ3ArelatedRangeZ_vii))(u32, u32);
/* export: 'DiagnosticMessage#equals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticMessageZ23equalsZ_iii))(u32, u32);
/* export: 'DiagnosticMessage#withRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticMessageZ23withRangeZ_iii))(u32, u32);
/* export: 'DiagnosticMessage#withRelatedRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticMessageZ23withRelatedRangeZ_iii))(u32, u32);
/* export: 'DiagnosticMessage#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticMessageZ23toStringZ_ii))(u32);
/* export: 'DiagnosticMessage.create' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticMessageZ2EcreateZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'formatDiagnosticMessage' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_formatDiagnosticMessageZ_iiii))(u32, u32, u32);
/* export: 'DiagnosticEmitter' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticEmitterZ_i));
/* export: 'DiagnosticEmitter#get:diagnostics' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticEmitterZ23getZ3AdiagnosticsZ_ii))(u32);
/* export: 'DiagnosticEmitter#set:diagnostics' */
extern void (*WASM_RT_ADD_PREFIX(Z_DiagnosticEmitterZ23setZ3AdiagnosticsZ_vii))(u32, u32);
/* export: 'DiagnosticEmitter#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticEmitterZ23constructorZ_iii))(u32, u32);
/* export: 'DiagnosticEmitter#emitDiagnostic' */
extern void (*WASM_RT_ADD_PREFIX(Z_DiagnosticEmitterZ23emitDiagnosticZ_viiiiiiii))(u32, u32, u32, u32, u32, u32, u32, u32);
/* export: 'DiagnosticEmitter#pedantic' */
extern void (*WASM_RT_ADD_PREFIX(Z_DiagnosticEmitterZ23pedanticZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'DiagnosticEmitter#pedanticRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_DiagnosticEmitterZ23pedanticRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'DiagnosticEmitter#info' */
extern void (*WASM_RT_ADD_PREFIX(Z_DiagnosticEmitterZ23infoZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'DiagnosticEmitter#infoRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_DiagnosticEmitterZ23infoRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'DiagnosticEmitter#warning' */
extern void (*WASM_RT_ADD_PREFIX(Z_DiagnosticEmitterZ23warningZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'DiagnosticEmitter#warningRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_DiagnosticEmitterZ23warningRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'DiagnosticEmitter#error' */
extern void (*WASM_RT_ADD_PREFIX(Z_DiagnosticEmitterZ23errorZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'DiagnosticEmitter#errorRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_DiagnosticEmitterZ23errorRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'DiagnosticCode.Not_implemented_0' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2ENot_implemented_0Z_i));
/* export: 'DiagnosticCode.Operation_is_unsafe' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EOperation_is_unsafeZ_i));
/* export: 'DiagnosticCode.User_defined_0' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EUser_defined_0Z_i));
/* export: 'DiagnosticCode.Feature_0_is_not_enabled' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EFeature_0_is_not_enabledZ_i));
/* export: 'DiagnosticCode.Low_memory_limit_exceeded_by_static_data_0_1' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2ELow_memory_limit_exceeded_by_static_data_0_1Z_i));
/* export: 'DiagnosticCode.Module_requires_at_least_0_pages_of_initial_memory' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EModule_requires_at_least_0_pages_of_initial_memoryZ_i));
/* export: 'DiagnosticCode.Module_requires_at_least_0_pages_of_maximum_memory' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EModule_requires_at_least_0_pages_of_maximum_memoryZ_i));
/* export: 'DiagnosticCode.Shared_memory_requires_maximum_memory_to_be_defined' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EShared_memory_requires_maximum_memory_to_be_definedZ_i));
/* export: 'DiagnosticCode.Shared_memory_requires_feature_threads_to_be_enabled' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EShared_memory_requires_feature_threads_to_be_enabledZ_i));
/* export: 'DiagnosticCode.Conversion_from_type_0_to_1_requires_an_explicit_cast' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EConversion_from_type_0_to_1_requires_an_explicit_castZ_i));
/* export: 'DiagnosticCode.Conversion_from_type_0_to_1_will_require_an_explicit_cast_when_switching_between_32_64_bit' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EConversion_from_type_0_to_1_will_require_an_explicit_cast_when_switching_between_32_64_bitZ_i));
/* export: 'DiagnosticCode.Type_0_cannot_be_changed_to_type_1' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EType_0_cannot_be_changed_to_type_1Z_i));
/* export: 'DiagnosticCode.Operation_0_cannot_be_applied_to_type_1' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EOperation_0_cannot_be_applied_to_type_1Z_i));
/* export: 'DiagnosticCode.Type_0_cannot_be_nullable' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EType_0_cannot_be_nullableZ_i));
/* export: 'DiagnosticCode.Cannot_export_a_mutable_global' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2ECannot_export_a_mutable_globalZ_i));
/* export: 'DiagnosticCode.Mutable_value_cannot_be_inlined' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EMutable_value_cannot_be_inlinedZ_i));
/* export: 'DiagnosticCode.Unmanaged_classes_cannot_extend_managed_classes_and_vice_versa' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EUnmanaged_classes_cannot_extend_managed_classes_and_vice_versaZ_i));
/* export: 'DiagnosticCode.Unmanaged_classes_cannot_implement_interfaces' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EUnmanaged_classes_cannot_implement_interfacesZ_i));
/* export: 'DiagnosticCode.Invalid_regular_expression_flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EInvalid_regular_expression_flagsZ_i));
/* export: 'DiagnosticCode.Expression_is_never_null' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EExpression_is_never_nullZ_i));
/* export: 'DiagnosticCode.Class_0_is_final_and_cannot_be_extended' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EClass_0_is_final_and_cannot_be_extendedZ_i));
/* export: 'DiagnosticCode.Decorator_0_is_not_valid_here' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EDecorator_0_is_not_valid_hereZ_i));
/* export: 'DiagnosticCode.Duplicate_decorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EDuplicate_decoratorZ_i));
/* export: 'DiagnosticCode.Type_0_is_illegal_in_this_context' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EType_0_is_illegal_in_this_contextZ_i));
/* export: 'DiagnosticCode.Optional_parameter_must_have_an_initializer' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EOptional_parameter_must_have_an_initializerZ_i));
/* export: 'DiagnosticCode.Class_0_cannot_declare_a_constructor_when_instantiated_from_an_object_literal' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EClass_0_cannot_declare_a_constructor_when_instantiated_from_an_object_literalZ_i));
/* export: 'DiagnosticCode.Function_0_cannot_be_inlined_into_itself' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EFunction_0_cannot_be_inlined_into_itselfZ_i));
/* export: 'DiagnosticCode.Cannot_access_method_0_without_calling_it_as_it_requires_this_to_be_set' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2ECannot_access_method_0_without_calling_it_as_it_requires_this_to_be_setZ_i));
/* export: 'DiagnosticCode.Optional_properties_are_not_supported' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EOptional_properties_are_not_supportedZ_i));
/* export: 'DiagnosticCode.Expression_must_be_a_compile_time_constant' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EExpression_must_be_a_compile_time_constantZ_i));
/* export: 'DiagnosticCode.Type_0_is_not_a_function_index_or_function_reference' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EType_0_is_not_a_function_index_or_function_referenceZ_i));
/* export: 'DiagnosticCode._0_must_be_a_value_between_1_and_2_inclusive' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2E_0_must_be_a_value_between_1_and_2_inclusiveZ_i));
/* export: 'DiagnosticCode._0_must_be_a_power_of_two' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2E_0_must_be_a_power_of_twoZ_i));
/* export: 'DiagnosticCode._0_is_not_a_valid_operator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2E_0_is_not_a_valid_operatorZ_i));
/* export: 'DiagnosticCode.Expression_cannot_be_represented_by_a_type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EExpression_cannot_be_represented_by_a_typeZ_i));
/* export: 'DiagnosticCode.Expression_resolves_to_unusual_type_0' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EExpression_resolves_to_unusual_type_0Z_i));
/* export: 'DiagnosticCode.Array_literal_expected' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EArray_literal_expectedZ_i));
/* export: 'DiagnosticCode.Function_0_is_virtual_and_will_not_be_inlined' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EFunction_0_is_virtual_and_will_not_be_inlinedZ_i));
/* export: 'DiagnosticCode.Property_0_only_has_a_setter_and_is_missing_a_getter' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EProperty_0_only_has_a_setter_and_is_missing_a_getterZ_i));
/* export: 'DiagnosticCode._0_keyword_cannot_be_used_here' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2E_0_keyword_cannot_be_used_hereZ_i));
/* export: 'DiagnosticCode.A_class_with_a_constructor_explicitly_returning_something_else_than_this_must_be_final' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EA_class_with_a_constructor_explicitly_returning_something_else_than_this_must_be_finalZ_i));
/* export: 'DiagnosticCode.Exported_generic_function_or_class_has_no_concrete_instances' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EExported_generic_function_or_class_has_no_concrete_instancesZ_i));
/* export: 'DiagnosticCode.Property_0_is_always_assigned_before_being_used' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EProperty_0_is_always_assigned_before_being_usedZ_i));
/* export: 'DiagnosticCode.Importing_the_table_disables_some_indirect_call_optimizations' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EImporting_the_table_disables_some_indirect_call_optimizationsZ_i));
/* export: 'DiagnosticCode.Exporting_the_table_disables_some_indirect_call_optimizations' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EExporting_the_table_disables_some_indirect_call_optimizationsZ_i));
/* export: 'DiagnosticCode.Expression_compiles_to_a_dynamic_check_at_runtime' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EExpression_compiles_to_a_dynamic_check_at_runtimeZ_i));
/* export: 'DiagnosticCode.Indexed_access_may_involve_bounds_checking' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EIndexed_access_may_involve_bounds_checkingZ_i));
/* export: 'DiagnosticCode.Explicitly_returning_constructor_drops_this_allocation' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EExplicitly_returning_constructor_drops_this_allocationZ_i));
/* export: 'DiagnosticCode.Unnecessary_definite_assignment' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EUnnecessary_definite_assignmentZ_i));
/* export: 'DiagnosticCode.Unterminated_string_literal' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EUnterminated_string_literalZ_i));
/* export: 'DiagnosticCode.Identifier_expected' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EIdentifier_expectedZ_i));
/* export: 'DiagnosticCode._0_expected' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2E_0_expectedZ_i));
/* export: 'DiagnosticCode.A_file_cannot_have_a_reference_to_itself' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EA_file_cannot_have_a_reference_to_itselfZ_i));
/* export: 'DiagnosticCode.Trailing_comma_not_allowed' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2ETrailing_comma_not_allowedZ_i));
/* export: 'DiagnosticCode.Unexpected_token' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EUnexpected_tokenZ_i));
/* export: 'DiagnosticCode.A_rest_parameter_must_be_last_in_a_parameter_list' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EA_rest_parameter_must_be_last_in_a_parameter_listZ_i));
/* export: 'DiagnosticCode.Parameter_cannot_have_question_mark_and_initializer' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EParameter_cannot_have_question_mark_and_initializerZ_i));
/* export: 'DiagnosticCode.A_required_parameter_cannot_follow_an_optional_parameter' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EA_required_parameter_cannot_follow_an_optional_parameterZ_i));
/* export: 'DiagnosticCode.Statements_are_not_allowed_in_ambient_contexts' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EStatements_are_not_allowed_in_ambient_contextsZ_i));
/* export: 'DiagnosticCode.Initializers_are_not_allowed_in_ambient_contexts' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EInitializers_are_not_allowed_in_ambient_contextsZ_i));
/* export: 'DiagnosticCode._0_modifier_cannot_be_used_here' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2E_0_modifier_cannot_be_used_hereZ_i));
/* export: 'DiagnosticCode.A_rest_parameter_cannot_be_optional' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EA_rest_parameter_cannot_be_optionalZ_i));
/* export: 'DiagnosticCode.A_rest_parameter_cannot_have_an_initializer' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EA_rest_parameter_cannot_have_an_initializerZ_i));
/* export: 'DiagnosticCode.A_set_accessor_must_have_exactly_one_parameter' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EA_set_accessor_must_have_exactly_one_parameterZ_i));
/* export: 'DiagnosticCode.A_set_accessor_parameter_cannot_have_an_initializer' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EA_set_accessor_parameter_cannot_have_an_initializerZ_i));
/* export: 'DiagnosticCode.A_get_accessor_cannot_have_parameters' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EA_get_accessor_cannot_have_parametersZ_i));
/* export: 'DiagnosticCode.Enum_member_must_have_initializer' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EEnum_member_must_have_initializerZ_i));
/* export: 'DiagnosticCode.Type_parameters_cannot_appear_on_a_constructor_declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EType_parameters_cannot_appear_on_a_constructor_declarationZ_i));
/* export: 'DiagnosticCode.Type_annotation_cannot_appear_on_a_constructor_declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EType_annotation_cannot_appear_on_a_constructor_declarationZ_i));
/* export: 'DiagnosticCode.An_accessor_cannot_have_type_parameters' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EAn_accessor_cannot_have_type_parametersZ_i));
/* export: 'DiagnosticCode.A_set_accessor_cannot_have_a_return_type_annotation' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EA_set_accessor_cannot_have_a_return_type_annotationZ_i));
/* export: 'DiagnosticCode.Type_parameter_list_cannot_be_empty' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EType_parameter_list_cannot_be_emptyZ_i));
/* export: 'DiagnosticCode.Type_argument_list_cannot_be_empty' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EType_argument_list_cannot_be_emptyZ_i));
/* export: 'DiagnosticCode.A_continue_statement_can_only_be_used_within_an_enclosing_iteration_statement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EA_continue_statement_can_only_be_used_within_an_enclosing_iteration_statementZ_i));
/* export: 'DiagnosticCode.A_break_statement_can_only_be_used_within_an_enclosing_iteration_or_switch_statement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EA_break_statement_can_only_be_used_within_an_enclosing_iteration_or_switch_statementZ_i));
/* export: 'DiagnosticCode.A_return_statement_can_only_be_used_within_a_function_body' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EA_return_statement_can_only_be_used_within_a_function_bodyZ_i));
/* export: 'DiagnosticCode.Expression_expected' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EExpression_expectedZ_i));
/* export: 'DiagnosticCode.Type_expected' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EType_expectedZ_i));
/* export: 'DiagnosticCode.A_default_clause_cannot_appear_more_than_once_in_a_switch_statement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EA_default_clause_cannot_appear_more_than_once_in_a_switch_statementZ_i));
/* export: 'DiagnosticCode.Duplicate_label_0' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EDuplicate_label_0Z_i));
/* export: 'DiagnosticCode.An_export_assignment_cannot_have_modifiers' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EAn_export_assignment_cannot_have_modifiersZ_i));
/* export: 'DiagnosticCode.Octal_literals_are_not_allowed_in_strict_mode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EOctal_literals_are_not_allowed_in_strict_modeZ_i));
/* export: 'DiagnosticCode.Digit_expected' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EDigit_expectedZ_i));
/* export: 'DiagnosticCode.Hexadecimal_digit_expected' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EHexadecimal_digit_expectedZ_i));
/* export: 'DiagnosticCode.Unexpected_end_of_text' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EUnexpected_end_of_textZ_i));
/* export: 'DiagnosticCode.Invalid_character' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EInvalid_characterZ_i));
/* export: 'DiagnosticCode._case_or_default_expected' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2E_case_or_default_expectedZ_i));
/* export: 'DiagnosticCode._super_must_be_followed_by_an_argument_list_or_member_access' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2E_super_must_be_followed_by_an_argument_list_or_member_accessZ_i));
/* export: 'DiagnosticCode.A_declare_modifier_cannot_be_used_in_an_already_ambient_context' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EA_declare_modifier_cannot_be_used_in_an_already_ambient_contextZ_i));
/* export: 'DiagnosticCode.Type_argument_expected' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EType_argument_expectedZ_i));
/* export: 'DiagnosticCode.String_literal_expected' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EString_literal_expectedZ_i));
/* export: 'DiagnosticCode.Line_break_not_permitted_here' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2ELine_break_not_permitted_hereZ_i));
/* export: 'DiagnosticCode.Declaration_expected' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EDeclaration_expectedZ_i));
/* export: 'DiagnosticCode._const_declarations_must_be_initialized' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2E_const_declarations_must_be_initializedZ_i));
/* export: 'DiagnosticCode.Unterminated_regular_expression_literal' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EUnterminated_regular_expression_literalZ_i));
/* export: 'DiagnosticCode.Interface_declaration_cannot_have_implements_clause' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EInterface_declaration_cannot_have_implements_clauseZ_i));
/* export: 'DiagnosticCode.Binary_digit_expected' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EBinary_digit_expectedZ_i));
/* export: 'DiagnosticCode.Octal_digit_expected' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EOctal_digit_expectedZ_i));
/* export: 'DiagnosticCode.An_implementation_cannot_be_declared_in_ambient_contexts' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EAn_implementation_cannot_be_declared_in_ambient_contextsZ_i));
/* export: 'DiagnosticCode.The_variable_declaration_of_a_for_of_statement_cannot_have_an_initializer' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EThe_variable_declaration_of_a_for_of_statement_cannot_have_an_initializerZ_i));
/* export: 'DiagnosticCode.An_extended_Unicode_escape_value_must_be_between_0x0_and_0x10FFFF_inclusive' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EAn_extended_Unicode_escape_value_must_be_between_0x0_and_0x10FFFF_inclusiveZ_i));
/* export: 'DiagnosticCode.Unterminated_Unicode_escape_sequence' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EUnterminated_Unicode_escape_sequenceZ_i));
/* export: 'DiagnosticCode.Decorators_are_not_valid_here' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EDecorators_are_not_valid_hereZ_i));
/* export: 'DiagnosticCode._abstract_modifier_can_only_appear_on_a_class_method_or_property_declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2E_abstract_modifier_can_only_appear_on_a_class_method_or_property_declarationZ_i));
/* export: 'DiagnosticCode.Method_0_cannot_have_an_implementation_because_it_is_marked_abstract' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EMethod_0_cannot_have_an_implementation_because_it_is_marked_abstractZ_i));
/* export: 'DiagnosticCode.A_definite_assignment_assertion_is_not_permitted_in_this_context' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EA_definite_assignment_assertion_is_not_permitted_in_this_contextZ_i));
/* export: 'DiagnosticCode.A_class_may_only_extend_another_class' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EA_class_may_only_extend_another_classZ_i));
/* export: 'DiagnosticCode.A_parameter_property_cannot_be_declared_using_a_rest_parameter' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EA_parameter_property_cannot_be_declared_using_a_rest_parameterZ_i));
/* export: 'DiagnosticCode.Duplicate_identifier_0' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EDuplicate_identifier_0Z_i));
/* export: 'DiagnosticCode.Cannot_find_name_0' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2ECannot_find_name_0Z_i));
/* export: 'DiagnosticCode.Module_0_has_no_exported_member_1' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EModule_0_has_no_exported_member_1Z_i));
/* export: 'DiagnosticCode.An_interface_can_only_extend_an_interface' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EAn_interface_can_only_extend_an_interfaceZ_i));
/* export: 'DiagnosticCode.Generic_type_0_requires_1_type_argument_s' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EGeneric_type_0_requires_1_type_argument_sZ_i));
/* export: 'DiagnosticCode.Type_0_is_not_generic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EType_0_is_not_genericZ_i));
/* export: 'DiagnosticCode.Type_0_is_not_assignable_to_type_1' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EType_0_is_not_assignable_to_type_1Z_i));
/* export: 'DiagnosticCode.Index_signature_is_missing_in_type_0' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EIndex_signature_is_missing_in_type_0Z_i));
/* export: 'DiagnosticCode._this_cannot_be_referenced_in_current_location' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2E_this_cannot_be_referenced_in_current_locationZ_i));
/* export: 'DiagnosticCode._super_can_only_be_referenced_in_a_derived_class' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2E_super_can_only_be_referenced_in_a_derived_classZ_i));
/* export: 'DiagnosticCode.Super_calls_are_not_permitted_outside_constructors_or_in_nested_functions_inside_constructors' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2ESuper_calls_are_not_permitted_outside_constructors_or_in_nested_functions_inside_constructorsZ_i));
/* export: 'DiagnosticCode.Property_0_does_not_exist_on_type_1' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EProperty_0_does_not_exist_on_type_1Z_i));
/* export: 'DiagnosticCode.Property_0_is_private_and_only_accessible_within_class_1' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EProperty_0_is_private_and_only_accessible_within_class_1Z_i));
/* export: 'DiagnosticCode.Cannot_invoke_an_expression_whose_type_lacks_a_call_signature_Type_0_has_no_compatible_call_signatures' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2ECannot_invoke_an_expression_whose_type_lacks_a_call_signature_Type_0_has_no_compatible_call_signaturesZ_i));
/* export: 'DiagnosticCode.This_expression_is_not_constructable' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EThis_expression_is_not_constructableZ_i));
/* export: 'DiagnosticCode.A_function_whose_declared_type_is_not_void_must_return_a_value' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EA_function_whose_declared_type_is_not_void_must_return_a_valueZ_i));
/* export: 'DiagnosticCode.The_operand_of_an_increment_or_decrement_operator_must_be_a_variable_or_a_property_access' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EThe_operand_of_an_increment_or_decrement_operator_must_be_a_variable_or_a_property_accessZ_i));
/* export: 'DiagnosticCode.The_left_hand_side_of_an_assignment_expression_must_be_a_variable_or_a_property_access' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EThe_left_hand_side_of_an_assignment_expression_must_be_a_variable_or_a_property_accessZ_i));
/* export: 'DiagnosticCode.Operator_0_cannot_be_applied_to_types_1_and_2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EOperator_0_cannot_be_applied_to_types_1_and_2Z_i));
/* export: 'DiagnosticCode.A_super_call_must_be_the_first_statement_in_the_constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EA_super_call_must_be_the_first_statement_in_the_constructorZ_i));
/* export: 'DiagnosticCode.Constructors_for_derived_classes_must_contain_a_super_call' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EConstructors_for_derived_classes_must_contain_a_super_callZ_i));
/* export: 'DiagnosticCode.Getter_and_setter_accessors_do_not_agree_in_visibility' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EGetter_and_setter_accessors_do_not_agree_in_visibilityZ_i));
/* export: 'DiagnosticCode._get_and_set_accessor_must_have_the_same_type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2E_get_and_set_accessor_must_have_the_same_typeZ_i));
/* export: 'DiagnosticCode.Overload_signatures_must_all_be_public_private_or_protected' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EOverload_signatures_must_all_be_public_private_or_protectedZ_i));
/* export: 'DiagnosticCode.Constructor_implementation_is_missing' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EConstructor_implementation_is_missingZ_i));
/* export: 'DiagnosticCode.Function_implementation_is_missing_or_not_immediately_following_the_declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EFunction_implementation_is_missing_or_not_immediately_following_the_declarationZ_i));
/* export: 'DiagnosticCode.Multiple_constructor_implementations_are_not_allowed' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EMultiple_constructor_implementations_are_not_allowedZ_i));
/* export: 'DiagnosticCode.Duplicate_function_implementation' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EDuplicate_function_implementationZ_i));
/* export: 'DiagnosticCode.This_overload_signature_is_not_compatible_with_its_implementation_signature' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EThis_overload_signature_is_not_compatible_with_its_implementation_signatureZ_i));
/* export: 'DiagnosticCode.Individual_declarations_in_merged_declaration_0_must_be_all_exported_or_all_local' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EIndividual_declarations_in_merged_declaration_0_must_be_all_exported_or_all_localZ_i));
/* export: 'DiagnosticCode.A_class_can_only_implement_an_interface' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EA_class_can_only_implement_an_interfaceZ_i));
/* export: 'DiagnosticCode.A_namespace_declaration_cannot_be_located_prior_to_a_class_or_function_with_which_it_is_merged' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EA_namespace_declaration_cannot_be_located_prior_to_a_class_or_function_with_which_it_is_mergedZ_i));
/* export: 'DiagnosticCode.Property_0_is_protected_and_only_accessible_within_class_1_and_its_subclasses' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EProperty_0_is_protected_and_only_accessible_within_class_1_and_its_subclassesZ_i));
/* export: 'DiagnosticCode.Variable_0_used_before_its_declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EVariable_0_used_before_its_declarationZ_i));
/* export: 'DiagnosticCode.The_type_argument_for_type_parameter_0_cannot_be_inferred_from_the_usage_Consider_specifying_the_type_arguments_explicitly' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EThe_type_argument_for_type_parameter_0_cannot_be_inferred_from_the_usage_Consider_specifying_the_type_arguments_explicitlyZ_i));
/* export: 'DiagnosticCode.Type_0_has_no_property_1' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EType_0_has_no_property_1Z_i));
/* export: 'DiagnosticCode.The_0_operator_cannot_be_applied_to_type_1' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EThe_0_operator_cannot_be_applied_to_type_1Z_i));
/* export: 'DiagnosticCode.In_const_enum_declarations_member_initializer_must_be_constant_expression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EIn_const_enum_declarations_member_initializer_must_be_constant_expressionZ_i));
/* export: 'DiagnosticCode.Export_declaration_conflicts_with_exported_declaration_of_0' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EExport_declaration_conflicts_with_exported_declaration_of_0Z_i));
/* export: 'DiagnosticCode._0_is_referenced_directly_or_indirectly_in_its_own_base_expression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2E_0_is_referenced_directly_or_indirectly_in_its_own_base_expressionZ_i));
/* export: 'DiagnosticCode.Cannot_create_an_instance_of_an_abstract_class' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2ECannot_create_an_instance_of_an_abstract_classZ_i));
/* export: 'DiagnosticCode.Non_abstract_class_0_does_not_implement_inherited_abstract_member_1_from_2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2ENon_abstract_class_0_does_not_implement_inherited_abstract_member_1_from_2Z_i));
/* export: 'DiagnosticCode.Object_is_possibly_null' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EObject_is_possibly_nullZ_i));
/* export: 'DiagnosticCode.Cannot_assign_to_0_because_it_is_a_constant_or_a_read_only_property' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2ECannot_assign_to_0_because_it_is_a_constant_or_a_read_only_propertyZ_i));
/* export: 'DiagnosticCode.The_target_of_an_assignment_must_be_a_variable_or_a_property_access' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EThe_target_of_an_assignment_must_be_a_variable_or_a_property_accessZ_i));
/* export: 'DiagnosticCode.Index_signature_in_type_0_only_permits_reading' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EIndex_signature_in_type_0_only_permits_readingZ_i));
/* export: 'DiagnosticCode.Expected_0_arguments_but_got_1' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EExpected_0_arguments_but_got_1Z_i));
/* export: 'DiagnosticCode.Expected_at_least_0_arguments_but_got_1' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EExpected_at_least_0_arguments_but_got_1Z_i));
/* export: 'DiagnosticCode.Expected_0_type_arguments_but_got_1' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EExpected_0_type_arguments_but_got_1Z_i));
/* export: 'DiagnosticCode.Property_0_has_no_initializer_and_is_not_assigned_in_the_constructor_before_this_is_used_or_returned' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EProperty_0_has_no_initializer_and_is_not_assigned_in_the_constructor_before_this_is_used_or_returnedZ_i));
/* export: 'DiagnosticCode.Property_0_is_used_before_being_assigned' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EProperty_0_is_used_before_being_assignedZ_i));
/* export: 'DiagnosticCode.A_member_initializer_in_a_enum_declaration_cannot_reference_members_declared_after_it_including_members_defined_in_other_enums' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EA_member_initializer_in_a_enum_declaration_cannot_reference_members_declared_after_it_including_members_defined_in_other_enumsZ_i));
/* export: 'DiagnosticCode.Constructor_of_class_0_is_private_and_only_accessible_within_the_class_declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EConstructor_of_class_0_is_private_and_only_accessible_within_the_class_declarationZ_i));
/* export: 'DiagnosticCode.Constructor_of_class_0_is_protected_and_only_accessible_within_the_class_declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EConstructor_of_class_0_is_protected_and_only_accessible_within_the_class_declarationZ_i));
/* export: 'DiagnosticCode.The_this_types_of_each_signature_are_incompatible' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EThe_this_types_of_each_signature_are_incompatibleZ_i));
/* export: 'DiagnosticCode.Namespace_0_has_no_exported_member_1' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2ENamespace_0_has_no_exported_member_1Z_i));
/* export: 'DiagnosticCode.Required_type_parameters_may_not_follow_optional_type_parameters' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2ERequired_type_parameters_may_not_follow_optional_type_parametersZ_i));
/* export: 'DiagnosticCode.Duplicate_property_0' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EDuplicate_property_0Z_i));
/* export: 'DiagnosticCode.Property_0_is_missing_in_type_1_but_required_in_type_2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EProperty_0_is_missing_in_type_1_but_required_in_type_2Z_i));
/* export: 'DiagnosticCode.Type_0_has_no_call_signatures' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EType_0_has_no_call_signaturesZ_i));
/* export: 'DiagnosticCode.File_0_not_found' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EFile_0_not_foundZ_i));
/* export: 'DiagnosticCode.Numeric_separators_are_not_allowed_here' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2ENumeric_separators_are_not_allowed_hereZ_i));
/* export: 'DiagnosticCode.Multiple_consecutive_numeric_separators_are_not_permitted' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2EMultiple_consecutive_numeric_separators_are_not_permittedZ_i));
/* export: 'DiagnosticCode._super_must_be_called_before_accessing_this_in_the_constructor_of_a_derived_class' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2E_super_must_be_called_before_accessing_this_in_the_constructor_of_a_derived_classZ_i));
/* export: 'DiagnosticCode._super_must_be_called_before_accessing_a_property_of_super_in_the_constructor_of_a_derived_class' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DiagnosticCodeZ2E_super_must_be_called_before_accessing_a_property_of_super_in_the_constructor_of_a_derived_classZ_i));
/* export: 'diagnosticCodeToString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_diagnosticCodeToStringZ_ii))(u32);
/* export: 'FlowFlags.NONE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowFlagsZ2ENONEZ_i));
/* export: 'FlowFlags.RETURNS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowFlagsZ2ERETURNSZ_i));
/* export: 'FlowFlags.RETURNS_WRAPPED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowFlagsZ2ERETURNS_WRAPPEDZ_i));
/* export: 'FlowFlags.RETURNS_NONNULL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowFlagsZ2ERETURNS_NONNULLZ_i));
/* export: 'FlowFlags.THROWS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowFlagsZ2ETHROWSZ_i));
/* export: 'FlowFlags.BREAKS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowFlagsZ2EBREAKSZ_i));
/* export: 'FlowFlags.CONTINUES' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowFlagsZ2ECONTINUESZ_i));
/* export: 'FlowFlags.ACCESSES_THIS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowFlagsZ2EACCESSES_THISZ_i));
/* export: 'FlowFlags.CALLS_SUPER' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowFlagsZ2ECALLS_SUPERZ_i));
/* export: 'FlowFlags.TERMINATES' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowFlagsZ2ETERMINATESZ_i));
/* export: 'FlowFlags.CONDITIONALLY_RETURNS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowFlagsZ2ECONDITIONALLY_RETURNSZ_i));
/* export: 'FlowFlags.CONDITIONALLY_THROWS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowFlagsZ2ECONDITIONALLY_THROWSZ_i));
/* export: 'FlowFlags.CONDITIONALLY_BREAKS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowFlagsZ2ECONDITIONALLY_BREAKSZ_i));
/* export: 'FlowFlags.CONDITIONALLY_CONTINUES' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowFlagsZ2ECONDITIONALLY_CONTINUESZ_i));
/* export: 'FlowFlags.CONDITIONALLY_ACCESSES_THIS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowFlagsZ2ECONDITIONALLY_ACCESSES_THISZ_i));
/* export: 'FlowFlags.MAY_RETURN_NONTHIS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowFlagsZ2EMAY_RETURN_NONTHISZ_i));
/* export: 'FlowFlags.UNCHECKED_CONTEXT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowFlagsZ2EUNCHECKED_CONTEXTZ_i));
/* export: 'FlowFlags.ANY_CATEGORICAL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowFlagsZ2EANY_CATEGORICALZ_i));
/* export: 'FlowFlags.ANY_CONDITIONAL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowFlagsZ2EANY_CONDITIONALZ_i));
/* export: 'LocalFlags.NONE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalFlagsZ2ENONEZ_i));
/* export: 'LocalFlags.CONSTANT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalFlagsZ2ECONSTANTZ_i));
/* export: 'LocalFlags.WRAPPED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalFlagsZ2EWRAPPEDZ_i));
/* export: 'LocalFlags.NONNULL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalFlagsZ2ENONNULLZ_i));
/* export: 'LocalFlags.INITIALIZED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalFlagsZ2EINITIALIZ5AEDZ_i));
/* export: 'FieldFlags.NONE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldFlagsZ2ENONEZ_i));
/* export: 'FieldFlags.INITIALIZED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldFlagsZ2EINITIALIZ5AEDZ_i));
/* export: 'ConditionKind.UNKNOWN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConditionKindZ2EUNKNOWNZ_i));
/* export: 'ConditionKind.TRUE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConditionKindZ2ETRUEZ_i));
/* export: 'ConditionKind.FALSE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConditionKindZ2EFALSEZ_i));
/* export: 'Flow' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ_i));
/* export: 'Flow#get:parentFunction' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23getZ3AparentFunctionZ_ii))(u32);
/* export: 'Flow#set:parentFunction' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23setZ3AparentFunctionZ_vii))(u32, u32);
/* export: 'Flow#get:parent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23getZ3AparentZ_ii))(u32);
/* export: 'Flow#set:parent' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23setZ3AparentZ_vii))(u32, u32);
/* export: 'Flow#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23getZ3AflagsZ_ii))(u32);
/* export: 'Flow#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'Flow#get:continueLabel' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23getZ3AcontinueLabelZ_ii))(u32);
/* export: 'Flow#set:continueLabel' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23setZ3AcontinueLabelZ_vii))(u32, u32);
/* export: 'Flow#get:breakLabel' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23getZ3AbreakLabelZ_ii))(u32);
/* export: 'Flow#set:breakLabel' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23setZ3AbreakLabelZ_vii))(u32, u32);
/* export: 'Flow#get:scopedLocals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23getZ3AscopedLocalsZ_ii))(u32);
/* export: 'Flow#set:scopedLocals' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23setZ3AscopedLocalsZ_vii))(u32, u32);
/* export: 'Flow#get:localFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23getZ3AlocalFlagsZ_ii))(u32);
/* export: 'Flow#set:localFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23setZ3AlocalFlagsZ_vii))(u32, u32);
/* export: 'Flow#get:thisFieldFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23getZ3AthisFieldFlagsZ_ii))(u32);
/* export: 'Flow#set:thisFieldFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23setZ3AthisFieldFlagsZ_vii))(u32, u32);
/* export: 'Flow#get:inlineFunction' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23getZ3AinlineFunctionZ_ii))(u32);
/* export: 'Flow#set:inlineFunction' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23setZ3AinlineFunctionZ_vii))(u32, u32);
/* export: 'Flow#get:inlineReturnLabel' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23getZ3AinlineReturnLabelZ_ii))(u32);
/* export: 'Flow#set:inlineReturnLabel' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23setZ3AinlineReturnLabelZ_vii))(u32, u32);
/* export: 'Flow#get:isInline' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23getZ3AisInlineZ_ii))(u32);
/* export: 'Flow#get:actualFunction' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23getZ3AactualFunctionZ_ii))(u32);
/* export: 'Flow#get:returnType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23getZ3AreturnTypeZ_ii))(u32);
/* export: 'Flow#get:contextualTypeArguments' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23getZ3AcontextualTypeArgumentsZ_ii))(u32);
/* export: 'Flow#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23isZ_iii))(u32, u32);
/* export: 'Flow#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23isAnyZ_iii))(u32, u32);
/* export: 'Flow#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23setZ_vii))(u32, u32);
/* export: 'Flow#unset' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23unsetZ_vii))(u32, u32);
/* export: 'Flow#fork' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23forkZ_iii))(u32, u32);
/* export: 'Flow#getTempLocal' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23getTempLocalZ_iiii))(u32, u32, u32);
/* export: 'Flow#freeTempLocal' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23freeTempLocalZ_vii))(u32, u32);
/* export: 'Flow#getScopedLocal' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23getScopedLocalZ_iii))(u32, u32);
/* export: 'Flow#addScopedLocal' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23addScopedLocalZ_iiiii))(u32, u32, u32, u32);
/* export: 'Flow#addScopedDummyLocal' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23addScopedDummyLocalZ_iiii))(u32, u32, u32);
/* export: 'Flow#addScopedAlias' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23addScopedAliasZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Flow#get:hasScopedLocals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23getZ3AhasScopedLocalsZ_ii))(u32);
/* export: 'Flow#freeScopedDummyLocal' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23freeScopedDummyLocalZ_vii))(u32, u32);
/* export: 'Flow#freeScopedLocals' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23freeScopedLocalsZ_vi))(u32);
/* export: 'Flow#lookupLocal' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23lookupLocalZ_iii))(u32, u32);
/* export: 'Flow#lookup' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23lookupZ_iii))(u32, u32);
/* export: 'Flow#isLocalFlag' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23isLocalFlagZ_iiiii))(u32, u32, u32, u32);
/* export: 'Flow#isAnyLocalFlag' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23isAnyLocalFlagZ_iiiii))(u32, u32, u32, u32);
/* export: 'Flow#setLocalFlag' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23setLocalFlagZ_viii))(u32, u32, u32);
/* export: 'Flow#unsetLocalFlag' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23unsetLocalFlagZ_viii))(u32, u32, u32);
/* export: 'Flow#initThisFieldFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23initThisFieldFlagsZ_vi))(u32);
/* export: 'Flow#isThisFieldFlag' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23isThisFieldFlagZ_iiii))(u32, u32, u32);
/* export: 'Flow#setThisFieldFlag' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23setThisFieldFlagZ_viii))(u32, u32, u32);
/* export: 'Flow#pushBreakLabel' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23pushBreakLabelZ_ii))(u32);
/* export: 'Flow#popBreakLabel' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23popBreakLabelZ_vi))(u32);
/* export: 'Flow#inherit' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23inheritZ_vii))(u32, u32);
/* export: 'Flow#inheritBranch' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23inheritBranchZ_viii))(u32, u32, u32);
/* export: 'Flow#inheritMutual' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23inheritMutualZ_viii))(u32, u32, u32);
/* export: 'Flow#unifyLocalFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23unifyLocalFlagsZ_vii))(u32, u32);
/* export: 'Flow#isNonnull' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23isNonnullZ_iiii))(u32, u32, u32);
/* export: 'Flow#inheritNonnullIfTrue' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23inheritNonnullIfTrueZ_viii))(u32, u32, u32);
/* export: 'Flow#inheritNonnullIfFalse' */
extern void (*WASM_RT_ADD_PREFIX(Z_FlowZ23inheritNonnullIfFalseZ_viii))(u32, u32, u32);
/* export: 'Flow#canOverflow' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23canOverflowZ_iiii))(u32, u32, u32);
/* export: 'Flow#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ23toStringZ_ii))(u32);
/* export: 'Flow.createParent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ2EcreateParentZ_ii))(u32);
/* export: 'Flow.createInline' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ2EcreateInlineZ_iii))(u32, u32);
/* export: 'Flow.hasIncompatibleLocalStates' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FlowZ2EhasIncompatibleLocalStatesZ_iii))(u32, u32);
/* export: 'findUsedLocals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_findUsedLocalsZ_iii))(u32, u32);
/* export: 'NativeType.None' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NativeTypeZ2ENoneZ_i));
/* export: 'NativeType.Unreachable' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NativeTypeZ2EUnreachableZ_i));
/* export: 'NativeType.I32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NativeTypeZ2EI32Z_i));
/* export: 'NativeType.I64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NativeTypeZ2EI64Z_i));
/* export: 'NativeType.F32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NativeTypeZ2EF32Z_i));
/* export: 'NativeType.F64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NativeTypeZ2EF64Z_i));
/* export: 'NativeType.V128' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NativeTypeZ2EV128Z_i));
/* export: 'NativeType.Funcref' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NativeTypeZ2EFuncrefZ_i));
/* export: 'NativeType.Externref' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NativeTypeZ2EExternrefZ_i));
/* export: 'NativeType.Exnref' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NativeTypeZ2EExnrefZ_i));
/* export: 'NativeType.Anyref' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NativeTypeZ2EAnyrefZ_i));
/* export: 'NativeType.Auto' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NativeTypeZ2EAutoZ_i));
/* export: 'FeatureFlags.MVP' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureFlagsZ2EMVPZ_i));
/* export: 'FeatureFlags.Atomics' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureFlagsZ2EAtomicsZ_i));
/* export: 'FeatureFlags.MutableGloabls' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureFlagsZ2EMutableGloablsZ_i));
/* export: 'FeatureFlags.NontrappingFPToInt' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureFlagsZ2ENontrappingFPToIntZ_i));
/* export: 'FeatureFlags.SIMD128' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureFlagsZ2ESIMD128Z_i));
/* export: 'FeatureFlags.BulkMemory' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureFlagsZ2EBulkMemoryZ_i));
/* export: 'FeatureFlags.SignExt' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureFlagsZ2ESignExtZ_i));
/* export: 'FeatureFlags.ExceptionHandling' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureFlagsZ2EExceptionHandlingZ_i));
/* export: 'FeatureFlags.TailCall' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureFlagsZ2ETailCallZ_i));
/* export: 'FeatureFlags.ReferenceTypes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureFlagsZ2EReferenceTypesZ_i));
/* export: 'FeatureFlags.MultiValue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureFlagsZ2EMultiValueZ_i));
/* export: 'FeatureFlags.GC' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureFlagsZ2EGCZ_i));
/* export: 'FeatureFlags.Memory64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureFlagsZ2EMemory64Z_i));
/* export: 'FeatureFlags.All' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FeatureFlagsZ2EAllZ_i));
/* export: 'ExpressionId.Invalid' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EInvalidZ_i));
/* export: 'ExpressionId.Block' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EBlockZ_i));
/* export: 'ExpressionId.If' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EIfZ_i));
/* export: 'ExpressionId.Loop' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2ELoopZ_i));
/* export: 'ExpressionId.Break' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EBreakZ_i));
/* export: 'ExpressionId.Switch' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2ESwitchZ_i));
/* export: 'ExpressionId.Call' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2ECallZ_i));
/* export: 'ExpressionId.CallIndirect' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2ECallIndirectZ_i));
/* export: 'ExpressionId.LocalGet' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2ELocalGetZ_i));
/* export: 'ExpressionId.LocalSet' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2ELocalSetZ_i));
/* export: 'ExpressionId.GlobalGet' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EGlobalGetZ_i));
/* export: 'ExpressionId.GlobalSet' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EGlobalSetZ_i));
/* export: 'ExpressionId.Load' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2ELoadZ_i));
/* export: 'ExpressionId.Store' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EStoreZ_i));
/* export: 'ExpressionId.Const' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EConstZ_i));
/* export: 'ExpressionId.Unary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EUnaryZ_i));
/* export: 'ExpressionId.Binary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EBinaryZ_i));
/* export: 'ExpressionId.Select' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2ESelectZ_i));
/* export: 'ExpressionId.Drop' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EDropZ_i));
/* export: 'ExpressionId.Return' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EReturnZ_i));
/* export: 'ExpressionId.MemorySize' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EMemorySizeZ_i));
/* export: 'ExpressionId.MemoryGrow' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EMemoryGrowZ_i));
/* export: 'ExpressionId.Nop' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2ENopZ_i));
/* export: 'ExpressionId.Unreachable' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EUnreachableZ_i));
/* export: 'ExpressionId.AtomicRMW' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EAtomicRMWZ_i));
/* export: 'ExpressionId.AtomicCmpxchg' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EAtomicCmpxchgZ_i));
/* export: 'ExpressionId.AtomicWait' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EAtomicWaitZ_i));
/* export: 'ExpressionId.AtomicNotify' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EAtomicNotifyZ_i));
/* export: 'ExpressionId.AtomicFence' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EAtomicFenceZ_i));
/* export: 'ExpressionId.SIMDExtract' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2ESIMDExtractZ_i));
/* export: 'ExpressionId.SIMDReplace' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2ESIMDReplaceZ_i));
/* export: 'ExpressionId.SIMDShuffle' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2ESIMDShuffleZ_i));
/* export: 'ExpressionId.SIMDTernary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2ESIMDTernaryZ_i));
/* export: 'ExpressionId.SIMDShift' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2ESIMDShiftZ_i));
/* export: 'ExpressionId.SIMDLoad' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2ESIMDLoadZ_i));
/* export: 'ExpressionId.MemoryInit' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EMemoryInitZ_i));
/* export: 'ExpressionId.DataDrop' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EDataDropZ_i));
/* export: 'ExpressionId.MemoryCopy' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EMemoryCopyZ_i));
/* export: 'ExpressionId.MemoryFill' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EMemoryFillZ_i));
/* export: 'ExpressionId.Pop' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EPopZ_i));
/* export: 'ExpressionId.RefNull' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2ERefNullZ_i));
/* export: 'ExpressionId.RefIsNull' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2ERefIsNullZ_i));
/* export: 'ExpressionId.RefFunc' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2ERefFuncZ_i));
/* export: 'ExpressionId.RefEq' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2ERefEqZ_i));
/* export: 'ExpressionId.Try' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2ETryZ_i));
/* export: 'ExpressionId.Throw' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EThrowZ_i));
/* export: 'ExpressionId.Rethrow' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2ERethrowZ_i));
/* export: 'ExpressionId.BrOnExn' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2EBrOnExnZ_i));
/* export: 'ExpressionId.TupleMake' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2ETupleMakeZ_i));
/* export: 'ExpressionId.TupleExtract' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionIdZ2ETupleExtractZ_i));
/* export: 'UnaryOp.ClzI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EClzI32Z_i));
/* export: 'UnaryOp.ClzI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EClzI64Z_i));
/* export: 'UnaryOp.CtzI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ECtzI32Z_i));
/* export: 'UnaryOp.CtzI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ECtzI64Z_i));
/* export: 'UnaryOp.PopcntI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EPopcntI32Z_i));
/* export: 'UnaryOp.PopcntI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EPopcntI64Z_i));
/* export: 'UnaryOp.NegF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ENegF32Z_i));
/* export: 'UnaryOp.NegF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ENegF64Z_i));
/* export: 'UnaryOp.AbsF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EAbsF32Z_i));
/* export: 'UnaryOp.AbsF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EAbsF64Z_i));
/* export: 'UnaryOp.CeilF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ECeilF32Z_i));
/* export: 'UnaryOp.CeilF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ECeilF64Z_i));
/* export: 'UnaryOp.FloorF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EFloorF32Z_i));
/* export: 'UnaryOp.FloorF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EFloorF64Z_i));
/* export: 'UnaryOp.TruncF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncF32Z_i));
/* export: 'UnaryOp.TruncF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncF64Z_i));
/* export: 'UnaryOp.NearestF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ENearestF32Z_i));
/* export: 'UnaryOp.NearestF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ENearestF64Z_i));
/* export: 'UnaryOp.SqrtF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ESqrtF32Z_i));
/* export: 'UnaryOp.SqrtF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ESqrtF64Z_i));
/* export: 'UnaryOp.EqzI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EEqzI32Z_i));
/* export: 'UnaryOp.EqzI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EEqzI64Z_i));
/* export: 'UnaryOp.ExtendI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EExtendI32Z_i));
/* export: 'UnaryOp.ExtendU32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EExtendU32Z_i));
/* export: 'UnaryOp.WrapI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EWrapI64Z_i));
/* export: 'UnaryOp.TruncF32ToI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncF32ToI32Z_i));
/* export: 'UnaryOp.TruncF32ToI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncF32ToI64Z_i));
/* export: 'UnaryOp.TruncF32ToU32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncF32ToU32Z_i));
/* export: 'UnaryOp.TruncF32ToU64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncF32ToU64Z_i));
/* export: 'UnaryOp.TruncF64ToI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncF64ToI32Z_i));
/* export: 'UnaryOp.TruncF64ToI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncF64ToI64Z_i));
/* export: 'UnaryOp.TruncF64ToU32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncF64ToU32Z_i));
/* export: 'UnaryOp.TruncF64ToU64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncF64ToU64Z_i));
/* export: 'UnaryOp.ReinterpretF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EReinterpretF32Z_i));
/* export: 'UnaryOp.ReinterpretF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EReinterpretF64Z_i));
/* export: 'UnaryOp.ConvertI32ToF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EConvertI32ToF32Z_i));
/* export: 'UnaryOp.ConvertI32ToF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EConvertI32ToF64Z_i));
/* export: 'UnaryOp.ConvertU32ToF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EConvertU32ToF32Z_i));
/* export: 'UnaryOp.ConvertU32ToF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EConvertU32ToF64Z_i));
/* export: 'UnaryOp.ConvertI64ToF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EConvertI64ToF32Z_i));
/* export: 'UnaryOp.ConvertI64ToF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EConvertI64ToF64Z_i));
/* export: 'UnaryOp.ConvertU64ToF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EConvertU64ToF32Z_i));
/* export: 'UnaryOp.ConvertU64ToF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EConvertU64ToF64Z_i));
/* export: 'UnaryOp.PromoteF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EPromoteF32Z_i));
/* export: 'UnaryOp.DemoteF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EDemoteF64Z_i));
/* export: 'UnaryOp.ReinterpretI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EReinterpretI32Z_i));
/* export: 'UnaryOp.ReinterpretI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EReinterpretI64Z_i));
/* export: 'UnaryOp.ExtendI8ToI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EExtendI8ToI32Z_i));
/* export: 'UnaryOp.ExtendI16ToI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EExtendI16ToI32Z_i));
/* export: 'UnaryOp.ExtendI8ToI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EExtendI8ToI64Z_i));
/* export: 'UnaryOp.ExtendI16ToI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EExtendI16ToI64Z_i));
/* export: 'UnaryOp.ExtendI32ToI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EExtendI32ToI64Z_i));
/* export: 'UnaryOp.TruncF32ToI32Sat' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncF32ToI32SatZ_i));
/* export: 'UnaryOp.TruncF32ToU32Sat' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncF32ToU32SatZ_i));
/* export: 'UnaryOp.TruncF64ToI32Sat' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncF64ToI32SatZ_i));
/* export: 'UnaryOp.TruncF64ToU32Sat' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncF64ToU32SatZ_i));
/* export: 'UnaryOp.TruncF32ToI64Sat' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncF32ToI64SatZ_i));
/* export: 'UnaryOp.TruncF32ToU64Sat' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncF32ToU64SatZ_i));
/* export: 'UnaryOp.TruncF64ToI64Sat' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncF64ToI64SatZ_i));
/* export: 'UnaryOp.TruncF64ToU64Sat' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncF64ToU64SatZ_i));
/* export: 'UnaryOp.SplatI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ESplatI8x16Z_i));
/* export: 'UnaryOp.SplatI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ESplatI16x8Z_i));
/* export: 'UnaryOp.SplatI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ESplatI32x4Z_i));
/* export: 'UnaryOp.SplatI64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ESplatI64x2Z_i));
/* export: 'UnaryOp.SplatF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ESplatF32x4Z_i));
/* export: 'UnaryOp.SplatF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ESplatF64x2Z_i));
/* export: 'UnaryOp.NotV128' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ENotV128Z_i));
/* export: 'UnaryOp.AbsI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EAbsI8x16Z_i));
/* export: 'UnaryOp.NegI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ENegI8x16Z_i));
/* export: 'UnaryOp.AnyTrueI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EAnyTrueI8x16Z_i));
/* export: 'UnaryOp.AllTrueI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EAllTrueI8x16Z_i));
/* export: 'UnaryOp.BitmaskI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EBitmaskI8x16Z_i));
/* export: 'UnaryOp.AbsI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EAbsI16x8Z_i));
/* export: 'UnaryOp.NegI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ENegI16x8Z_i));
/* export: 'UnaryOp.AnyTrueI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EAnyTrueI16x8Z_i));
/* export: 'UnaryOp.AllTrueI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EAllTrueI16x8Z_i));
/* export: 'UnaryOp.BitmaskI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EBitmaskI16x8Z_i));
/* export: 'UnaryOp.AbsI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EAbsI32x4Z_i));
/* export: 'UnaryOp.NegI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ENegI32x4Z_i));
/* export: 'UnaryOp.AnyTrueI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EAnyTrueI32x4Z_i));
/* export: 'UnaryOp.AllTrueI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EAllTrueI32x4Z_i));
/* export: 'UnaryOp.BitmaskI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EBitmaskI32x4Z_i));
/* export: 'UnaryOp.NegI64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ENegI64x2Z_i));
/* export: 'UnaryOp.AnyTrueI64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EAnyTrueI64x2Z_i));
/* export: 'UnaryOp.AllTrueI64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EAllTrueI64x2Z_i));
/* export: 'UnaryOp.AbsF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EAbsF32x4Z_i));
/* export: 'UnaryOp.NegF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ENegF32x4Z_i));
/* export: 'UnaryOp.SqrtF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ESqrtF32x4Z_i));
/* export: 'UnaryOp.CeilF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ECeilF32x4Z_i));
/* export: 'UnaryOp.FloorF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EFloorF32x4Z_i));
/* export: 'UnaryOp.TruncF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncF32x4Z_i));
/* export: 'UnaryOp.NearestF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ENearestF32x4Z_i));
/* export: 'UnaryOp.AbsF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EAbsF64x2Z_i));
/* export: 'UnaryOp.NegF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ENegF64x2Z_i));
/* export: 'UnaryOp.SqrtF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ESqrtF64x2Z_i));
/* export: 'UnaryOp.CeilF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ECeilF64x2Z_i));
/* export: 'UnaryOp.FloorF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EFloorF64x2Z_i));
/* export: 'UnaryOp.TruncF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncF64x2Z_i));
/* export: 'UnaryOp.NearestF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ENearestF64x2Z_i));
/* export: 'UnaryOp.TruncSatF32x4ToI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncSatF32x4ToI32x4Z_i));
/* export: 'UnaryOp.TruncSatF32x4ToU32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncSatF32x4ToU32x4Z_i));
/* export: 'UnaryOp.TruncSatF64x2ToI64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncSatF64x2ToI64x2Z_i));
/* export: 'UnaryOp.TruncSatF64x2ToU64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2ETruncSatF64x2ToU64x2Z_i));
/* export: 'UnaryOp.ConvertI32x4ToF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EConvertI32x4ToF32x4Z_i));
/* export: 'UnaryOp.ConvertU32x4ToF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EConvertU32x4ToF32x4Z_i));
/* export: 'UnaryOp.ConvertI64x2ToF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EConvertI64x2ToF64x2Z_i));
/* export: 'UnaryOp.ConvertU64x2ToF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EConvertU64x2ToF64x2Z_i));
/* export: 'UnaryOp.WidenLowI8x16ToI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EWidenLowI8x16ToI16x8Z_i));
/* export: 'UnaryOp.WidenHighI8x16ToI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EWidenHighI8x16ToI16x8Z_i));
/* export: 'UnaryOp.WidenLowU8x16ToU16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EWidenLowU8x16ToU16x8Z_i));
/* export: 'UnaryOp.WidenHighU8x16ToU16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EWidenHighU8x16ToU16x8Z_i));
/* export: 'UnaryOp.WidenLowI16x8ToI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EWidenLowI16x8ToI32x4Z_i));
/* export: 'UnaryOp.WidenHighI16x8ToI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EWidenHighI16x8ToI32x4Z_i));
/* export: 'UnaryOp.WidenLowU16x8ToU32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EWidenLowU16x8ToU32x4Z_i));
/* export: 'UnaryOp.WidenHighU16x8ToU32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnaryOpZ2EWidenHighU16x8ToU32x4Z_i));
/* export: 'BinaryOp.AddI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EAddI32Z_i));
/* export: 'BinaryOp.SubI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ESubI32Z_i));
/* export: 'BinaryOp.MulI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMulI32Z_i));
/* export: 'BinaryOp.DivI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EDivI32Z_i));
/* export: 'BinaryOp.DivU32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EDivU32Z_i));
/* export: 'BinaryOp.RemI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ERemI32Z_i));
/* export: 'BinaryOp.RemU32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ERemU32Z_i));
/* export: 'BinaryOp.AndI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EAndI32Z_i));
/* export: 'BinaryOp.OrI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EOrI32Z_i));
/* export: 'BinaryOp.XorI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EXorI32Z_i));
/* export: 'BinaryOp.ShlI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EShlI32Z_i));
/* export: 'BinaryOp.ShrI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EShrI32Z_i));
/* export: 'BinaryOp.ShrU32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EShrU32Z_i));
/* export: 'BinaryOp.RotlI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ERotlI32Z_i));
/* export: 'BinaryOp.RotrI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ERotrI32Z_i));
/* export: 'BinaryOp.EqI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EEqI32Z_i));
/* export: 'BinaryOp.NeI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ENeI32Z_i));
/* export: 'BinaryOp.LtI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELtI32Z_i));
/* export: 'BinaryOp.LtU32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELtU32Z_i));
/* export: 'BinaryOp.LeI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELeI32Z_i));
/* export: 'BinaryOp.LeU32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELeU32Z_i));
/* export: 'BinaryOp.GtI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGtI32Z_i));
/* export: 'BinaryOp.GtU32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGtU32Z_i));
/* export: 'BinaryOp.GeI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGeI32Z_i));
/* export: 'BinaryOp.GeU32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGeU32Z_i));
/* export: 'BinaryOp.AddI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EAddI64Z_i));
/* export: 'BinaryOp.SubI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ESubI64Z_i));
/* export: 'BinaryOp.MulI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMulI64Z_i));
/* export: 'BinaryOp.DivI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EDivI64Z_i));
/* export: 'BinaryOp.DivU64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EDivU64Z_i));
/* export: 'BinaryOp.RemI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ERemI64Z_i));
/* export: 'BinaryOp.RemU64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ERemU64Z_i));
/* export: 'BinaryOp.AndI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EAndI64Z_i));
/* export: 'BinaryOp.OrI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EOrI64Z_i));
/* export: 'BinaryOp.XorI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EXorI64Z_i));
/* export: 'BinaryOp.ShlI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EShlI64Z_i));
/* export: 'BinaryOp.ShrI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EShrI64Z_i));
/* export: 'BinaryOp.ShrU64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EShrU64Z_i));
/* export: 'BinaryOp.RotlI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ERotlI64Z_i));
/* export: 'BinaryOp.RotrI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ERotrI64Z_i));
/* export: 'BinaryOp.EqI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EEqI64Z_i));
/* export: 'BinaryOp.NeI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ENeI64Z_i));
/* export: 'BinaryOp.LtI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELtI64Z_i));
/* export: 'BinaryOp.LtU64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELtU64Z_i));
/* export: 'BinaryOp.LeI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELeI64Z_i));
/* export: 'BinaryOp.LeU64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELeU64Z_i));
/* export: 'BinaryOp.GtI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGtI64Z_i));
/* export: 'BinaryOp.GtU64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGtU64Z_i));
/* export: 'BinaryOp.GeI64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGeI64Z_i));
/* export: 'BinaryOp.GeU64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGeU64Z_i));
/* export: 'BinaryOp.AddF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EAddF32Z_i));
/* export: 'BinaryOp.SubF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ESubF32Z_i));
/* export: 'BinaryOp.MulF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMulF32Z_i));
/* export: 'BinaryOp.DivF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EDivF32Z_i));
/* export: 'BinaryOp.CopysignF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ECopysignF32Z_i));
/* export: 'BinaryOp.MinF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMinF32Z_i));
/* export: 'BinaryOp.MaxF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMaxF32Z_i));
/* export: 'BinaryOp.EqF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EEqF32Z_i));
/* export: 'BinaryOp.NeF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ENeF32Z_i));
/* export: 'BinaryOp.LtF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELtF32Z_i));
/* export: 'BinaryOp.LeF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELeF32Z_i));
/* export: 'BinaryOp.GtF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGtF32Z_i));
/* export: 'BinaryOp.GeF32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGeF32Z_i));
/* export: 'BinaryOp.AddF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EAddF64Z_i));
/* export: 'BinaryOp.SubF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ESubF64Z_i));
/* export: 'BinaryOp.MulF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMulF64Z_i));
/* export: 'BinaryOp.DivF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EDivF64Z_i));
/* export: 'BinaryOp.CopysignF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ECopysignF64Z_i));
/* export: 'BinaryOp.MinF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMinF64Z_i));
/* export: 'BinaryOp.MaxF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMaxF64Z_i));
/* export: 'BinaryOp.EqF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EEqF64Z_i));
/* export: 'BinaryOp.NeF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ENeF64Z_i));
/* export: 'BinaryOp.LtF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELtF64Z_i));
/* export: 'BinaryOp.LeF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELeF64Z_i));
/* export: 'BinaryOp.GtF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGtF64Z_i));
/* export: 'BinaryOp.GeF64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGeF64Z_i));
/* export: 'BinaryOp.EqI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EEqI8x16Z_i));
/* export: 'BinaryOp.NeI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ENeI8x16Z_i));
/* export: 'BinaryOp.LtI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELtI8x16Z_i));
/* export: 'BinaryOp.LtU8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELtU8x16Z_i));
/* export: 'BinaryOp.GtI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGtI8x16Z_i));
/* export: 'BinaryOp.GtU8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGtU8x16Z_i));
/* export: 'BinaryOp.LeI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELeI8x16Z_i));
/* export: 'BinaryOp.LeU8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELeU8x16Z_i));
/* export: 'BinaryOp.GeI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGeI8x16Z_i));
/* export: 'BinaryOp.GeU8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGeU8x16Z_i));
/* export: 'BinaryOp.EqI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EEqI16x8Z_i));
/* export: 'BinaryOp.NeI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ENeI16x8Z_i));
/* export: 'BinaryOp.LtI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELtI16x8Z_i));
/* export: 'BinaryOp.LtU16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELtU16x8Z_i));
/* export: 'BinaryOp.GtI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGtI16x8Z_i));
/* export: 'BinaryOp.GtU16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGtU16x8Z_i));
/* export: 'BinaryOp.LeI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELeI16x8Z_i));
/* export: 'BinaryOp.LeU16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELeU16x8Z_i));
/* export: 'BinaryOp.GeI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGeI16x8Z_i));
/* export: 'BinaryOp.GeU16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGeU16x8Z_i));
/* export: 'BinaryOp.EqI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EEqI32x4Z_i));
/* export: 'BinaryOp.NeI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ENeI32x4Z_i));
/* export: 'BinaryOp.LtI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELtI32x4Z_i));
/* export: 'BinaryOp.LtU32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELtU32x4Z_i));
/* export: 'BinaryOp.GtI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGtI32x4Z_i));
/* export: 'BinaryOp.GtU32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGtU32x4Z_i));
/* export: 'BinaryOp.LeI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELeI32x4Z_i));
/* export: 'BinaryOp.LeU32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELeU32x4Z_i));
/* export: 'BinaryOp.GeI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGeI32x4Z_i));
/* export: 'BinaryOp.GeU32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGeU32x4Z_i));
/* export: 'BinaryOp.EqF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EEqF32x4Z_i));
/* export: 'BinaryOp.NeF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ENeF32x4Z_i));
/* export: 'BinaryOp.LtF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELtF32x4Z_i));
/* export: 'BinaryOp.GtF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGtF32x4Z_i));
/* export: 'BinaryOp.LeF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELeF32x4Z_i));
/* export: 'BinaryOp.GeF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGeF32x4Z_i));
/* export: 'BinaryOp.EqF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EEqF64x2Z_i));
/* export: 'BinaryOp.NeF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ENeF64x2Z_i));
/* export: 'BinaryOp.LtF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELtF64x2Z_i));
/* export: 'BinaryOp.GtF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGtF64x2Z_i));
/* export: 'BinaryOp.LeF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ELeF64x2Z_i));
/* export: 'BinaryOp.GeF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EGeF64x2Z_i));
/* export: 'BinaryOp.AndV128' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EAndV128Z_i));
/* export: 'BinaryOp.OrV128' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EOrV128Z_i));
/* export: 'BinaryOp.XorV128' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EXorV128Z_i));
/* export: 'BinaryOp.AndNotV128' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EAndNotV128Z_i));
/* export: 'BinaryOp.AddI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EAddI8x16Z_i));
/* export: 'BinaryOp.AddSatI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EAddSatI8x16Z_i));
/* export: 'BinaryOp.AddSatU8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EAddSatU8x16Z_i));
/* export: 'BinaryOp.SubI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ESubI8x16Z_i));
/* export: 'BinaryOp.SubSatI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ESubSatI8x16Z_i));
/* export: 'BinaryOp.SubSatU8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ESubSatU8x16Z_i));
/* export: 'BinaryOp.MulI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMulI8x16Z_i));
/* export: 'BinaryOp.MinI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMinI8x16Z_i));
/* export: 'BinaryOp.MinU8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMinU8x16Z_i));
/* export: 'BinaryOp.MaxI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMaxI8x16Z_i));
/* export: 'BinaryOp.MaxU8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMaxU8x16Z_i));
/* export: 'BinaryOp.AvgrU8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EAvgrU8x16Z_i));
/* export: 'BinaryOp.AddI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EAddI16x8Z_i));
/* export: 'BinaryOp.AddSatI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EAddSatI16x8Z_i));
/* export: 'BinaryOp.AddSatU16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EAddSatU16x8Z_i));
/* export: 'BinaryOp.SubI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ESubI16x8Z_i));
/* export: 'BinaryOp.SubSatI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ESubSatI16x8Z_i));
/* export: 'BinaryOp.SubSatU16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ESubSatU16x8Z_i));
/* export: 'BinaryOp.MulI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMulI16x8Z_i));
/* export: 'BinaryOp.MinI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMinI16x8Z_i));
/* export: 'BinaryOp.MinU16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMinU16x8Z_i));
/* export: 'BinaryOp.MaxI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMaxI16x8Z_i));
/* export: 'BinaryOp.MaxU16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMaxU16x8Z_i));
/* export: 'BinaryOp.AvgrU16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EAvgrU16x8Z_i));
/* export: 'BinaryOp.AddI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EAddI32x4Z_i));
/* export: 'BinaryOp.SubI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ESubI32x4Z_i));
/* export: 'BinaryOp.MulI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMulI32x4Z_i));
/* export: 'BinaryOp.MinI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMinI32x4Z_i));
/* export: 'BinaryOp.MinU32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMinU32x4Z_i));
/* export: 'BinaryOp.MaxI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMaxI32x4Z_i));
/* export: 'BinaryOp.MaxU32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMaxU32x4Z_i));
/* export: 'BinaryOp.DotI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EDotI16x8Z_i));
/* export: 'BinaryOp.AddI64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EAddI64x2Z_i));
/* export: 'BinaryOp.SubI64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ESubI64x2Z_i));
/* export: 'BinaryOp.AddF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EAddF32x4Z_i));
/* export: 'BinaryOp.SubF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ESubF32x4Z_i));
/* export: 'BinaryOp.MulF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMulF32x4Z_i));
/* export: 'BinaryOp.DivF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EDivF32x4Z_i));
/* export: 'BinaryOp.MinF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMinF32x4Z_i));
/* export: 'BinaryOp.MaxF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMaxF32x4Z_i));
/* export: 'BinaryOp.PminF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EPminF32x4Z_i));
/* export: 'BinaryOp.PmaxF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EPmaxF32x4Z_i));
/* export: 'BinaryOp.AddF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EAddF64x2Z_i));
/* export: 'BinaryOp.SubF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ESubF64x2Z_i));
/* export: 'BinaryOp.MulF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMulF64x2Z_i));
/* export: 'BinaryOp.DivF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EDivF64x2Z_i));
/* export: 'BinaryOp.MinF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMinF64x2Z_i));
/* export: 'BinaryOp.MaxF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EMaxF64x2Z_i));
/* export: 'BinaryOp.PminF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EPminF64x2Z_i));
/* export: 'BinaryOp.PmaxF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2EPmaxF64x2Z_i));
/* export: 'BinaryOp.NarrowI16x8ToI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ENarrowI16x8ToI8x16Z_i));
/* export: 'BinaryOp.NarrowU16x8ToU8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ENarrowU16x8ToU8x16Z_i));
/* export: 'BinaryOp.NarrowI32x4ToI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ENarrowI32x4ToI16x8Z_i));
/* export: 'BinaryOp.NarrowU32x4ToU16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ENarrowU32x4ToU16x8Z_i));
/* export: 'BinaryOp.SwizzleV8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryOpZ2ESwizzleV8x16Z_i));
/* export: 'AtomicRMWOp.Add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_AtomicRMWOpZ2EAddZ_i));
/* export: 'AtomicRMWOp.Sub' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_AtomicRMWOpZ2ESubZ_i));
/* export: 'AtomicRMWOp.And' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_AtomicRMWOpZ2EAndZ_i));
/* export: 'AtomicRMWOp.Or' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_AtomicRMWOpZ2EOrZ_i));
/* export: 'AtomicRMWOp.Xor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_AtomicRMWOpZ2EXorZ_i));
/* export: 'AtomicRMWOp.Xchg' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_AtomicRMWOpZ2EXchgZ_i));
/* export: 'SIMDExtractOp.ExtractLaneI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDExtractOpZ2EExtractLaneI8x16Z_i));
/* export: 'SIMDExtractOp.ExtractLaneU8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDExtractOpZ2EExtractLaneU8x16Z_i));
/* export: 'SIMDExtractOp.ExtractLaneI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDExtractOpZ2EExtractLaneI16x8Z_i));
/* export: 'SIMDExtractOp.ExtractLaneU16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDExtractOpZ2EExtractLaneU16x8Z_i));
/* export: 'SIMDExtractOp.ExtractLaneI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDExtractOpZ2EExtractLaneI32x4Z_i));
/* export: 'SIMDExtractOp.ExtractLaneI64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDExtractOpZ2EExtractLaneI64x2Z_i));
/* export: 'SIMDExtractOp.ExtractLaneF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDExtractOpZ2EExtractLaneF32x4Z_i));
/* export: 'SIMDExtractOp.ExtractLaneF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDExtractOpZ2EExtractLaneF64x2Z_i));
/* export: 'SIMDReplaceOp.ReplaceLaneI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDReplaceOpZ2EReplaceLaneI8x16Z_i));
/* export: 'SIMDReplaceOp.ReplaceLaneI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDReplaceOpZ2EReplaceLaneI16x8Z_i));
/* export: 'SIMDReplaceOp.ReplaceLaneI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDReplaceOpZ2EReplaceLaneI32x4Z_i));
/* export: 'SIMDReplaceOp.ReplaceLaneI64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDReplaceOpZ2EReplaceLaneI64x2Z_i));
/* export: 'SIMDReplaceOp.ReplaceLaneF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDReplaceOpZ2EReplaceLaneF32x4Z_i));
/* export: 'SIMDReplaceOp.ReplaceLaneF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDReplaceOpZ2EReplaceLaneF64x2Z_i));
/* export: 'SIMDShiftOp.ShlI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDShiftOpZ2EShlI8x16Z_i));
/* export: 'SIMDShiftOp.ShrI8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDShiftOpZ2EShrI8x16Z_i));
/* export: 'SIMDShiftOp.ShrU8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDShiftOpZ2EShrU8x16Z_i));
/* export: 'SIMDShiftOp.ShlI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDShiftOpZ2EShlI16x8Z_i));
/* export: 'SIMDShiftOp.ShrI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDShiftOpZ2EShrI16x8Z_i));
/* export: 'SIMDShiftOp.ShrU16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDShiftOpZ2EShrU16x8Z_i));
/* export: 'SIMDShiftOp.ShlI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDShiftOpZ2EShlI32x4Z_i));
/* export: 'SIMDShiftOp.ShrI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDShiftOpZ2EShrI32x4Z_i));
/* export: 'SIMDShiftOp.ShrU32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDShiftOpZ2EShrU32x4Z_i));
/* export: 'SIMDShiftOp.ShlI64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDShiftOpZ2EShlI64x2Z_i));
/* export: 'SIMDShiftOp.ShrI64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDShiftOpZ2EShrI64x2Z_i));
/* export: 'SIMDShiftOp.ShrU64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDShiftOpZ2EShrU64x2Z_i));
/* export: 'SIMDTernaryOp.Bitselect' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDTernaryOpZ2EBitselectZ_i));
/* export: 'SIMDTernaryOp.QFMAF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDTernaryOpZ2EQFMAF32x4Z_i));
/* export: 'SIMDTernaryOp.QFMSF32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDTernaryOpZ2EQFMSF32x4Z_i));
/* export: 'SIMDTernaryOp.QFMAF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDTernaryOpZ2EQFMAF64x2Z_i));
/* export: 'SIMDTernaryOp.QFMSF64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDTernaryOpZ2EQFMSF64x2Z_i));
/* export: 'SIMDLoadOp.LoadSplatV8x16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDLoadOpZ2ELoadSplatV8x16Z_i));
/* export: 'SIMDLoadOp.LoadSplatV16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDLoadOpZ2ELoadSplatV16x8Z_i));
/* export: 'SIMDLoadOp.LoadSplatV32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDLoadOpZ2ELoadSplatV32x4Z_i));
/* export: 'SIMDLoadOp.LoadSplatV64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDLoadOpZ2ELoadSplatV64x2Z_i));
/* export: 'SIMDLoadOp.LoadI8ToI16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDLoadOpZ2ELoadI8ToI16x8Z_i));
/* export: 'SIMDLoadOp.LoadU8ToU16x8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDLoadOpZ2ELoadU8ToU16x8Z_i));
/* export: 'SIMDLoadOp.LoadI16ToI32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDLoadOpZ2ELoadI16ToI32x4Z_i));
/* export: 'SIMDLoadOp.LoadU16ToU32x4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDLoadOpZ2ELoadU16ToU32x4Z_i));
/* export: 'SIMDLoadOp.LoadI32ToI64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDLoadOpZ2ELoadI32ToI64x2Z_i));
/* export: 'SIMDLoadOp.LoadU32ToU64x2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SIMDLoadOpZ2ELoadU32ToU64x2Z_i));
/* export: 'ExpressionRunnerFlags.Default' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionRunnerFlagsZ2EDefaultZ_i));
/* export: 'ExpressionRunnerFlags.PreserveSideeffects' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionRunnerFlagsZ2EPreserveSideeffectsZ_i));
/* export: 'ExpressionRunnerFlags.TraverseCalls' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ExpressionRunnerFlagsZ2ETraverseCallsZ_i));
/* export: 'MemorySegment' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_MemorySegmentZ_i));
/* export: 'MemorySegment#get:buffer' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_MemorySegmentZ23getZ3AbufferZ_ii))(u32);
/* export: 'MemorySegment#set:buffer' */
extern void (*WASM_RT_ADD_PREFIX(Z_MemorySegmentZ23setZ3AbufferZ_vii))(u32, u32);
/* export: 'MemorySegment#get:offset' */
extern u64 (*WASM_RT_ADD_PREFIX(Z_MemorySegmentZ23getZ3AoffsetZ_ji))(u32);
/* export: 'MemorySegment#set:offset' */
extern void (*WASM_RT_ADD_PREFIX(Z_MemorySegmentZ23setZ3AoffsetZ_vij))(u32, u64);
/* export: 'MemorySegment#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_MemorySegmentZ23constructorZ_iiij))(u32, u32, u64);
/* export: 'Module' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ_i));
/* export: 'Module#get:ref' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23getZ3ArefZ_ii))(u32);
/* export: 'Module#set:ref' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23setZ3ArefZ_vii))(u32, u32);
/* export: 'Module#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23constructorZ_iii))(u32, u32);
/* export: 'Module#i32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23i32Z_iii))(u32, u32);
/* export: 'Module#i64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23i64Z_iiii))(u32, u32, u32);
/* export: 'Module#f32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23f32Z_iif))(u32, f32);
/* export: 'Module#f64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23f64Z_iid))(u32, f64);
/* export: 'Module#v128' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23v128Z_iii))(u32, u32);
/* export: 'Module#ref_null' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23ref_nullZ_iii))(u32, u32);
/* export: 'Module#unary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23unaryZ_iiii))(u32, u32, u32);
/* export: 'Module#binary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23binaryZ_iiiii))(u32, u32, u32, u32);
/* export: 'Module#memory_size' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23memory_sizeZ_ii))(u32);
/* export: 'Module#memory_grow' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23memory_growZ_iii))(u32, u32);
/* export: 'Module#local_get' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23local_getZ_iiii))(u32, u32, u32);
/* export: 'Module#local_tee' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23local_teeZ_iiiii))(u32, u32, u32, u32);
/* export: 'Module#global_get' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23global_getZ_iiii))(u32, u32, u32);
/* export: 'Module#load' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23loadZ_iiiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Module#store' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23storeZ_iiiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Module#atomic_load' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23atomic_loadZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Module#atomic_store' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23atomic_storeZ_iiiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Module#atomic_rmw' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23atomic_rmwZ_iiiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Module#atomic_cmpxchg' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23atomic_cmpxchgZ_iiiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Module#atomic_wait' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23atomic_waitZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Module#atomic_notify' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23atomic_notifyZ_iiii))(u32, u32, u32);
/* export: 'Module#atomic_fence' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23atomic_fenceZ_ii))(u32);
/* export: 'Module#local_set' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23local_setZ_iiii))(u32, u32, u32);
/* export: 'Module#global_set' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23global_setZ_iiii))(u32, u32, u32);
/* export: 'Module#block' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23blockZ_iiiii))(u32, u32, u32, u32);
/* export: 'Module#flatten' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23flattenZ_iiii))(u32, u32, u32);
/* export: 'Module#br' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23brZ_iiiii))(u32, u32, u32, u32);
/* export: 'Module#drop' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23dropZ_iii))(u32, u32);
/* export: 'Module#maybeDropCondition' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23maybeDropConditionZ_iiii))(u32, u32, u32);
/* export: 'Module#loop' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23loopZ_iiii))(u32, u32, u32);
/* export: 'Module#if' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23ifZ_iiiii))(u32, u32, u32, u32);
/* export: 'Module#nop' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23nopZ_ii))(u32);
/* export: 'Module#return' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23returnZ_iii))(u32, u32);
/* export: 'Module#select' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23selectZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Module#switch' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23switchZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Module#call' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23callZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Module#return_call' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23return_callZ_iiiii))(u32, u32, u32, u32);
/* export: 'Module#call_indirect' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23call_indirectZ_iiiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Module#return_call_indirect' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23return_call_indirectZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Module#unreachable' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23unreachableZ_ii))(u32);
/* export: 'Module#memory_copy' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23memory_copyZ_iiiii))(u32, u32, u32, u32);
/* export: 'Module#memory_fill' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23memory_fillZ_iiiii))(u32, u32, u32, u32);
/* export: 'Module#try' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23tryZ_iiii))(u32, u32, u32);
/* export: 'Module#throw' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23throwZ_iiii))(u32, u32, u32);
/* export: 'Module#rethrow' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23rethrowZ_iii))(u32, u32);
/* export: 'Module#br_on_exn' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23br_on_exnZ_iiiii))(u32, u32, u32, u32);
/* export: 'Module#pop' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23popZ_iii))(u32, u32);
/* export: 'Module#tuple_make' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23tuple_makeZ_iii))(u32, u32);
/* export: 'Module#tuple_extract' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23tuple_extractZ_iiii))(u32, u32, u32);
/* export: 'Module#simd_extract' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23simd_extractZ_iiiii))(u32, u32, u32, u32);
/* export: 'Module#simd_replace' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23simd_replaceZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Module#simd_shuffle' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23simd_shuffleZ_iiiii))(u32, u32, u32, u32);
/* export: 'Module#simd_ternary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23simd_ternaryZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Module#simd_shift' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23simd_shiftZ_iiiii))(u32, u32, u32, u32);
/* export: 'Module#simd_load' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23simd_loadZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Module#ref_is_null' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23ref_is_nullZ_iii))(u32, u32);
/* export: 'Module#ref_func' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23ref_funcZ_iii))(u32, u32);
/* export: 'Module#addGlobal' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23addGlobalZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Module#getGlobal' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23getGlobalZ_iii))(u32, u32);
/* export: 'Module#removeGlobal' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23removeGlobalZ_vii))(u32, u32);
/* export: 'Module#addEvent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23addEventZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Module#getEvent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23getEventZ_iii))(u32, u32);
/* export: 'Module#removeEvent' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23removeEventZ_vii))(u32, u32);
/* export: 'Module#addFunction' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23addFunctionZ_iiiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Module#getFunction' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23getFunctionZ_iii))(u32, u32);
/* export: 'Module#removeFunction' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23removeFunctionZ_vii))(u32, u32);
/* export: 'Module#addTemporaryFunction' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23addTemporaryFunctionZ_iiiii))(u32, u32, u32, u32);
/* export: 'Module#removeTemporaryFunction' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23removeTemporaryFunctionZ_vi))(u32);
/* export: 'Module#setStart' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23setStartZ_vii))(u32, u32);
/* export: 'Module#addFunctionExport' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23addFunctionExportZ_iiii))(u32, u32, u32);
/* export: 'Module#addTableExport' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23addTableExportZ_iiii))(u32, u32, u32);
/* export: 'Module#addMemoryExport' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23addMemoryExportZ_iiii))(u32, u32, u32);
/* export: 'Module#addGlobalExport' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23addGlobalExportZ_iiii))(u32, u32, u32);
/* export: 'Module#addEventExport' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23addEventExportZ_iiii))(u32, u32, u32);
/* export: 'Module#removeExport' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23removeExportZ_vii))(u32, u32);
/* export: 'Module#addFunctionImport' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23addFunctionImportZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Module#addTableImport' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23addTableImportZ_viiii))(u32, u32, u32, u32);
/* export: 'Module#addMemoryImport' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23addMemoryImportZ_viiiii))(u32, u32, u32, u32, u32);
/* export: 'Module#addGlobalImport' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23addGlobalImportZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Module#addEventImport' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23addEventImportZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Module#setMemory' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23setMemoryZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Module#setFunctionTable' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23setFunctionTableZ_viiiii))(u32, u32, u32, u32, u32);
/* export: 'Module#addCustomSection' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23addCustomSectionZ_viii))(u32, u32, u32);
/* export: 'Module#getOptimizeLevel' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23getOptimizeLevelZ_ii))(u32);
/* export: 'Module#setOptimizeLevel' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23setOptimizeLevelZ_vii))(u32, u32);
/* export: 'Module#getShrinkLevel' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23getShrinkLevelZ_ii))(u32);
/* export: 'Module#setShrinkLevel' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23setShrinkLevelZ_vii))(u32, u32);
/* export: 'Module#getDebugInfo' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23getDebugInfoZ_ii))(u32);
/* export: 'Module#setDebugInfo' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23setDebugInfoZ_vii))(u32, u32);
/* export: 'Module#getLowMemoryUnused' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23getLowMemoryUnusedZ_ii))(u32);
/* export: 'Module#setLowMemoryUnused' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23setLowMemoryUnusedZ_vii))(u32, u32);
/* export: 'Module#getFastMath' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23getFastMathZ_ii))(u32);
/* export: 'Module#setFastMath' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23setFastMathZ_vii))(u32, u32);
/* export: 'Module#getPassArgument' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23getPassArgumentZ_iii))(u32, u32);
/* export: 'Module#setPassArgument' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23setPassArgumentZ_viii))(u32, u32, u32);
/* export: 'Module#clearPassArguments' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23clearPassArgumentsZ_vi))(u32);
/* export: 'Module#getAlwaysInlineMaxSize' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23getAlwaysInlineMaxSizeZ_ii))(u32);
/* export: 'Module#setAlwaysInlineMaxSize' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23setAlwaysInlineMaxSizeZ_vii))(u32, u32);
/* export: 'Module#getFlexibleInlineMaxSize' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23getFlexibleInlineMaxSizeZ_ii))(u32);
/* export: 'Module#setFlexibleInlineMaxSize' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23setFlexibleInlineMaxSizeZ_vii))(u32, u32);
/* export: 'Module#getOneCallerInlineMaxSize' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23getOneCallerInlineMaxSizeZ_ii))(u32);
/* export: 'Module#setOneCallerInlineMaxSize' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23setOneCallerInlineMaxSizeZ_vii))(u32, u32);
/* export: 'Module#getAllowInliningFunctionsWithLoops' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23getAllowInliningFunctionsWithLoopsZ_ii))(u32);
/* export: 'Module#setAllowInliningFunctionsWithLoops' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23setAllowInliningFunctionsWithLoopsZ_vii))(u32, u32);
/* export: 'Module#getFeatures' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23getFeaturesZ_ii))(u32);
/* export: 'Module#setFeatures' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23setFeaturesZ_vii))(u32, u32);
/* export: 'Module#runPass' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23runPassZ_viii))(u32, u32, u32);
/* export: 'Module#runPasses' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23runPassesZ_viii))(u32, u32, u32);
/* export: 'Module#optimize' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23optimizeZ_viiii))(u32, u32, u32, u32);
/* export: 'Module#validate' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23validateZ_ii))(u32);
/* export: 'Module#interpret' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23interpretZ_vi))(u32);
/* export: 'Module#toBinary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23toBinaryZ_iii))(u32, u32);
/* export: 'Module#toText' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23toTextZ_iii))(u32, u32);
/* export: 'Module#toAsmjs' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23toAsmjsZ_ii))(u32);
/* export: 'Module#dispose' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23disposeZ_vi))(u32);
/* export: 'Module#createRelooper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23createRelooperZ_ii))(u32);
/* export: 'Module#cloneExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23cloneExpressionZ_iiiii))(u32, u32, u32, u32);
/* export: 'Module#copyExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23copyExpressionZ_iii))(u32, u32);
/* export: 'Module#runExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23runExpressionZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Module#addDebugInfoFile' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23addDebugInfoFileZ_iii))(u32, u32);
/* export: 'Module#getDebugInfoFile' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ23getDebugInfoFileZ_iii))(u32, u32);
/* export: 'Module#setDebugLocation' */
extern void (*WASM_RT_ADD_PREFIX(Z_ModuleZ23setDebugLocationZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Module.create' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ2EcreateZ_iv))(void);
/* export: 'Module.createFrom' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ2EcreateFromZ_ii))(u32);
/* export: 'Module.UNLIMITED_MEMORY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ2EUNLIMITED_MEMORYZ_i));
/* export: 'Module.UNLIMITED_TABLE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ModuleZ2EUNLIMITED_TABLEZ_i));
/* export: 'createType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_createTypeZ_ii))(u32);
/* export: 'expandType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_expandTypeZ_ii))(u32);
/* export: 'getExpressionId' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getExpressionIdZ_ii))(u32);
/* export: 'getExpressionType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getExpressionTypeZ_ii))(u32);
/* export: 'getConstValueI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getConstValueI32Z_ii))(u32);
/* export: 'getConstValueI64Low' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getConstValueI64LowZ_ii))(u32);
/* export: 'getConstValueI64High' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getConstValueI64HighZ_ii))(u32);
/* export: 'getConstValueF32' */
extern f32 (*WASM_RT_ADD_PREFIX(Z_getConstValueF32Z_fi))(u32);
/* export: 'getConstValueF64' */
extern f64 (*WASM_RT_ADD_PREFIX(Z_getConstValueF64Z_di))(u32);
/* export: 'getLocalGetIndex' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getLocalGetIndexZ_ii))(u32);
/* export: 'getLocalSetIndex' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getLocalSetIndexZ_ii))(u32);
/* export: 'getLocalSetValue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getLocalSetValueZ_ii))(u32);
/* export: 'isLocalTee' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_isLocalTeeZ_ii))(u32);
/* export: 'getGlobalGetName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getGlobalGetNameZ_ii))(u32);
/* export: 'getBinaryOp' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getBinaryOpZ_ii))(u32);
/* export: 'getBinaryLeft' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getBinaryLeftZ_ii))(u32);
/* export: 'getBinaryRight' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getBinaryRightZ_ii))(u32);
/* export: 'getUnaryOp' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getUnaryOpZ_ii))(u32);
/* export: 'getUnaryValue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getUnaryValueZ_ii))(u32);
/* export: 'getLoadBytes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getLoadBytesZ_ii))(u32);
/* export: 'getLoadOffset' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getLoadOffsetZ_ii))(u32);
/* export: 'getLoadPtr' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getLoadPtrZ_ii))(u32);
/* export: 'isLoadSigned' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_isLoadSignedZ_ii))(u32);
/* export: 'getStoreBytes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getStoreBytesZ_ii))(u32);
/* export: 'getStoreOffset' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getStoreOffsetZ_ii))(u32);
/* export: 'getStorePtr' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getStorePtrZ_ii))(u32);
/* export: 'getStoreValue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getStoreValueZ_ii))(u32);
/* export: 'getBlockName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getBlockNameZ_ii))(u32);
/* export: 'getBlockChildCount' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getBlockChildCountZ_ii))(u32);
/* export: 'getBlockChildAt' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getBlockChildAtZ_iii))(u32, u32);
/* export: 'getIfCondition' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getIfConditionZ_ii))(u32);
/* export: 'getIfTrue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getIfTrueZ_ii))(u32);
/* export: 'getIfFalse' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getIfFalseZ_ii))(u32);
/* export: 'getLoopName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getLoopNameZ_ii))(u32);
/* export: 'getLoopBody' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getLoopBodyZ_ii))(u32);
/* export: 'getBreakName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getBreakNameZ_ii))(u32);
/* export: 'getBreakCondition' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getBreakConditionZ_ii))(u32);
/* export: 'getSelectThen' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getSelectThenZ_ii))(u32);
/* export: 'getSelectElse' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getSelectElseZ_ii))(u32);
/* export: 'getSelectCondition' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getSelectConditionZ_ii))(u32);
/* export: 'getDropValue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getDropValueZ_ii))(u32);
/* export: 'getReturnValue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getReturnValueZ_ii))(u32);
/* export: 'getCallTarget' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getCallTargetZ_ii))(u32);
/* export: 'getCallOperandCount' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getCallOperandCountZ_ii))(u32);
/* export: 'getCallOperandAt' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getCallOperandAtZ_iii))(u32, u32);
/* export: 'getMemoryGrowDelta' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getMemoryGrowDeltaZ_ii))(u32);
/* export: 'getFunctionBody' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getFunctionBodyZ_ii))(u32);
/* export: 'getFunctionName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getFunctionNameZ_ii))(u32);
/* export: 'getFunctionParams' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getFunctionParamsZ_ii))(u32);
/* export: 'getFunctionResults' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getFunctionResultsZ_ii))(u32);
/* export: 'getFunctionVars' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getFunctionVarsZ_ii))(u32);
/* export: 'getGlobalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getGlobalNameZ_ii))(u32);
/* export: 'getGlobalType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getGlobalTypeZ_ii))(u32);
/* export: 'isGlobalMutable' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_isGlobalMutableZ_ii))(u32);
/* export: 'getGlobalInit' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getGlobalInitZ_ii))(u32);
/* export: 'getEventName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getEventNameZ_ii))(u32);
/* export: 'getEventAttribute' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getEventAttributeZ_ii))(u32);
/* export: 'getEventParams' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getEventParamsZ_ii))(u32);
/* export: 'getEventResults' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getEventResultsZ_ii))(u32);
/* export: 'Relooper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RelooperZ_i));
/* export: 'Relooper#get:module' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RelooperZ23getZ3AmoduleZ_ii))(u32);
/* export: 'Relooper#set:module' */
extern void (*WASM_RT_ADD_PREFIX(Z_RelooperZ23setZ3AmoduleZ_vii))(u32, u32);
/* export: 'Relooper#get:ref' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RelooperZ23getZ3ArefZ_ii))(u32);
/* export: 'Relooper#set:ref' */
extern void (*WASM_RT_ADD_PREFIX(Z_RelooperZ23setZ3ArefZ_vii))(u32, u32);
/* export: 'Relooper#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RelooperZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'Relooper#addBlock' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RelooperZ23addBlockZ_iii))(u32, u32);
/* export: 'Relooper#addBranch' */
extern void (*WASM_RT_ADD_PREFIX(Z_RelooperZ23addBranchZ_viiiii))(u32, u32, u32, u32, u32);
/* export: 'Relooper#addBlockWithSwitch' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RelooperZ23addBlockWithSwitchZ_iiii))(u32, u32, u32);
/* export: 'Relooper#addBranchForSwitch' */
extern void (*WASM_RT_ADD_PREFIX(Z_RelooperZ23addBranchForSwitchZ_viiiii))(u32, u32, u32, u32, u32);
/* export: 'Relooper#renderAndDispose' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RelooperZ23renderAndDisposeZ_iiii))(u32, u32, u32);
/* export: 'Relooper.create' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RelooperZ2EcreateZ_ii))(u32);
/* export: 'SwitchBuilder' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchBuilderZ_i));
/* export: 'SwitchBuilder#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchBuilderZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'SwitchBuilder#addCase' */
extern void (*WASM_RT_ADD_PREFIX(Z_SwitchBuilderZ23addCaseZ_viii))(u32, u32, u32);
/* export: 'SwitchBuilder#addDefault' */
extern void (*WASM_RT_ADD_PREFIX(Z_SwitchBuilderZ23addDefaultZ_vii))(u32, u32);
/* export: 'SwitchBuilder#render' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SwitchBuilderZ23renderZ_iiii))(u32, u32, u32);
/* export: 'SideEffects.None' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SideEffectsZ2ENoneZ_i));
/* export: 'SideEffects.Branches' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SideEffectsZ2EBranchesZ_i));
/* export: 'SideEffects.Calls' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SideEffectsZ2ECallsZ_i));
/* export: 'SideEffects.ReadsLocal' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SideEffectsZ2EReadsLocalZ_i));
/* export: 'SideEffects.WritesLocal' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SideEffectsZ2EWritesLocalZ_i));
/* export: 'SideEffects.ReadsGlobal' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SideEffectsZ2EReadsGlobalZ_i));
/* export: 'SideEffects.WritesGlobal' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SideEffectsZ2EWritesGlobalZ_i));
/* export: 'SideEffects.ReadsMemory' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SideEffectsZ2EReadsMemoryZ_i));
/* export: 'SideEffects.WritesMemory' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SideEffectsZ2EWritesMemoryZ_i));
/* export: 'SideEffects.ImplicitTrap' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SideEffectsZ2EImplicitTrapZ_i));
/* export: 'SideEffects.IsAtomic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SideEffectsZ2EIsAtomicZ_i));
/* export: 'SideEffects.Throws' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SideEffectsZ2EThrowsZ_i));
/* export: 'SideEffects.DanglingPop' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SideEffectsZ2EDanglingPopZ_i));
/* export: 'SideEffects.Any' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SideEffectsZ2EAnyZ_i));
/* export: 'getSideEffects' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getSideEffectsZ_iii))(u32, u32);
/* export: 'hasSideEffects' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_hasSideEffectsZ_iii))(u32, u32);
/* export: 'allocPtrArray' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_allocPtrArrayZ_ii))(u32);
/* export: 'readString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_readStringZ_ii))(u32);
/* export: 'BinaryModule' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryModuleZ_i));
/* export: 'BinaryModule#get:output' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryModuleZ23getZ3AoutputZ_ii))(u32);
/* export: 'BinaryModule#set:output' */
extern void (*WASM_RT_ADD_PREFIX(Z_BinaryModuleZ23setZ3AoutputZ_vii))(u32, u32);
/* export: 'BinaryModule#get:sourceMap' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryModuleZ23getZ3AsourceMapZ_ii))(u32);
/* export: 'BinaryModule#set:sourceMap' */
extern void (*WASM_RT_ADD_PREFIX(Z_BinaryModuleZ23setZ3AsourceMapZ_vii))(u32, u32);
/* export: 'BinaryModule#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_BinaryModuleZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'needsExplicitUnreachable' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_needsExplicitUnreachableZ_ii))(u32);
/* export: 'traverse<i32>>' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_traverseZ3Ci32Z3EZ3EZ_iiii))(u32, u32, u32);
/* export: 'Parser' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ_i));
/* export: 'Parser#get:diagnostics' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23getZ3AdiagnosticsZ_ii))(u32);
/* export: 'Parser#set:diagnostics' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParserZ23setZ3AdiagnosticsZ_vii))(u32, u32);
/* export: 'Parser#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'Parser#emitDiagnostic' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParserZ23emitDiagnosticZ_viiiiiiii))(u32, u32, u32, u32, u32, u32, u32, u32);
/* export: 'Parser#pedantic' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParserZ23pedanticZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Parser#pedanticRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParserZ23pedanticRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Parser#info' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParserZ23infoZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Parser#infoRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParserZ23infoRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Parser#warning' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParserZ23warningZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Parser#warningRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParserZ23warningRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Parser#error' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParserZ23errorZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Parser#errorRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParserZ23errorRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Parser#get:backlog' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23getZ3AbacklogZ_ii))(u32);
/* export: 'Parser#set:backlog' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParserZ23setZ3AbacklogZ_vii))(u32, u32);
/* export: 'Parser#get:seenlog' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23getZ3AseenlogZ_ii))(u32);
/* export: 'Parser#set:seenlog' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParserZ23setZ3AseenlogZ_vii))(u32, u32);
/* export: 'Parser#get:donelog' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23getZ3AdonelogZ_ii))(u32);
/* export: 'Parser#set:donelog' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParserZ23setZ3AdonelogZ_vii))(u32, u32);
/* export: 'Parser#get:onComment' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23getZ3AonCommentZ_ii))(u32);
/* export: 'Parser#set:onComment' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParserZ23setZ3AonCommentZ_vii))(u32, u32);
/* export: 'Parser#get:currentSource' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23getZ3AcurrentSourceZ_ii))(u32);
/* export: 'Parser#set:currentSource' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParserZ23setZ3AcurrentSourceZ_vii))(u32, u32);
/* export: 'Parser#get:dependees' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23getZ3AdependeesZ_ii))(u32);
/* export: 'Parser#set:dependees' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParserZ23setZ3AdependeesZ_vii))(u32, u32);
/* export: 'Parser#get:sources' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23getZ3AsourcesZ_ii))(u32);
/* export: 'Parser#set:sources' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParserZ23setZ3AsourcesZ_vii))(u32, u32);
/* export: 'Parser#parseFile' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseFileZ_viiii))(u32, u32, u32, u32);
/* export: 'Parser#parseTopLevelStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseTopLevelStatementZ_iiii))(u32, u32, u32);
/* export: 'Parser#nextFile' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23nextFileZ_ii))(u32);
/* export: 'Parser#getDependee' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23getDependeeZ_iii))(u32, u32);
/* export: 'Parser#finish' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParserZ23finishZ_vi))(u32);
/* export: 'Parser#parseTypeName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseTypeNameZ_iii))(u32, u32);
/* export: 'Parser#parseType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseTypeZ_iiiii))(u32, u32, u32, u32);
/* export: 'Parser#tryParseFunctionType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23tryParseFunctionTypeZ_iii))(u32, u32);
/* export: 'Parser#parseDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseDecoratorZ_iii))(u32, u32);
/* export: 'Parser#parseVariable' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseVariableZ_iiiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Parser#parseVariableDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseVariableDeclarationZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Parser#parseEnum' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseEnumZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Parser#parseEnumValue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseEnumValueZ_iiii))(u32, u32, u32);
/* export: 'Parser#parseReturn' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseReturnZ_iii))(u32, u32);
/* export: 'Parser#parseTypeParameters' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseTypeParametersZ_iii))(u32, u32);
/* export: 'Parser#parseTypeParameter' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseTypeParameterZ_iii))(u32, u32);
/* export: 'Parser#parseParameters' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseParametersZ_iiii))(u32, u32, u32);
/* export: 'Parser#parseParameter' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseParameterZ_iiii))(u32, u32, u32);
/* export: 'Parser#parseFunction' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseFunctionZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Parser#parseFunctionExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseFunctionExpressionZ_iii))(u32, u32);
/* export: 'Parser#parseClassOrInterface' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseClassOrInterfaceZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Parser#parseClassExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseClassExpressionZ_iii))(u32, u32);
/* export: 'Parser#parseClassMember' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseClassMemberZ_iiii))(u32, u32, u32);
/* export: 'Parser#parseIndexSignature' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseIndexSignatureZ_iiiii))(u32, u32, u32, u32);
/* export: 'Parser#parseNamespace' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseNamespaceZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Parser#parseExport' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseExportZ_iiiii))(u32, u32, u32, u32);
/* export: 'Parser#parseExportMember' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseExportMemberZ_iii))(u32, u32);
/* export: 'Parser#parseExportDefaultAlias' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseExportDefaultAliasZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Parser#parseImport' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseImportZ_iii))(u32, u32);
/* export: 'Parser#parseImportDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseImportDeclarationZ_iii))(u32, u32);
/* export: 'Parser#parseExportImport' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseExportImportZ_iiii))(u32, u32, u32);
/* export: 'Parser#parseStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseStatementZ_iiii))(u32, u32, u32);
/* export: 'Parser#parseBlockStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseBlockStatementZ_iiii))(u32, u32, u32);
/* export: 'Parser#parseBreak' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseBreakZ_iii))(u32, u32);
/* export: 'Parser#parseContinue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseContinueZ_iii))(u32, u32);
/* export: 'Parser#parseDoStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseDoStatementZ_iii))(u32, u32);
/* export: 'Parser#parseExpressionStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseExpressionStatementZ_iii))(u32, u32);
/* export: 'Parser#parseForStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseForStatementZ_iii))(u32, u32);
/* export: 'Parser#parseForOfStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseForOfStatementZ_iiiii))(u32, u32, u32, u32);
/* export: 'Parser#parseIfStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseIfStatementZ_iii))(u32, u32);
/* export: 'Parser#parseSwitchStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseSwitchStatementZ_iii))(u32, u32);
/* export: 'Parser#parseSwitchCase' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseSwitchCaseZ_iii))(u32, u32);
/* export: 'Parser#parseThrowStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseThrowStatementZ_iii))(u32, u32);
/* export: 'Parser#parseTryStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseTryStatementZ_iii))(u32, u32);
/* export: 'Parser#parseTypeDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseTypeDeclarationZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Parser#parseVoidStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseVoidStatementZ_iii))(u32, u32);
/* export: 'Parser#parseWhileStatement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseWhileStatementZ_iii))(u32, u32);
/* export: 'Parser#parseExpressionStart' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseExpressionStartZ_iii))(u32, u32);
/* export: 'Parser#tryParseTypeArgumentsBeforeArguments' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23tryParseTypeArgumentsBeforeArgumentsZ_iii))(u32, u32);
/* export: 'Parser#parseArguments' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseArgumentsZ_iii))(u32, u32);
/* export: 'Parser#parseExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParserZ23parseExpressionZ_iiii))(u32, u32, u32);
/* export: 'Parser#skipStatement' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParserZ23skipStatementZ_vii))(u32, u32);
/* export: 'Parser#skipBlock' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParserZ23skipBlockZ_vii))(u32, u32);
/* export: 'Precedence.NONE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PrecedenceZ2ENONEZ_i));
/* export: 'Precedence.COMMA' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PrecedenceZ2ECOMMAZ_i));
/* export: 'Precedence.SPREAD' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PrecedenceZ2ESPREADZ_i));
/* export: 'Precedence.YIELD' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PrecedenceZ2EYIELDZ_i));
/* export: 'Precedence.ASSIGNMENT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PrecedenceZ2EASSIGNMENTZ_i));
/* export: 'Precedence.CONDITIONAL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PrecedenceZ2ECONDITIONALZ_i));
/* export: 'Precedence.LOGICAL_OR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PrecedenceZ2ELOGICAL_ORZ_i));
/* export: 'Precedence.LOGICAL_AND' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PrecedenceZ2ELOGICAL_ANDZ_i));
/* export: 'Precedence.BITWISE_OR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PrecedenceZ2EBITWISE_ORZ_i));
/* export: 'Precedence.BITWISE_XOR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PrecedenceZ2EBITWISE_XORZ_i));
/* export: 'Precedence.BITWISE_AND' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PrecedenceZ2EBITWISE_ANDZ_i));
/* export: 'Precedence.EQUALITY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PrecedenceZ2EEQUALITYZ_i));
/* export: 'Precedence.RELATIONAL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PrecedenceZ2ERELATIONALZ_i));
/* export: 'Precedence.SHIFT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PrecedenceZ2ESHIFTZ_i));
/* export: 'Precedence.ADDITIVE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PrecedenceZ2EADDITIVEZ_i));
/* export: 'Precedence.MULTIPLICATIVE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PrecedenceZ2EMULTIPLICATIVEZ_i));
/* export: 'Precedence.EXPONENTIATED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PrecedenceZ2EEXPONENTIATEDZ_i));
/* export: 'Precedence.UNARY_PREFIX' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PrecedenceZ2EUNARY_PREFIXZ_i));
/* export: 'Precedence.UNARY_POSTFIX' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PrecedenceZ2EUNARY_POSTFIXZ_i));
/* export: 'Precedence.CALL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PrecedenceZ2ECALLZ_i));
/* export: 'Precedence.MEMBERACCESS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PrecedenceZ2EMEMBERACCESSZ_i));
/* export: 'Precedence.GROUPING' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PrecedenceZ2EGROUPINGZ_i));
/* export: 'OperatorKind.INVALID' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EINVALIDZ_i));
/* export: 'OperatorKind.INDEXED_GET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EINDEXED_GETZ_i));
/* export: 'OperatorKind.INDEXED_SET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EINDEXED_SETZ_i));
/* export: 'OperatorKind.UNCHECKED_INDEXED_GET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EUNCHECKED_INDEXED_GETZ_i));
/* export: 'OperatorKind.UNCHECKED_INDEXED_SET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EUNCHECKED_INDEXED_SETZ_i));
/* export: 'OperatorKind.ADD' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EADDZ_i));
/* export: 'OperatorKind.SUB' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2ESUBZ_i));
/* export: 'OperatorKind.MUL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EMULZ_i));
/* export: 'OperatorKind.DIV' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EDIVZ_i));
/* export: 'OperatorKind.REM' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EREMZ_i));
/* export: 'OperatorKind.POW' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EPOWZ_i));
/* export: 'OperatorKind.BITWISE_AND' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EBITWISE_ANDZ_i));
/* export: 'OperatorKind.BITWISE_OR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EBITWISE_ORZ_i));
/* export: 'OperatorKind.BITWISE_XOR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EBITWISE_XORZ_i));
/* export: 'OperatorKind.BITWISE_SHL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EBITWISE_SHLZ_i));
/* export: 'OperatorKind.BITWISE_SHR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EBITWISE_SHRZ_i));
/* export: 'OperatorKind.BITWISE_SHR_U' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EBITWISE_SHR_UZ_i));
/* export: 'OperatorKind.EQ' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EEQZ_i));
/* export: 'OperatorKind.NE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2ENEZ_i));
/* export: 'OperatorKind.GT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EGTZ_i));
/* export: 'OperatorKind.GE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EGEZ_i));
/* export: 'OperatorKind.LT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2ELTZ_i));
/* export: 'OperatorKind.LE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2ELEZ_i));
/* export: 'OperatorKind.PLUS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EPLUSZ_i));
/* export: 'OperatorKind.MINUS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EMINUSZ_i));
/* export: 'OperatorKind.NOT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2ENOTZ_i));
/* export: 'OperatorKind.BITWISE_NOT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EBITWISE_NOTZ_i));
/* export: 'OperatorKind.PREFIX_INC' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EPREFIX_INCZ_i));
/* export: 'OperatorKind.PREFIX_DEC' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EPREFIX_DECZ_i));
/* export: 'OperatorKind.POSTFIX_INC' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EPOSTFIX_INCZ_i));
/* export: 'OperatorKind.POSTFIX_DEC' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EPOSTFIX_DECZ_i));
/* export: 'OperatorKind.fromDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EfromDecoratorZ_iii))(u32, u32);
/* export: 'OperatorKind.fromBinaryToken' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EfromBinaryTokenZ_ii))(u32);
/* export: 'OperatorKind.fromUnaryPrefixToken' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EfromUnaryPrefixTokenZ_ii))(u32);
/* export: 'OperatorKind.fromUnaryPostfixToken' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_OperatorKindZ2EfromUnaryPostfixTokenZ_ii))(u32);
/* export: 'Program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ_i));
/* export: 'Program#get:diagnostics' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AdiagnosticsZ_ii))(u32);
/* export: 'Program#set:diagnostics' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23setZ3AdiagnosticsZ_vii))(u32, u32);
/* export: 'Program#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'Program#emitDiagnostic' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23emitDiagnosticZ_viiiiiiii))(u32, u32, u32, u32, u32, u32, u32, u32);
/* export: 'Program#pedantic' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23pedanticZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Program#pedanticRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23pedanticRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Program#info' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23infoZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Program#infoRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23infoRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Program#warning' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23warningZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Program#warningRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23warningRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Program#error' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23errorZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Program#errorRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23errorRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Program#get:options' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AoptionsZ_ii))(u32);
/* export: 'Program#set:options' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23setZ3AoptionsZ_vii))(u32, u32);
/* export: 'Program#get:parser' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AparserZ_ii))(u32);
/* export: 'Program#set:parser' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23setZ3AparserZ_vii))(u32, u32);
/* export: 'Program#get:resolver' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AresolverZ_ii))(u32);
/* export: 'Program#set:resolver' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23setZ3AresolverZ_vii))(u32, u32);
/* export: 'Program#get:sources' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AsourcesZ_ii))(u32);
/* export: 'Program#set:sources' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23setZ3AsourcesZ_vii))(u32, u32);
/* export: 'Program#get:diagnosticsOffset' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AdiagnosticsOffsetZ_ii))(u32);
/* export: 'Program#set:diagnosticsOffset' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23setZ3AdiagnosticsOffsetZ_vii))(u32, u32);
/* export: 'Program#get:nativeSource' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AnativeSourceZ_ii))(u32);
/* export: 'Program#set:nativeSource' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23setZ3AnativeSourceZ_vii))(u32, u32);
/* export: 'Program#get:nativeFile' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AnativeFileZ_ii))(u32);
/* export: 'Program#set:nativeFile' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23setZ3AnativeFileZ_vii))(u32, u32);
/* export: 'Program#get:nextClassId' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AnextClassIdZ_ii))(u32);
/* export: 'Program#set:nextClassId' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23setZ3AnextClassIdZ_vii))(u32, u32);
/* export: 'Program#get:nextSignatureId' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AnextSignatureIdZ_ii))(u32);
/* export: 'Program#set:nextSignatureId' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23setZ3AnextSignatureIdZ_vii))(u32, u32);
/* export: 'Program#get:initialized' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AinitializedZ_ii))(u32);
/* export: 'Program#set:initialized' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23setZ3AinitializedZ_vii))(u32, u32);
/* export: 'Program#get:filesByName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AfilesByNameZ_ii))(u32);
/* export: 'Program#set:filesByName' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23setZ3AfilesByNameZ_vii))(u32, u32);
/* export: 'Program#get:elementsByName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AelementsByNameZ_ii))(u32);
/* export: 'Program#set:elementsByName' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23setZ3AelementsByNameZ_vii))(u32, u32);
/* export: 'Program#get:elementsByDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AelementsByDeclarationZ_ii))(u32);
/* export: 'Program#set:elementsByDeclaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23setZ3AelementsByDeclarationZ_vii))(u32, u32);
/* export: 'Program#get:instancesByName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AinstancesByNameZ_ii))(u32);
/* export: 'Program#set:instancesByName' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23setZ3AinstancesByNameZ_vii))(u32, u32);
/* export: 'Program#get:wrapperClasses' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AwrapperClassesZ_ii))(u32);
/* export: 'Program#set:wrapperClasses' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23setZ3AwrapperClassesZ_vii))(u32, u32);
/* export: 'Program#get:managedClasses' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AmanagedClassesZ_ii))(u32);
/* export: 'Program#set:managedClasses' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23setZ3AmanagedClassesZ_vii))(u32, u32);
/* export: 'Program#get:uniqueSignatures' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AuniqueSignaturesZ_ii))(u32);
/* export: 'Program#set:uniqueSignatures' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23setZ3AuniqueSignaturesZ_vii))(u32, u32);
/* export: 'Program#get:arrayBufferViewInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AarrayBufferViewInstanceZ_ii))(u32);
/* export: 'Program#get:arrayBufferInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AarrayBufferInstanceZ_ii))(u32);
/* export: 'Program#get:arrayPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AarrayPrototypeZ_ii))(u32);
/* export: 'Program#get:staticArrayPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AstaticArrayPrototypeZ_ii))(u32);
/* export: 'Program#get:setPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AsetPrototypeZ_ii))(u32);
/* export: 'Program#get:mapPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AmapPrototypeZ_ii))(u32);
/* export: 'Program#get:functionPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AfunctionPrototypeZ_ii))(u32);
/* export: 'Program#get:int8ArrayPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3Aint8ArrayPrototypeZ_ii))(u32);
/* export: 'Program#get:int16ArrayPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3Aint16ArrayPrototypeZ_ii))(u32);
/* export: 'Program#get:int32ArrayPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3Aint32ArrayPrototypeZ_ii))(u32);
/* export: 'Program#get:int64ArrayPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3Aint64ArrayPrototypeZ_ii))(u32);
/* export: 'Program#get:uint8ArrayPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3Auint8ArrayPrototypeZ_ii))(u32);
/* export: 'Program#get:uint8ClampedArrayPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3Auint8ClampedArrayPrototypeZ_ii))(u32);
/* export: 'Program#get:uint16ArrayPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3Auint16ArrayPrototypeZ_ii))(u32);
/* export: 'Program#get:uint32ArrayPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3Auint32ArrayPrototypeZ_ii))(u32);
/* export: 'Program#get:uint64ArrayPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3Auint64ArrayPrototypeZ_ii))(u32);
/* export: 'Program#get:float32ArrayPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3Afloat32ArrayPrototypeZ_ii))(u32);
/* export: 'Program#get:float64ArrayPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3Afloat64ArrayPrototypeZ_ii))(u32);
/* export: 'Program#get:stringInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AstringInstanceZ_ii))(u32);
/* export: 'Program#get:abortInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AabortInstanceZ_ii))(u32);
/* export: 'Program#get:allocInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AallocInstanceZ_ii))(u32);
/* export: 'Program#get:reallocInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AreallocInstanceZ_ii))(u32);
/* export: 'Program#get:freeInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AfreeInstanceZ_ii))(u32);
/* export: 'Program#get:newInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AnewInstanceZ_ii))(u32);
/* export: 'Program#get:renewInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3ArenewInstanceZ_ii))(u32);
/* export: 'Program#get:linkInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AlinkInstanceZ_ii))(u32);
/* export: 'Program#get:collectInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AcollectInstanceZ_ii))(u32);
/* export: 'Program#get:visitInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AvisitInstanceZ_ii))(u32);
/* export: 'Program#get:typeinfoInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AtypeinfoInstanceZ_ii))(u32);
/* export: 'Program#get:instanceofInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AinstanceofInstanceZ_ii))(u32);
/* export: 'Program#get:newBufferInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AnewBufferInstanceZ_ii))(u32);
/* export: 'Program#get:newArrayInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AnewArrayInstanceZ_ii))(u32);
/* export: 'Program#get:BLOCKInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3ABLOCKInstanceZ_ii))(u32);
/* export: 'Program#get:OBJECTInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AOBJECTInstanceZ_ii))(u32);
/* export: 'Program#get:isWasi' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AisWasiZ_ii))(u32);
/* export: 'Program#getSource' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getSourceZ_iii))(u32, u32);
/* export: 'Program#get:runtimeHeaderSize' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getZ3AruntimeHeaderSizeZ_ii))(u32);
/* export: 'Program#makeNativeVariableDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23makeNativeVariableDeclarationZ_iiii))(u32, u32, u32);
/* export: 'Program#makeNativeTypeDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23makeNativeTypeDeclarationZ_iiii))(u32, u32, u32);
/* export: 'Program#makeNativeFunctionDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23makeNativeFunctionDeclarationZ_iiii))(u32, u32, u32);
/* export: 'Program#makeNativeNamespaceDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23makeNativeNamespaceDeclarationZ_iiii))(u32, u32, u32);
/* export: 'Program#makeNativeFunction' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23makeNativeFunctionZ_iiiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Program#getElementByDeclaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23getElementByDeclarationZ_iii))(u32, u32);
/* export: 'Program#initialize' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23initializeZ_vi))(u32);
/* export: 'Program#registerConstantInteger' */
extern void (*WASM_RT_ADD_PREFIX(Z_ProgramZ23registerConstantIntegerZ_viiij))(u32, u32, u32, u64);
/* export: 'Program#ensureGlobal' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23ensureGlobalZ_iiii))(u32, u32, u32);
/* export: 'Program#lookupGlobal' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23lookupGlobalZ_iii))(u32, u32);
/* export: 'Program#requireGlobal' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ProgramZ23requireGlobalZ_iii))(u32, u32);
/* export: 'ElementKind.GLOBAL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementKindZ2EGLOBALZ_i));
/* export: 'ElementKind.LOCAL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementKindZ2ELOCALZ_i));
/* export: 'ElementKind.ENUM' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementKindZ2EENUMZ_i));
/* export: 'ElementKind.ENUMVALUE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementKindZ2EENUMVALUEZ_i));
/* export: 'ElementKind.FUNCTION_PROTOTYPE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementKindZ2EFUNCTION_PROTOTYPEZ_i));
/* export: 'ElementKind.FUNCTION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementKindZ2EFUNCTIONZ_i));
/* export: 'ElementKind.FUNCTION_TARGET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementKindZ2EFUNCTION_TARGETZ_i));
/* export: 'ElementKind.CLASS_PROTOTYPE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementKindZ2ECLASS_PROTOTYPEZ_i));
/* export: 'ElementKind.CLASS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementKindZ2ECLASSZ_i));
/* export: 'ElementKind.INTERFACE_PROTOTYPE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementKindZ2EINTERFACE_PROTOTYPEZ_i));
/* export: 'ElementKind.INTERFACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementKindZ2EINTERFACEZ_i));
/* export: 'ElementKind.FIELD_PROTOTYPE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementKindZ2EFIELD_PROTOTYPEZ_i));
/* export: 'ElementKind.FIELD' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementKindZ2EFIELDZ_i));
/* export: 'ElementKind.PROPERTY_PROTOTYPE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementKindZ2EPROPERTY_PROTOTYPEZ_i));
/* export: 'ElementKind.PROPERTY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementKindZ2EPROPERTYZ_i));
/* export: 'ElementKind.NAMESPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementKindZ2ENAMESPACEZ_i));
/* export: 'ElementKind.FILE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementKindZ2EFILEZ_i));
/* export: 'ElementKind.TYPEDEFINITION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementKindZ2ETYPEDEFINITIONZ_i));
/* export: 'ElementKind.INDEXSIGNATURE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementKindZ2EINDEXSIGNATUREZ_i));
/* export: 'DecoratorFlags.NONE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorFlagsZ2ENONEZ_i));
/* export: 'DecoratorFlags.GLOBAL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorFlagsZ2EGLOBALZ_i));
/* export: 'DecoratorFlags.OPERATOR_BINARY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorFlagsZ2EOPERATOR_BINARYZ_i));
/* export: 'DecoratorFlags.OPERATOR_PREFIX' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorFlagsZ2EOPERATOR_PREFIXZ_i));
/* export: 'DecoratorFlags.OPERATOR_POSTFIX' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorFlagsZ2EOPERATOR_POSTFIXZ_i));
/* export: 'DecoratorFlags.UNMANAGED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorFlagsZ2EUNMANAGEDZ_i));
/* export: 'DecoratorFlags.FINAL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorFlagsZ2EFINALZ_i));
/* export: 'DecoratorFlags.INLINE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorFlagsZ2EINLINEZ_i));
/* export: 'DecoratorFlags.EXTERNAL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorFlagsZ2EEXTERNALZ_i));
/* export: 'DecoratorFlags.BUILTIN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorFlagsZ2EBUILTINZ_i));
/* export: 'DecoratorFlags.LAZY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorFlagsZ2ELAZ5AYZ_i));
/* export: 'DecoratorFlags.UNSAFE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorFlagsZ2EUNSAFEZ_i));
/* export: 'DecoratorFlags.fromKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DecoratorFlagsZ2EfromKindZ_ii))(u32);
/* export: 'Element' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementZ_i));
/* export: 'Element#get:parent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementZ23getZ3AparentZ_ii))(u32);
/* export: 'Element#set:parent' */
extern void (*WASM_RT_ADD_PREFIX(Z_ElementZ23setZ3AparentZ_vii))(u32, u32);
/* export: 'Element#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementZ23getZ3AflagsZ_ii))(u32);
/* export: 'Element#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_ElementZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'Element#get:decoratorFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementZ23getZ3AdecoratorFlagsZ_ii))(u32);
/* export: 'Element#set:decoratorFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_ElementZ23setZ3AdecoratorFlagsZ_vii))(u32, u32);
/* export: 'Element#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementZ23getZ3AmembersZ_ii))(u32);
/* export: 'Element#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_ElementZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'Element#get:shadowType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementZ23getZ3AshadowTypeZ_ii))(u32);
/* export: 'Element#set:shadowType' */
extern void (*WASM_RT_ADD_PREFIX(Z_ElementZ23setZ3AshadowTypeZ_vii))(u32, u32);
/* export: 'Element#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementZ23getZ3AkindZ_ii))(u32);
/* export: 'Element#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ElementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'Element#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementZ23getZ3AnameZ_ii))(u32);
/* export: 'Element#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_ElementZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'Element#get:internalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementZ23getZ3AinternalNameZ_ii))(u32);
/* export: 'Element#set:internalName' */
extern void (*WASM_RT_ADD_PREFIX(Z_ElementZ23setZ3AinternalNameZ_vii))(u32, u32);
/* export: 'Element#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementZ23getZ3AprogramZ_ii))(u32);
/* export: 'Element#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_ElementZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'Element#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementZ23constructorZ_iiiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Element#get:file' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementZ23getZ3AfileZ_ii))(u32);
/* export: 'Element#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementZ23isZ_iii))(u32, u32);
/* export: 'Element#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementZ23isAnyZ_iii))(u32, u32);
/* export: 'Element#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_ElementZ23setZ_vii))(u32, u32);
/* export: 'Element#unset' */
extern void (*WASM_RT_ADD_PREFIX(Z_ElementZ23unsetZ_vii))(u32, u32);
/* export: 'Element#hasDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementZ23hasDecoratorZ_iii))(u32, u32);
/* export: 'Element#lookupInSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementZ23lookupInSelfZ_iii))(u32, u32);
/* export: 'Element#lookup' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementZ23lookupZ_iii))(u32, u32);
/* export: 'Element#add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementZ23addZ_iiiii))(u32, u32, u32, u32);
/* export: 'Element#get:isPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementZ23getZ3AisPublicZ_ii))(u32);
/* export: 'Element#get:isImplicitlyPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementZ23getZ3AisImplicitlyPublicZ_ii))(u32);
/* export: 'Element#visibilityEquals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementZ23visibilityEqualsZ_iii))(u32, u32);
/* export: 'Element#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ElementZ23toStringZ_ii))(u32);
/* export: 'isDeclaredElement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_isDeclaredElementZ_ii))(u32);
/* export: 'DeclaredElement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ_i));
/* export: 'DeclaredElement#get:parent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23getZ3AparentZ_ii))(u32);
/* export: 'DeclaredElement#set:parent' */
extern void (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23setZ3AparentZ_vii))(u32, u32);
/* export: 'DeclaredElement#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23getZ3AflagsZ_ii))(u32);
/* export: 'DeclaredElement#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'DeclaredElement#get:decoratorFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23getZ3AdecoratorFlagsZ_ii))(u32);
/* export: 'DeclaredElement#set:decoratorFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23setZ3AdecoratorFlagsZ_vii))(u32, u32);
/* export: 'DeclaredElement#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23getZ3AmembersZ_ii))(u32);
/* export: 'DeclaredElement#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'DeclaredElement#get:shadowType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23getZ3AshadowTypeZ_ii))(u32);
/* export: 'DeclaredElement#set:shadowType' */
extern void (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23setZ3AshadowTypeZ_vii))(u32, u32);
/* export: 'DeclaredElement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23getZ3AkindZ_ii))(u32);
/* export: 'DeclaredElement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'DeclaredElement#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23getZ3AnameZ_ii))(u32);
/* export: 'DeclaredElement#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'DeclaredElement#get:internalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23getZ3AinternalNameZ_ii))(u32);
/* export: 'DeclaredElement#set:internalName' */
extern void (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23setZ3AinternalNameZ_vii))(u32, u32);
/* export: 'DeclaredElement#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23getZ3AprogramZ_ii))(u32);
/* export: 'DeclaredElement#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'DeclaredElement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23constructorZ_iiiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'DeclaredElement#get:file' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23getZ3AfileZ_ii))(u32);
/* export: 'DeclaredElement#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23isZ_iii))(u32, u32);
/* export: 'DeclaredElement#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23isAnyZ_iii))(u32, u32);
/* export: 'DeclaredElement#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23setZ_vii))(u32, u32);
/* export: 'DeclaredElement#unset' */
extern void (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23unsetZ_vii))(u32, u32);
/* export: 'DeclaredElement#hasDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23hasDecoratorZ_iii))(u32, u32);
/* export: 'DeclaredElement#lookupInSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23lookupInSelfZ_iii))(u32, u32);
/* export: 'DeclaredElement#lookup' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23lookupZ_iii))(u32, u32);
/* export: 'DeclaredElement#add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23addZ_iiiii))(u32, u32, u32, u32);
/* export: 'DeclaredElement#get:isPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23getZ3AisPublicZ_ii))(u32);
/* export: 'DeclaredElement#get:isImplicitlyPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23getZ3AisImplicitlyPublicZ_ii))(u32);
/* export: 'DeclaredElement#visibilityEquals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23visibilityEqualsZ_iii))(u32, u32);
/* export: 'DeclaredElement#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23toStringZ_ii))(u32);
/* export: 'DeclaredElement#get:declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23getZ3AdeclarationZ_ii))(u32);
/* export: 'DeclaredElement#set:declaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23setZ3AdeclarationZ_vii))(u32, u32);
/* export: 'DeclaredElement#get:isDeclaredInLibrary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23getZ3AisDeclaredInLibraryZ_ii))(u32);
/* export: 'DeclaredElement#get:identifierNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23getZ3AidentifierNodeZ_ii))(u32);
/* export: 'DeclaredElement#get:identifierAndSignatureRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23getZ3AidentifierAndSignatureRangeZ_ii))(u32);
/* export: 'DeclaredElement#get:decoratorNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23getZ3AdecoratorNodesZ_ii))(u32);
/* export: 'DeclaredElement#isCompatibleOverride' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_DeclaredElementZ23isCompatibleOverrideZ_iii))(u32, u32);
/* export: 'isTypedElement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_isTypedElementZ_ii))(u32);
/* export: 'TypedElement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ_i));
/* export: 'TypedElement#get:parent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23getZ3AparentZ_ii))(u32);
/* export: 'TypedElement#set:parent' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23setZ3AparentZ_vii))(u32, u32);
/* export: 'TypedElement#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23getZ3AflagsZ_ii))(u32);
/* export: 'TypedElement#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'TypedElement#get:decoratorFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23getZ3AdecoratorFlagsZ_ii))(u32);
/* export: 'TypedElement#set:decoratorFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23setZ3AdecoratorFlagsZ_vii))(u32, u32);
/* export: 'TypedElement#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23getZ3AmembersZ_ii))(u32);
/* export: 'TypedElement#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'TypedElement#get:shadowType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23getZ3AshadowTypeZ_ii))(u32);
/* export: 'TypedElement#set:shadowType' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23setZ3AshadowTypeZ_vii))(u32, u32);
/* export: 'TypedElement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23getZ3AkindZ_ii))(u32);
/* export: 'TypedElement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'TypedElement#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23getZ3AnameZ_ii))(u32);
/* export: 'TypedElement#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'TypedElement#get:internalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23getZ3AinternalNameZ_ii))(u32);
/* export: 'TypedElement#set:internalName' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23setZ3AinternalNameZ_vii))(u32, u32);
/* export: 'TypedElement#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23getZ3AprogramZ_ii))(u32);
/* export: 'TypedElement#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'TypedElement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23constructorZ_iiiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'TypedElement#get:file' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23getZ3AfileZ_ii))(u32);
/* export: 'TypedElement#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23isZ_iii))(u32, u32);
/* export: 'TypedElement#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23isAnyZ_iii))(u32, u32);
/* export: 'TypedElement#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23setZ_vii))(u32, u32);
/* export: 'TypedElement#unset' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23unsetZ_vii))(u32, u32);
/* export: 'TypedElement#hasDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23hasDecoratorZ_iii))(u32, u32);
/* export: 'TypedElement#lookupInSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23lookupInSelfZ_iii))(u32, u32);
/* export: 'TypedElement#lookup' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23lookupZ_iii))(u32, u32);
/* export: 'TypedElement#add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23addZ_iiiii))(u32, u32, u32, u32);
/* export: 'TypedElement#get:isPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23getZ3AisPublicZ_ii))(u32);
/* export: 'TypedElement#get:isImplicitlyPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23getZ3AisImplicitlyPublicZ_ii))(u32);
/* export: 'TypedElement#visibilityEquals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23visibilityEqualsZ_iii))(u32, u32);
/* export: 'TypedElement#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23toStringZ_ii))(u32);
/* export: 'TypedElement#get:declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23getZ3AdeclarationZ_ii))(u32);
/* export: 'TypedElement#set:declaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23setZ3AdeclarationZ_vii))(u32, u32);
/* export: 'TypedElement#get:isDeclaredInLibrary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23getZ3AisDeclaredInLibraryZ_ii))(u32);
/* export: 'TypedElement#get:identifierNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23getZ3AidentifierNodeZ_ii))(u32);
/* export: 'TypedElement#get:identifierAndSignatureRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23getZ3AidentifierAndSignatureRangeZ_ii))(u32);
/* export: 'TypedElement#get:decoratorNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23getZ3AdecoratorNodesZ_ii))(u32);
/* export: 'TypedElement#isCompatibleOverride' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23isCompatibleOverrideZ_iii))(u32, u32);
/* export: 'TypedElement#get:type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23getZ3AtypeZ_ii))(u32);
/* export: 'TypedElement#set:type' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23setZ3AtypeZ_vii))(u32, u32);
/* export: 'TypedElement#setType' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypedElementZ23setTypeZ_vii))(u32, u32);
/* export: 'File' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ_i));
/* export: 'File#get:parent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23getZ3AparentZ_ii))(u32);
/* export: 'File#set:parent' */
extern void (*WASM_RT_ADD_PREFIX(Z_FileZ23setZ3AparentZ_vii))(u32, u32);
/* export: 'File#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23getZ3AflagsZ_ii))(u32);
/* export: 'File#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_FileZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'File#get:decoratorFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23getZ3AdecoratorFlagsZ_ii))(u32);
/* export: 'File#set:decoratorFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_FileZ23setZ3AdecoratorFlagsZ_vii))(u32, u32);
/* export: 'File#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23getZ3AmembersZ_ii))(u32);
/* export: 'File#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_FileZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'File#get:shadowType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23getZ3AshadowTypeZ_ii))(u32);
/* export: 'File#set:shadowType' */
extern void (*WASM_RT_ADD_PREFIX(Z_FileZ23setZ3AshadowTypeZ_vii))(u32, u32);
/* export: 'File#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23getZ3AkindZ_ii))(u32);
/* export: 'File#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_FileZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'File#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23getZ3AnameZ_ii))(u32);
/* export: 'File#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_FileZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'File#get:internalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23getZ3AinternalNameZ_ii))(u32);
/* export: 'File#set:internalName' */
extern void (*WASM_RT_ADD_PREFIX(Z_FileZ23setZ3AinternalNameZ_vii))(u32, u32);
/* export: 'File#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23getZ3AprogramZ_ii))(u32);
/* export: 'File#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_FileZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'File#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'File#get:file' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23getZ3AfileZ_ii))(u32);
/* export: 'File#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23isZ_iii))(u32, u32);
/* export: 'File#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23isAnyZ_iii))(u32, u32);
/* export: 'File#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_FileZ23setZ_vii))(u32, u32);
/* export: 'File#unset' */
extern void (*WASM_RT_ADD_PREFIX(Z_FileZ23unsetZ_vii))(u32, u32);
/* export: 'File#hasDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23hasDecoratorZ_iii))(u32, u32);
/* export: 'File#lookupInSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23lookupInSelfZ_iii))(u32, u32);
/* export: 'File#lookup' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23lookupZ_iii))(u32, u32);
/* export: 'File#add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23addZ_iiiii))(u32, u32, u32, u32);
/* export: 'File#get:isPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23getZ3AisPublicZ_ii))(u32);
/* export: 'File#get:isImplicitlyPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23getZ3AisImplicitlyPublicZ_ii))(u32);
/* export: 'File#visibilityEquals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23visibilityEqualsZ_iii))(u32, u32);
/* export: 'File#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23toStringZ_ii))(u32);
/* export: 'File#get:exports' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23getZ3AexportsZ_ii))(u32);
/* export: 'File#set:exports' */
extern void (*WASM_RT_ADD_PREFIX(Z_FileZ23setZ3AexportsZ_vii))(u32, u32);
/* export: 'File#get:exportsStar' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23getZ3AexportsStarZ_ii))(u32);
/* export: 'File#set:exportsStar' */
extern void (*WASM_RT_ADD_PREFIX(Z_FileZ23setZ3AexportsStarZ_vii))(u32, u32);
/* export: 'File#get:startFunction' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23getZ3AstartFunctionZ_ii))(u32);
/* export: 'File#set:startFunction' */
extern void (*WASM_RT_ADD_PREFIX(Z_FileZ23setZ3AstartFunctionZ_vii))(u32, u32);
/* export: 'File#get:aliasNamespaces' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23getZ3AaliasNamespacesZ_ii))(u32);
/* export: 'File#set:aliasNamespaces' */
extern void (*WASM_RT_ADD_PREFIX(Z_FileZ23setZ3AaliasNamespacesZ_vii))(u32, u32);
/* export: 'File#get:source' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23getZ3AsourceZ_ii))(u32);
/* export: 'File#set:source' */
extern void (*WASM_RT_ADD_PREFIX(Z_FileZ23setZ3AsourceZ_vii))(u32, u32);
/* export: 'File#ensureExport' */
extern void (*WASM_RT_ADD_PREFIX(Z_FileZ23ensureExportZ_viii))(u32, u32, u32);
/* export: 'File#ensureExportStar' */
extern void (*WASM_RT_ADD_PREFIX(Z_FileZ23ensureExportStarZ_vii))(u32, u32);
/* export: 'File#lookupExport' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23lookupExportZ_iii))(u32, u32);
/* export: 'File#asAliasNamespace' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FileZ23asAliasNamespaceZ_iiiii))(u32, u32, u32, u32);
/* export: 'TypeDefinition' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ_i));
/* export: 'TypeDefinition#get:parent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23getZ3AparentZ_ii))(u32);
/* export: 'TypeDefinition#set:parent' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23setZ3AparentZ_vii))(u32, u32);
/* export: 'TypeDefinition#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23getZ3AflagsZ_ii))(u32);
/* export: 'TypeDefinition#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'TypeDefinition#get:decoratorFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23getZ3AdecoratorFlagsZ_ii))(u32);
/* export: 'TypeDefinition#set:decoratorFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23setZ3AdecoratorFlagsZ_vii))(u32, u32);
/* export: 'TypeDefinition#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23getZ3AmembersZ_ii))(u32);
/* export: 'TypeDefinition#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'TypeDefinition#get:shadowType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23getZ3AshadowTypeZ_ii))(u32);
/* export: 'TypeDefinition#set:shadowType' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23setZ3AshadowTypeZ_vii))(u32, u32);
/* export: 'TypeDefinition#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23getZ3AkindZ_ii))(u32);
/* export: 'TypeDefinition#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'TypeDefinition#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23getZ3AnameZ_ii))(u32);
/* export: 'TypeDefinition#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'TypeDefinition#get:internalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23getZ3AinternalNameZ_ii))(u32);
/* export: 'TypeDefinition#set:internalName' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23setZ3AinternalNameZ_vii))(u32, u32);
/* export: 'TypeDefinition#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23getZ3AprogramZ_ii))(u32);
/* export: 'TypeDefinition#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'TypeDefinition#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'TypeDefinition#get:file' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23getZ3AfileZ_ii))(u32);
/* export: 'TypeDefinition#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23isZ_iii))(u32, u32);
/* export: 'TypeDefinition#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23isAnyZ_iii))(u32, u32);
/* export: 'TypeDefinition#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23setZ_vii))(u32, u32);
/* export: 'TypeDefinition#unset' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23unsetZ_vii))(u32, u32);
/* export: 'TypeDefinition#hasDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23hasDecoratorZ_iii))(u32, u32);
/* export: 'TypeDefinition#lookupInSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23lookupInSelfZ_iii))(u32, u32);
/* export: 'TypeDefinition#lookup' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23lookupZ_iii))(u32, u32);
/* export: 'TypeDefinition#add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23addZ_iiiii))(u32, u32, u32, u32);
/* export: 'TypeDefinition#get:isPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23getZ3AisPublicZ_ii))(u32);
/* export: 'TypeDefinition#get:isImplicitlyPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23getZ3AisImplicitlyPublicZ_ii))(u32);
/* export: 'TypeDefinition#visibilityEquals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23visibilityEqualsZ_iii))(u32, u32);
/* export: 'TypeDefinition#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23toStringZ_ii))(u32);
/* export: 'TypeDefinition#get:declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23getZ3AdeclarationZ_ii))(u32);
/* export: 'TypeDefinition#set:declaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23setZ3AdeclarationZ_vii))(u32, u32);
/* export: 'TypeDefinition#get:isDeclaredInLibrary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23getZ3AisDeclaredInLibraryZ_ii))(u32);
/* export: 'TypeDefinition#get:identifierNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23getZ3AidentifierNodeZ_ii))(u32);
/* export: 'TypeDefinition#get:identifierAndSignatureRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23getZ3AidentifierAndSignatureRangeZ_ii))(u32);
/* export: 'TypeDefinition#get:decoratorNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23getZ3AdecoratorNodesZ_ii))(u32);
/* export: 'TypeDefinition#isCompatibleOverride' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23isCompatibleOverrideZ_iii))(u32, u32);
/* export: 'TypeDefinition#get:type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23getZ3AtypeZ_ii))(u32);
/* export: 'TypeDefinition#set:type' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23setZ3AtypeZ_vii))(u32, u32);
/* export: 'TypeDefinition#setType' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23setTypeZ_vii))(u32, u32);
/* export: 'TypeDefinition#get:typeParameterNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23getZ3AtypeParameterNodesZ_ii))(u32);
/* export: 'TypeDefinition#get:typeNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeDefinitionZ23getZ3AtypeNodeZ_ii))(u32);
/* export: 'Namespace' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ_i));
/* export: 'Namespace#get:parent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23getZ3AparentZ_ii))(u32);
/* export: 'Namespace#set:parent' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23setZ3AparentZ_vii))(u32, u32);
/* export: 'Namespace#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23getZ3AflagsZ_ii))(u32);
/* export: 'Namespace#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'Namespace#get:decoratorFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23getZ3AdecoratorFlagsZ_ii))(u32);
/* export: 'Namespace#set:decoratorFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23setZ3AdecoratorFlagsZ_vii))(u32, u32);
/* export: 'Namespace#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23getZ3AmembersZ_ii))(u32);
/* export: 'Namespace#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'Namespace#get:shadowType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23getZ3AshadowTypeZ_ii))(u32);
/* export: 'Namespace#set:shadowType' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23setZ3AshadowTypeZ_vii))(u32, u32);
/* export: 'Namespace#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23getZ3AkindZ_ii))(u32);
/* export: 'Namespace#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'Namespace#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23getZ3AnameZ_ii))(u32);
/* export: 'Namespace#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'Namespace#get:internalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23getZ3AinternalNameZ_ii))(u32);
/* export: 'Namespace#set:internalName' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23setZ3AinternalNameZ_vii))(u32, u32);
/* export: 'Namespace#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23getZ3AprogramZ_ii))(u32);
/* export: 'Namespace#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'Namespace#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Namespace#get:file' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23getZ3AfileZ_ii))(u32);
/* export: 'Namespace#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23isZ_iii))(u32, u32);
/* export: 'Namespace#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23isAnyZ_iii))(u32, u32);
/* export: 'Namespace#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23setZ_vii))(u32, u32);
/* export: 'Namespace#unset' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23unsetZ_vii))(u32, u32);
/* export: 'Namespace#hasDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23hasDecoratorZ_iii))(u32, u32);
/* export: 'Namespace#lookupInSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23lookupInSelfZ_iii))(u32, u32);
/* export: 'Namespace#lookup' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23lookupZ_iii))(u32, u32);
/* export: 'Namespace#add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23addZ_iiiii))(u32, u32, u32, u32);
/* export: 'Namespace#get:isPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23getZ3AisPublicZ_ii))(u32);
/* export: 'Namespace#get:isImplicitlyPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23getZ3AisImplicitlyPublicZ_ii))(u32);
/* export: 'Namespace#visibilityEquals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23visibilityEqualsZ_iii))(u32, u32);
/* export: 'Namespace#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23toStringZ_ii))(u32);
/* export: 'Namespace#get:declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23getZ3AdeclarationZ_ii))(u32);
/* export: 'Namespace#set:declaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23setZ3AdeclarationZ_vii))(u32, u32);
/* export: 'Namespace#get:isDeclaredInLibrary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23getZ3AisDeclaredInLibraryZ_ii))(u32);
/* export: 'Namespace#get:identifierNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23getZ3AidentifierNodeZ_ii))(u32);
/* export: 'Namespace#get:identifierAndSignatureRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23getZ3AidentifierAndSignatureRangeZ_ii))(u32);
/* export: 'Namespace#get:decoratorNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23getZ3AdecoratorNodesZ_ii))(u32);
/* export: 'Namespace#isCompatibleOverride' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NamespaceZ23isCompatibleOverrideZ_iii))(u32, u32);
/* export: 'Enum' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ_i));
/* export: 'Enum#get:parent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23getZ3AparentZ_ii))(u32);
/* export: 'Enum#set:parent' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumZ23setZ3AparentZ_vii))(u32, u32);
/* export: 'Enum#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23getZ3AflagsZ_ii))(u32);
/* export: 'Enum#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'Enum#get:decoratorFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23getZ3AdecoratorFlagsZ_ii))(u32);
/* export: 'Enum#set:decoratorFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumZ23setZ3AdecoratorFlagsZ_vii))(u32, u32);
/* export: 'Enum#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23getZ3AmembersZ_ii))(u32);
/* export: 'Enum#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'Enum#get:shadowType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23getZ3AshadowTypeZ_ii))(u32);
/* export: 'Enum#set:shadowType' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumZ23setZ3AshadowTypeZ_vii))(u32, u32);
/* export: 'Enum#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23getZ3AkindZ_ii))(u32);
/* export: 'Enum#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'Enum#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23getZ3AnameZ_ii))(u32);
/* export: 'Enum#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'Enum#get:internalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23getZ3AinternalNameZ_ii))(u32);
/* export: 'Enum#set:internalName' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumZ23setZ3AinternalNameZ_vii))(u32, u32);
/* export: 'Enum#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23getZ3AprogramZ_ii))(u32);
/* export: 'Enum#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'Enum#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Enum#get:file' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23getZ3AfileZ_ii))(u32);
/* export: 'Enum#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23isZ_iii))(u32, u32);
/* export: 'Enum#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23isAnyZ_iii))(u32, u32);
/* export: 'Enum#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumZ23setZ_vii))(u32, u32);
/* export: 'Enum#unset' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumZ23unsetZ_vii))(u32, u32);
/* export: 'Enum#hasDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23hasDecoratorZ_iii))(u32, u32);
/* export: 'Enum#lookupInSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23lookupInSelfZ_iii))(u32, u32);
/* export: 'Enum#lookup' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23lookupZ_iii))(u32, u32);
/* export: 'Enum#add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23addZ_iiiii))(u32, u32, u32, u32);
/* export: 'Enum#get:isPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23getZ3AisPublicZ_ii))(u32);
/* export: 'Enum#get:isImplicitlyPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23getZ3AisImplicitlyPublicZ_ii))(u32);
/* export: 'Enum#visibilityEquals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23visibilityEqualsZ_iii))(u32, u32);
/* export: 'Enum#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23toStringZ_ii))(u32);
/* export: 'Enum#get:declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23getZ3AdeclarationZ_ii))(u32);
/* export: 'Enum#set:declaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumZ23setZ3AdeclarationZ_vii))(u32, u32);
/* export: 'Enum#get:isDeclaredInLibrary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23getZ3AisDeclaredInLibraryZ_ii))(u32);
/* export: 'Enum#get:identifierNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23getZ3AidentifierNodeZ_ii))(u32);
/* export: 'Enum#get:identifierAndSignatureRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23getZ3AidentifierAndSignatureRangeZ_ii))(u32);
/* export: 'Enum#get:decoratorNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23getZ3AdecoratorNodesZ_ii))(u32);
/* export: 'Enum#isCompatibleOverride' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23isCompatibleOverrideZ_iii))(u32, u32);
/* export: 'Enum#get:type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumZ23getZ3AtypeZ_ii))(u32);
/* export: 'Enum#set:type' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumZ23setZ3AtypeZ_vii))(u32, u32);
/* export: 'Enum#setType' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumZ23setTypeZ_vii))(u32, u32);
/* export: 'ConstantValueKind.NONE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConstantValueKindZ2ENONEZ_i));
/* export: 'ConstantValueKind.INTEGER' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConstantValueKindZ2EINTEGERZ_i));
/* export: 'ConstantValueKind.FLOAT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ConstantValueKindZ2EFLOATZ_i));
/* export: 'VariableLikeElement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ_i));
/* export: 'VariableLikeElement#get:parent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23getZ3AparentZ_ii))(u32);
/* export: 'VariableLikeElement#set:parent' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23setZ3AparentZ_vii))(u32, u32);
/* export: 'VariableLikeElement#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23getZ3AflagsZ_ii))(u32);
/* export: 'VariableLikeElement#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'VariableLikeElement#get:decoratorFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23getZ3AdecoratorFlagsZ_ii))(u32);
/* export: 'VariableLikeElement#set:decoratorFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23setZ3AdecoratorFlagsZ_vii))(u32, u32);
/* export: 'VariableLikeElement#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23getZ3AmembersZ_ii))(u32);
/* export: 'VariableLikeElement#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'VariableLikeElement#get:shadowType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23getZ3AshadowTypeZ_ii))(u32);
/* export: 'VariableLikeElement#set:shadowType' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23setZ3AshadowTypeZ_vii))(u32, u32);
/* export: 'VariableLikeElement#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23getZ3AkindZ_ii))(u32);
/* export: 'VariableLikeElement#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'VariableLikeElement#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23getZ3AnameZ_ii))(u32);
/* export: 'VariableLikeElement#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'VariableLikeElement#get:internalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23getZ3AinternalNameZ_ii))(u32);
/* export: 'VariableLikeElement#set:internalName' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23setZ3AinternalNameZ_vii))(u32, u32);
/* export: 'VariableLikeElement#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23getZ3AprogramZ_ii))(u32);
/* export: 'VariableLikeElement#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'VariableLikeElement#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'VariableLikeElement#get:file' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23getZ3AfileZ_ii))(u32);
/* export: 'VariableLikeElement#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23isZ_iii))(u32, u32);
/* export: 'VariableLikeElement#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23isAnyZ_iii))(u32, u32);
/* export: 'VariableLikeElement#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23setZ_vii))(u32, u32);
/* export: 'VariableLikeElement#unset' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23unsetZ_vii))(u32, u32);
/* export: 'VariableLikeElement#hasDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23hasDecoratorZ_iii))(u32, u32);
/* export: 'VariableLikeElement#lookupInSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23lookupInSelfZ_iii))(u32, u32);
/* export: 'VariableLikeElement#lookup' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23lookupZ_iii))(u32, u32);
/* export: 'VariableLikeElement#add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23addZ_iiiii))(u32, u32, u32, u32);
/* export: 'VariableLikeElement#get:isPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23getZ3AisPublicZ_ii))(u32);
/* export: 'VariableLikeElement#get:isImplicitlyPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23getZ3AisImplicitlyPublicZ_ii))(u32);
/* export: 'VariableLikeElement#visibilityEquals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23visibilityEqualsZ_iii))(u32, u32);
/* export: 'VariableLikeElement#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23toStringZ_ii))(u32);
/* export: 'VariableLikeElement#get:declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23getZ3AdeclarationZ_ii))(u32);
/* export: 'VariableLikeElement#set:declaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23setZ3AdeclarationZ_vii))(u32, u32);
/* export: 'VariableLikeElement#get:isDeclaredInLibrary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23getZ3AisDeclaredInLibraryZ_ii))(u32);
/* export: 'VariableLikeElement#get:identifierNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23getZ3AidentifierNodeZ_ii))(u32);
/* export: 'VariableLikeElement#get:identifierAndSignatureRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23getZ3AidentifierAndSignatureRangeZ_ii))(u32);
/* export: 'VariableLikeElement#get:decoratorNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23getZ3AdecoratorNodesZ_ii))(u32);
/* export: 'VariableLikeElement#isCompatibleOverride' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23isCompatibleOverrideZ_iii))(u32, u32);
/* export: 'VariableLikeElement#get:type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23getZ3AtypeZ_ii))(u32);
/* export: 'VariableLikeElement#set:type' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23setZ3AtypeZ_vii))(u32, u32);
/* export: 'VariableLikeElement#setType' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23setTypeZ_vii))(u32, u32);
/* export: 'VariableLikeElement#get:constantValueKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23getZ3AconstantValueKindZ_ii))(u32);
/* export: 'VariableLikeElement#set:constantValueKind' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23setZ3AconstantValueKindZ_vii))(u32, u32);
/* export: 'VariableLikeElement#get:constantIntegerValue' */
extern u64 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23getZ3AconstantIntegerValueZ_ji))(u32);
/* export: 'VariableLikeElement#set:constantIntegerValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23setZ3AconstantIntegerValueZ_vij))(u32, u64);
/* export: 'VariableLikeElement#get:constantFloatValue' */
extern f64 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23getZ3AconstantFloatValueZ_di))(u32);
/* export: 'VariableLikeElement#set:constantFloatValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23setZ3AconstantFloatValueZ_vid))(u32, f64);
/* export: 'VariableLikeElement#get:typeNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23getZ3AtypeNodeZ_ii))(u32);
/* export: 'VariableLikeElement#get:initializerNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23getZ3AinitializerNodeZ_ii))(u32);
/* export: 'VariableLikeElement#setConstantIntegerValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23setConstantIntegerValueZ_viji))(u32, u64, u32);
/* export: 'VariableLikeElement#setConstantFloatValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_VariableLikeElementZ23setConstantFloatValueZ_vidi))(u32, f64, u32);
/* export: 'EnumValue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ_i));
/* export: 'EnumValue#get:parent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AparentZ_ii))(u32);
/* export: 'EnumValue#set:parent' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23setZ3AparentZ_vii))(u32, u32);
/* export: 'EnumValue#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AflagsZ_ii))(u32);
/* export: 'EnumValue#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'EnumValue#get:decoratorFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AdecoratorFlagsZ_ii))(u32);
/* export: 'EnumValue#set:decoratorFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23setZ3AdecoratorFlagsZ_vii))(u32, u32);
/* export: 'EnumValue#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AmembersZ_ii))(u32);
/* export: 'EnumValue#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'EnumValue#get:shadowType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AshadowTypeZ_ii))(u32);
/* export: 'EnumValue#set:shadowType' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23setZ3AshadowTypeZ_vii))(u32, u32);
/* export: 'EnumValue#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AkindZ_ii))(u32);
/* export: 'EnumValue#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'EnumValue#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AnameZ_ii))(u32);
/* export: 'EnumValue#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'EnumValue#get:internalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AinternalNameZ_ii))(u32);
/* export: 'EnumValue#set:internalName' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23setZ3AinternalNameZ_vii))(u32, u32);
/* export: 'EnumValue#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AprogramZ_ii))(u32);
/* export: 'EnumValue#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'EnumValue#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'EnumValue#get:file' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AfileZ_ii))(u32);
/* export: 'EnumValue#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23isZ_iii))(u32, u32);
/* export: 'EnumValue#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23isAnyZ_iii))(u32, u32);
/* export: 'EnumValue#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23setZ_vii))(u32, u32);
/* export: 'EnumValue#unset' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23unsetZ_vii))(u32, u32);
/* export: 'EnumValue#hasDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23hasDecoratorZ_iii))(u32, u32);
/* export: 'EnumValue#lookupInSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23lookupInSelfZ_iii))(u32, u32);
/* export: 'EnumValue#lookup' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23lookupZ_iii))(u32, u32);
/* export: 'EnumValue#add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23addZ_iiiii))(u32, u32, u32, u32);
/* export: 'EnumValue#get:isPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AisPublicZ_ii))(u32);
/* export: 'EnumValue#get:isImplicitlyPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AisImplicitlyPublicZ_ii))(u32);
/* export: 'EnumValue#visibilityEquals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23visibilityEqualsZ_iii))(u32, u32);
/* export: 'EnumValue#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23toStringZ_ii))(u32);
/* export: 'EnumValue#get:declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AdeclarationZ_ii))(u32);
/* export: 'EnumValue#set:declaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23setZ3AdeclarationZ_vii))(u32, u32);
/* export: 'EnumValue#get:isDeclaredInLibrary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AisDeclaredInLibraryZ_ii))(u32);
/* export: 'EnumValue#get:identifierNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AidentifierNodeZ_ii))(u32);
/* export: 'EnumValue#get:identifierAndSignatureRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AidentifierAndSignatureRangeZ_ii))(u32);
/* export: 'EnumValue#get:decoratorNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AdecoratorNodesZ_ii))(u32);
/* export: 'EnumValue#isCompatibleOverride' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23isCompatibleOverrideZ_iii))(u32, u32);
/* export: 'EnumValue#get:type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AtypeZ_ii))(u32);
/* export: 'EnumValue#set:type' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23setZ3AtypeZ_vii))(u32, u32);
/* export: 'EnumValue#setType' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23setTypeZ_vii))(u32, u32);
/* export: 'EnumValue#get:constantValueKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AconstantValueKindZ_ii))(u32);
/* export: 'EnumValue#set:constantValueKind' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23setZ3AconstantValueKindZ_vii))(u32, u32);
/* export: 'EnumValue#get:constantIntegerValue' */
extern u64 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AconstantIntegerValueZ_ji))(u32);
/* export: 'EnumValue#set:constantIntegerValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23setZ3AconstantIntegerValueZ_vij))(u32, u64);
/* export: 'EnumValue#get:constantFloatValue' */
extern f64 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AconstantFloatValueZ_di))(u32);
/* export: 'EnumValue#set:constantFloatValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23setZ3AconstantFloatValueZ_vid))(u32, f64);
/* export: 'EnumValue#get:typeNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AtypeNodeZ_ii))(u32);
/* export: 'EnumValue#get:initializerNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AinitializerNodeZ_ii))(u32);
/* export: 'EnumValue#setConstantIntegerValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23setConstantIntegerValueZ_viji))(u32, u64, u32);
/* export: 'EnumValue#setConstantFloatValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23setConstantFloatValueZ_vidi))(u32, f64, u32);
/* export: 'EnumValue#get:isImmutable' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AisImmutableZ_ii))(u32);
/* export: 'EnumValue#set:isImmutable' */
extern void (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23setZ3AisImmutableZ_vii))(u32, u32);
/* export: 'EnumValue#get:valueNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_EnumValueZ23getZ3AvalueNodeZ_ii))(u32);
/* export: 'Global' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ_i));
/* export: 'Global#get:parent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23getZ3AparentZ_ii))(u32);
/* export: 'Global#set:parent' */
extern void (*WASM_RT_ADD_PREFIX(Z_GlobalZ23setZ3AparentZ_vii))(u32, u32);
/* export: 'Global#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23getZ3AflagsZ_ii))(u32);
/* export: 'Global#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_GlobalZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'Global#get:decoratorFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23getZ3AdecoratorFlagsZ_ii))(u32);
/* export: 'Global#set:decoratorFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_GlobalZ23setZ3AdecoratorFlagsZ_vii))(u32, u32);
/* export: 'Global#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23getZ3AmembersZ_ii))(u32);
/* export: 'Global#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_GlobalZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'Global#get:shadowType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23getZ3AshadowTypeZ_ii))(u32);
/* export: 'Global#set:shadowType' */
extern void (*WASM_RT_ADD_PREFIX(Z_GlobalZ23setZ3AshadowTypeZ_vii))(u32, u32);
/* export: 'Global#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23getZ3AkindZ_ii))(u32);
/* export: 'Global#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_GlobalZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'Global#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23getZ3AnameZ_ii))(u32);
/* export: 'Global#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_GlobalZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'Global#get:internalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23getZ3AinternalNameZ_ii))(u32);
/* export: 'Global#set:internalName' */
extern void (*WASM_RT_ADD_PREFIX(Z_GlobalZ23setZ3AinternalNameZ_vii))(u32, u32);
/* export: 'Global#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23getZ3AprogramZ_ii))(u32);
/* export: 'Global#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_GlobalZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'Global#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Global#get:file' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23getZ3AfileZ_ii))(u32);
/* export: 'Global#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23isZ_iii))(u32, u32);
/* export: 'Global#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23isAnyZ_iii))(u32, u32);
/* export: 'Global#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_GlobalZ23setZ_vii))(u32, u32);
/* export: 'Global#unset' */
extern void (*WASM_RT_ADD_PREFIX(Z_GlobalZ23unsetZ_vii))(u32, u32);
/* export: 'Global#hasDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23hasDecoratorZ_iii))(u32, u32);
/* export: 'Global#lookupInSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23lookupInSelfZ_iii))(u32, u32);
/* export: 'Global#lookup' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23lookupZ_iii))(u32, u32);
/* export: 'Global#add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23addZ_iiiii))(u32, u32, u32, u32);
/* export: 'Global#get:isPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23getZ3AisPublicZ_ii))(u32);
/* export: 'Global#get:isImplicitlyPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23getZ3AisImplicitlyPublicZ_ii))(u32);
/* export: 'Global#visibilityEquals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23visibilityEqualsZ_iii))(u32, u32);
/* export: 'Global#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23toStringZ_ii))(u32);
/* export: 'Global#get:declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23getZ3AdeclarationZ_ii))(u32);
/* export: 'Global#set:declaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_GlobalZ23setZ3AdeclarationZ_vii))(u32, u32);
/* export: 'Global#get:isDeclaredInLibrary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23getZ3AisDeclaredInLibraryZ_ii))(u32);
/* export: 'Global#get:identifierNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23getZ3AidentifierNodeZ_ii))(u32);
/* export: 'Global#get:identifierAndSignatureRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23getZ3AidentifierAndSignatureRangeZ_ii))(u32);
/* export: 'Global#get:decoratorNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23getZ3AdecoratorNodesZ_ii))(u32);
/* export: 'Global#isCompatibleOverride' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23isCompatibleOverrideZ_iii))(u32, u32);
/* export: 'Global#get:type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23getZ3AtypeZ_ii))(u32);
/* export: 'Global#set:type' */
extern void (*WASM_RT_ADD_PREFIX(Z_GlobalZ23setZ3AtypeZ_vii))(u32, u32);
/* export: 'Global#setType' */
extern void (*WASM_RT_ADD_PREFIX(Z_GlobalZ23setTypeZ_vii))(u32, u32);
/* export: 'Global#get:constantValueKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23getZ3AconstantValueKindZ_ii))(u32);
/* export: 'Global#set:constantValueKind' */
extern void (*WASM_RT_ADD_PREFIX(Z_GlobalZ23setZ3AconstantValueKindZ_vii))(u32, u32);
/* export: 'Global#get:constantIntegerValue' */
extern u64 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23getZ3AconstantIntegerValueZ_ji))(u32);
/* export: 'Global#set:constantIntegerValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_GlobalZ23setZ3AconstantIntegerValueZ_vij))(u32, u64);
/* export: 'Global#get:constantFloatValue' */
extern f64 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23getZ3AconstantFloatValueZ_di))(u32);
/* export: 'Global#set:constantFloatValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_GlobalZ23setZ3AconstantFloatValueZ_vid))(u32, f64);
/* export: 'Global#get:typeNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23getZ3AtypeNodeZ_ii))(u32);
/* export: 'Global#get:initializerNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GlobalZ23getZ3AinitializerNodeZ_ii))(u32);
/* export: 'Global#setConstantIntegerValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_GlobalZ23setConstantIntegerValueZ_viji))(u32, u64, u32);
/* export: 'Global#setConstantFloatValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_GlobalZ23setConstantFloatValueZ_vidi))(u32, f64, u32);
/* export: 'Parameter' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterZ_i));
/* export: 'Parameter#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterZ23getZ3AnameZ_ii))(u32);
/* export: 'Parameter#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParameterZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'Parameter#get:type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterZ23getZ3AtypeZ_ii))(u32);
/* export: 'Parameter#set:type' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParameterZ23setZ3AtypeZ_vii))(u32, u32);
/* export: 'Parameter#get:initializer' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterZ23getZ3AinitializerZ_ii))(u32);
/* export: 'Parameter#set:initializer' */
extern void (*WASM_RT_ADD_PREFIX(Z_ParameterZ23setZ3AinitializerZ_vii))(u32, u32);
/* export: 'Parameter#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ParameterZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'Local' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ_i));
/* export: 'Local#get:parent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AparentZ_ii))(u32);
/* export: 'Local#set:parent' */
extern void (*WASM_RT_ADD_PREFIX(Z_LocalZ23setZ3AparentZ_vii))(u32, u32);
/* export: 'Local#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AflagsZ_ii))(u32);
/* export: 'Local#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_LocalZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'Local#get:decoratorFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AdecoratorFlagsZ_ii))(u32);
/* export: 'Local#set:decoratorFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_LocalZ23setZ3AdecoratorFlagsZ_vii))(u32, u32);
/* export: 'Local#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AmembersZ_ii))(u32);
/* export: 'Local#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_LocalZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'Local#get:shadowType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AshadowTypeZ_ii))(u32);
/* export: 'Local#set:shadowType' */
extern void (*WASM_RT_ADD_PREFIX(Z_LocalZ23setZ3AshadowTypeZ_vii))(u32, u32);
/* export: 'Local#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AkindZ_ii))(u32);
/* export: 'Local#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_LocalZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'Local#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AnameZ_ii))(u32);
/* export: 'Local#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_LocalZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'Local#get:internalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AinternalNameZ_ii))(u32);
/* export: 'Local#set:internalName' */
extern void (*WASM_RT_ADD_PREFIX(Z_LocalZ23setZ3AinternalNameZ_vii))(u32, u32);
/* export: 'Local#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AprogramZ_ii))(u32);
/* export: 'Local#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_LocalZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'Local#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23constructorZ_iiiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Local#get:file' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AfileZ_ii))(u32);
/* export: 'Local#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23isZ_iii))(u32, u32);
/* export: 'Local#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23isAnyZ_iii))(u32, u32);
/* export: 'Local#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_LocalZ23setZ_vii))(u32, u32);
/* export: 'Local#unset' */
extern void (*WASM_RT_ADD_PREFIX(Z_LocalZ23unsetZ_vii))(u32, u32);
/* export: 'Local#hasDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23hasDecoratorZ_iii))(u32, u32);
/* export: 'Local#lookupInSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23lookupInSelfZ_iii))(u32, u32);
/* export: 'Local#lookup' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23lookupZ_iii))(u32, u32);
/* export: 'Local#add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23addZ_iiiii))(u32, u32, u32, u32);
/* export: 'Local#get:isPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AisPublicZ_ii))(u32);
/* export: 'Local#get:isImplicitlyPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AisImplicitlyPublicZ_ii))(u32);
/* export: 'Local#visibilityEquals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23visibilityEqualsZ_iii))(u32, u32);
/* export: 'Local#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23toStringZ_ii))(u32);
/* export: 'Local#get:declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AdeclarationZ_ii))(u32);
/* export: 'Local#set:declaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_LocalZ23setZ3AdeclarationZ_vii))(u32, u32);
/* export: 'Local#get:isDeclaredInLibrary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AisDeclaredInLibraryZ_ii))(u32);
/* export: 'Local#get:identifierNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AidentifierNodeZ_ii))(u32);
/* export: 'Local#get:identifierAndSignatureRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AidentifierAndSignatureRangeZ_ii))(u32);
/* export: 'Local#get:decoratorNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AdecoratorNodesZ_ii))(u32);
/* export: 'Local#isCompatibleOverride' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23isCompatibleOverrideZ_iii))(u32, u32);
/* export: 'Local#get:type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AtypeZ_ii))(u32);
/* export: 'Local#set:type' */
extern void (*WASM_RT_ADD_PREFIX(Z_LocalZ23setZ3AtypeZ_vii))(u32, u32);
/* export: 'Local#setType' */
extern void (*WASM_RT_ADD_PREFIX(Z_LocalZ23setTypeZ_vii))(u32, u32);
/* export: 'Local#get:constantValueKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AconstantValueKindZ_ii))(u32);
/* export: 'Local#set:constantValueKind' */
extern void (*WASM_RT_ADD_PREFIX(Z_LocalZ23setZ3AconstantValueKindZ_vii))(u32, u32);
/* export: 'Local#get:constantIntegerValue' */
extern u64 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AconstantIntegerValueZ_ji))(u32);
/* export: 'Local#set:constantIntegerValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_LocalZ23setZ3AconstantIntegerValueZ_vij))(u32, u64);
/* export: 'Local#get:constantFloatValue' */
extern f64 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AconstantFloatValueZ_di))(u32);
/* export: 'Local#set:constantFloatValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_LocalZ23setZ3AconstantFloatValueZ_vid))(u32, f64);
/* export: 'Local#get:typeNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AtypeNodeZ_ii))(u32);
/* export: 'Local#get:initializerNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AinitializerNodeZ_ii))(u32);
/* export: 'Local#setConstantIntegerValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_LocalZ23setConstantIntegerValueZ_viji))(u32, u64, u32);
/* export: 'Local#setConstantFloatValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_LocalZ23setConstantFloatValueZ_vidi))(u32, f64, u32);
/* export: 'Local#get:index' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_LocalZ23getZ3AindexZ_ii))(u32);
/* export: 'Local#set:index' */
extern void (*WASM_RT_ADD_PREFIX(Z_LocalZ23setZ3AindexZ_vii))(u32, u32);
/* export: 'Local#setTemporaryName' */
extern void (*WASM_RT_ADD_PREFIX(Z_LocalZ23setTemporaryNameZ_vii))(u32, u32);
/* export: 'Local#resetTemporaryName' */
extern void (*WASM_RT_ADD_PREFIX(Z_LocalZ23resetTemporaryNameZ_vi))(u32);
/* export: 'FunctionPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ_i));
/* export: 'FunctionPrototype#get:parent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AparentZ_ii))(u32);
/* export: 'FunctionPrototype#set:parent' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23setZ3AparentZ_vii))(u32, u32);
/* export: 'FunctionPrototype#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AflagsZ_ii))(u32);
/* export: 'FunctionPrototype#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'FunctionPrototype#get:decoratorFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AdecoratorFlagsZ_ii))(u32);
/* export: 'FunctionPrototype#set:decoratorFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23setZ3AdecoratorFlagsZ_vii))(u32, u32);
/* export: 'FunctionPrototype#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AmembersZ_ii))(u32);
/* export: 'FunctionPrototype#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'FunctionPrototype#get:shadowType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AshadowTypeZ_ii))(u32);
/* export: 'FunctionPrototype#set:shadowType' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23setZ3AshadowTypeZ_vii))(u32, u32);
/* export: 'FunctionPrototype#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AkindZ_ii))(u32);
/* export: 'FunctionPrototype#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'FunctionPrototype#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AnameZ_ii))(u32);
/* export: 'FunctionPrototype#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'FunctionPrototype#get:internalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AinternalNameZ_ii))(u32);
/* export: 'FunctionPrototype#set:internalName' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23setZ3AinternalNameZ_vii))(u32, u32);
/* export: 'FunctionPrototype#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AprogramZ_ii))(u32);
/* export: 'FunctionPrototype#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'FunctionPrototype#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'FunctionPrototype#get:file' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AfileZ_ii))(u32);
/* export: 'FunctionPrototype#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23isZ_iii))(u32, u32);
/* export: 'FunctionPrototype#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23isAnyZ_iii))(u32, u32);
/* export: 'FunctionPrototype#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23setZ_vii))(u32, u32);
/* export: 'FunctionPrototype#unset' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23unsetZ_vii))(u32, u32);
/* export: 'FunctionPrototype#hasDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23hasDecoratorZ_iii))(u32, u32);
/* export: 'FunctionPrototype#lookupInSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23lookupInSelfZ_iii))(u32, u32);
/* export: 'FunctionPrototype#lookup' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23lookupZ_iii))(u32, u32);
/* export: 'FunctionPrototype#add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23addZ_iiiii))(u32, u32, u32, u32);
/* export: 'FunctionPrototype#get:isPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AisPublicZ_ii))(u32);
/* export: 'FunctionPrototype#get:isImplicitlyPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AisImplicitlyPublicZ_ii))(u32);
/* export: 'FunctionPrototype#visibilityEquals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23visibilityEqualsZ_iii))(u32, u32);
/* export: 'FunctionPrototype#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23toStringZ_ii))(u32);
/* export: 'FunctionPrototype#get:declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AdeclarationZ_ii))(u32);
/* export: 'FunctionPrototype#set:declaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23setZ3AdeclarationZ_vii))(u32, u32);
/* export: 'FunctionPrototype#get:isDeclaredInLibrary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AisDeclaredInLibraryZ_ii))(u32);
/* export: 'FunctionPrototype#get:identifierNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AidentifierNodeZ_ii))(u32);
/* export: 'FunctionPrototype#get:identifierAndSignatureRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AidentifierAndSignatureRangeZ_ii))(u32);
/* export: 'FunctionPrototype#get:decoratorNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AdecoratorNodesZ_ii))(u32);
/* export: 'FunctionPrototype#isCompatibleOverride' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23isCompatibleOverrideZ_iii))(u32, u32);
/* export: 'FunctionPrototype#get:operatorKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AoperatorKindZ_ii))(u32);
/* export: 'FunctionPrototype#set:operatorKind' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23setZ3AoperatorKindZ_vii))(u32, u32);
/* export: 'FunctionPrototype#get:instances' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AinstancesZ_ii))(u32);
/* export: 'FunctionPrototype#set:instances' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23setZ3AinstancesZ_vii))(u32, u32);
/* export: 'FunctionPrototype#get:overloads' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AoverloadsZ_ii))(u32);
/* export: 'FunctionPrototype#set:overloads' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23setZ3AoverloadsZ_vii))(u32, u32);
/* export: 'FunctionPrototype#get:typeParameterNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AtypeParameterNodesZ_ii))(u32);
/* export: 'FunctionPrototype#get:functionTypeNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AfunctionTypeNodeZ_ii))(u32);
/* export: 'FunctionPrototype#get:bodyNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AbodyNodeZ_ii))(u32);
/* export: 'FunctionPrototype#get:arrowKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AarrowKindZ_ii))(u32);
/* export: 'FunctionPrototype#get:isBound' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getZ3AisBoundZ_ii))(u32);
/* export: 'FunctionPrototype#toBound' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23toBoundZ_iii))(u32, u32);
/* export: 'FunctionPrototype#getResolvedInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23getResolvedInstanceZ_iii))(u32, u32);
/* export: 'FunctionPrototype#setResolvedInstance' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionPrototypeZ23setResolvedInstanceZ_viii))(u32, u32, u32);
/* export: 'Function' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ_i));
/* export: 'Function#get:parent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AparentZ_ii))(u32);
/* export: 'Function#set:parent' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AparentZ_vii))(u32, u32);
/* export: 'Function#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AflagsZ_ii))(u32);
/* export: 'Function#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'Function#get:decoratorFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AdecoratorFlagsZ_ii))(u32);
/* export: 'Function#set:decoratorFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AdecoratorFlagsZ_vii))(u32, u32);
/* export: 'Function#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AmembersZ_ii))(u32);
/* export: 'Function#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'Function#get:shadowType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AshadowTypeZ_ii))(u32);
/* export: 'Function#set:shadowType' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AshadowTypeZ_vii))(u32, u32);
/* export: 'Function#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AkindZ_ii))(u32);
/* export: 'Function#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'Function#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AnameZ_ii))(u32);
/* export: 'Function#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'Function#get:internalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AinternalNameZ_ii))(u32);
/* export: 'Function#set:internalName' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AinternalNameZ_vii))(u32, u32);
/* export: 'Function#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AprogramZ_ii))(u32);
/* export: 'Function#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'Function#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23constructorZ_iiiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Function#get:file' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AfileZ_ii))(u32);
/* export: 'Function#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23isZ_iii))(u32, u32);
/* export: 'Function#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23isAnyZ_iii))(u32, u32);
/* export: 'Function#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ_vii))(u32, u32);
/* export: 'Function#unset' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23unsetZ_vii))(u32, u32);
/* export: 'Function#hasDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23hasDecoratorZ_iii))(u32, u32);
/* export: 'Function#lookupInSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23lookupInSelfZ_iii))(u32, u32);
/* export: 'Function#lookup' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23lookupZ_iii))(u32, u32);
/* export: 'Function#add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23addZ_iiiii))(u32, u32, u32, u32);
/* export: 'Function#get:isPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AisPublicZ_ii))(u32);
/* export: 'Function#get:isImplicitlyPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AisImplicitlyPublicZ_ii))(u32);
/* export: 'Function#visibilityEquals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23visibilityEqualsZ_iii))(u32, u32);
/* export: 'Function#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23toStringZ_ii))(u32);
/* export: 'Function#get:declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AdeclarationZ_ii))(u32);
/* export: 'Function#set:declaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AdeclarationZ_vii))(u32, u32);
/* export: 'Function#get:isDeclaredInLibrary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AisDeclaredInLibraryZ_ii))(u32);
/* export: 'Function#get:identifierNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AidentifierNodeZ_ii))(u32);
/* export: 'Function#get:identifierAndSignatureRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AidentifierAndSignatureRangeZ_ii))(u32);
/* export: 'Function#get:decoratorNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AdecoratorNodesZ_ii))(u32);
/* export: 'Function#isCompatibleOverride' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23isCompatibleOverrideZ_iii))(u32, u32);
/* export: 'Function#get:type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AtypeZ_ii))(u32);
/* export: 'Function#set:type' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AtypeZ_vii))(u32, u32);
/* export: 'Function#setType' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setTypeZ_vii))(u32, u32);
/* export: 'Function#get:prototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AprototypeZ_ii))(u32);
/* export: 'Function#set:prototype' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AprototypeZ_vii))(u32, u32);
/* export: 'Function#get:signature' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AsignatureZ_ii))(u32);
/* export: 'Function#set:signature' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AsignatureZ_vii))(u32, u32);
/* export: 'Function#get:localsByName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AlocalsByNameZ_ii))(u32);
/* export: 'Function#set:localsByName' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AlocalsByNameZ_vii))(u32, u32);
/* export: 'Function#get:localsByIndex' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AlocalsByIndexZ_ii))(u32);
/* export: 'Function#set:localsByIndex' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AlocalsByIndexZ_vii))(u32, u32);
/* export: 'Function#get:additionalLocals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AadditionalLocalsZ_ii))(u32);
/* export: 'Function#set:additionalLocals' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AadditionalLocalsZ_vii))(u32, u32);
/* export: 'Function#get:typeArguments' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AtypeArgumentsZ_ii))(u32);
/* export: 'Function#set:typeArguments' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AtypeArgumentsZ_vii))(u32, u32);
/* export: 'Function#get:contextualTypeArguments' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AcontextualTypeArgumentsZ_ii))(u32);
/* export: 'Function#set:contextualTypeArguments' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AcontextualTypeArgumentsZ_vii))(u32, u32);
/* export: 'Function#get:flow' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AflowZ_ii))(u32);
/* export: 'Function#set:flow' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AflowZ_vii))(u32, u32);
/* export: 'Function#get:debugLocations' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AdebugLocationsZ_ii))(u32);
/* export: 'Function#set:debugLocations' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AdebugLocationsZ_vii))(u32, u32);
/* export: 'Function#get:ref' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3ArefZ_ii))(u32);
/* export: 'Function#set:ref' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3ArefZ_vii))(u32, u32);
/* export: 'Function#get:varargsStub' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AvarargsStubZ_ii))(u32);
/* export: 'Function#set:varargsStub' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AvarargsStubZ_vii))(u32, u32);
/* export: 'Function#get:virtualStub' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AvirtualStubZ_ii))(u32);
/* export: 'Function#set:virtualStub' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AvirtualStubZ_vii))(u32, u32);
/* export: 'Function#get:memorySegment' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AmemorySegmentZ_ii))(u32);
/* export: 'Function#set:memorySegment' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AmemorySegmentZ_vii))(u32, u32);
/* export: 'Function#get:original' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AoriginalZ_ii))(u32);
/* export: 'Function#set:original' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AoriginalZ_vii))(u32, u32);
/* export: 'Function#get:nextInlineId' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AnextInlineIdZ_ii))(u32);
/* export: 'Function#set:nextInlineId' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AnextInlineIdZ_vii))(u32, u32);
/* export: 'Function#get:nextAnonymousId' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AnextAnonymousIdZ_ii))(u32);
/* export: 'Function#set:nextAnonymousId' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AnextAnonymousIdZ_vii))(u32, u32);
/* export: 'Function#getParameterName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getParameterNameZ_iii))(u32, u32);
/* export: 'Function#newStub' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23newStubZ_iii))(u32, u32);
/* export: 'Function#addLocal' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23addLocalZ_iiiii))(u32, u32, u32, u32);
/* export: 'Function#get:tempI32s' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AtempI32sZ_ii))(u32);
/* export: 'Function#set:tempI32s' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AtempI32sZ_vii))(u32, u32);
/* export: 'Function#get:tempI64s' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AtempI64sZ_ii))(u32);
/* export: 'Function#set:tempI64s' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AtempI64sZ_vii))(u32, u32);
/* export: 'Function#get:tempF32s' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AtempF32sZ_ii))(u32);
/* export: 'Function#set:tempF32s' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AtempF32sZ_vii))(u32, u32);
/* export: 'Function#get:tempF64s' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AtempF64sZ_ii))(u32);
/* export: 'Function#set:tempF64s' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AtempF64sZ_vii))(u32, u32);
/* export: 'Function#get:tempV128s' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AtempV128sZ_ii))(u32);
/* export: 'Function#set:tempV128s' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AtempV128sZ_vii))(u32, u32);
/* export: 'Function#get:tempFuncrefs' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AtempFuncrefsZ_ii))(u32);
/* export: 'Function#set:tempFuncrefs' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AtempFuncrefsZ_vii))(u32, u32);
/* export: 'Function#get:tempExternrefs' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AtempExternrefsZ_ii))(u32);
/* export: 'Function#set:tempExternrefs' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AtempExternrefsZ_vii))(u32, u32);
/* export: 'Function#get:tempExnrefs' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AtempExnrefsZ_ii))(u32);
/* export: 'Function#set:tempExnrefs' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AtempExnrefsZ_vii))(u32, u32);
/* export: 'Function#get:tempAnyrefs' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AtempAnyrefsZ_ii))(u32);
/* export: 'Function#set:tempAnyrefs' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AtempAnyrefsZ_vii))(u32, u32);
/* export: 'Function#get:nextBreakId' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AnextBreakIdZ_ii))(u32);
/* export: 'Function#set:nextBreakId' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AnextBreakIdZ_vii))(u32, u32);
/* export: 'Function#get:breakStack' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AbreakStackZ_ii))(u32);
/* export: 'Function#set:breakStack' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AbreakStackZ_vii))(u32, u32);
/* export: 'Function#get:breakLabel' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FunctionZ23getZ3AbreakLabelZ_ii))(u32);
/* export: 'Function#set:breakLabel' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23setZ3AbreakLabelZ_vii))(u32, u32);
/* export: 'Function#finalize' */
extern void (*WASM_RT_ADD_PREFIX(Z_FunctionZ23finalizeZ_viii))(u32, u32, u32);
/* export: 'FieldPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ_i));
/* export: 'FieldPrototype#get:parent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23getZ3AparentZ_ii))(u32);
/* export: 'FieldPrototype#set:parent' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23setZ3AparentZ_vii))(u32, u32);
/* export: 'FieldPrototype#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23getZ3AflagsZ_ii))(u32);
/* export: 'FieldPrototype#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'FieldPrototype#get:decoratorFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23getZ3AdecoratorFlagsZ_ii))(u32);
/* export: 'FieldPrototype#set:decoratorFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23setZ3AdecoratorFlagsZ_vii))(u32, u32);
/* export: 'FieldPrototype#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23getZ3AmembersZ_ii))(u32);
/* export: 'FieldPrototype#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'FieldPrototype#get:shadowType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23getZ3AshadowTypeZ_ii))(u32);
/* export: 'FieldPrototype#set:shadowType' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23setZ3AshadowTypeZ_vii))(u32, u32);
/* export: 'FieldPrototype#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23getZ3AkindZ_ii))(u32);
/* export: 'FieldPrototype#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'FieldPrototype#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23getZ3AnameZ_ii))(u32);
/* export: 'FieldPrototype#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'FieldPrototype#get:internalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23getZ3AinternalNameZ_ii))(u32);
/* export: 'FieldPrototype#set:internalName' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23setZ3AinternalNameZ_vii))(u32, u32);
/* export: 'FieldPrototype#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23getZ3AprogramZ_ii))(u32);
/* export: 'FieldPrototype#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'FieldPrototype#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'FieldPrototype#get:file' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23getZ3AfileZ_ii))(u32);
/* export: 'FieldPrototype#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23isZ_iii))(u32, u32);
/* export: 'FieldPrototype#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23isAnyZ_iii))(u32, u32);
/* export: 'FieldPrototype#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23setZ_vii))(u32, u32);
/* export: 'FieldPrototype#unset' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23unsetZ_vii))(u32, u32);
/* export: 'FieldPrototype#hasDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23hasDecoratorZ_iii))(u32, u32);
/* export: 'FieldPrototype#lookupInSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23lookupInSelfZ_iii))(u32, u32);
/* export: 'FieldPrototype#lookup' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23lookupZ_iii))(u32, u32);
/* export: 'FieldPrototype#add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23addZ_iiiii))(u32, u32, u32, u32);
/* export: 'FieldPrototype#get:isPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23getZ3AisPublicZ_ii))(u32);
/* export: 'FieldPrototype#get:isImplicitlyPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23getZ3AisImplicitlyPublicZ_ii))(u32);
/* export: 'FieldPrototype#visibilityEquals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23visibilityEqualsZ_iii))(u32, u32);
/* export: 'FieldPrototype#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23toStringZ_ii))(u32);
/* export: 'FieldPrototype#get:declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23getZ3AdeclarationZ_ii))(u32);
/* export: 'FieldPrototype#set:declaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23setZ3AdeclarationZ_vii))(u32, u32);
/* export: 'FieldPrototype#get:isDeclaredInLibrary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23getZ3AisDeclaredInLibraryZ_ii))(u32);
/* export: 'FieldPrototype#get:identifierNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23getZ3AidentifierNodeZ_ii))(u32);
/* export: 'FieldPrototype#get:identifierAndSignatureRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23getZ3AidentifierAndSignatureRangeZ_ii))(u32);
/* export: 'FieldPrototype#get:decoratorNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23getZ3AdecoratorNodesZ_ii))(u32);
/* export: 'FieldPrototype#isCompatibleOverride' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23isCompatibleOverrideZ_iii))(u32, u32);
/* export: 'FieldPrototype#get:typeNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23getZ3AtypeNodeZ_ii))(u32);
/* export: 'FieldPrototype#get:initializerNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23getZ3AinitializerNodeZ_ii))(u32);
/* export: 'FieldPrototype#get:parameterIndex' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldPrototypeZ23getZ3AparameterIndexZ_ii))(u32);
/* export: 'Field' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ_i));
/* export: 'Field#get:parent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AparentZ_ii))(u32);
/* export: 'Field#set:parent' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldZ23setZ3AparentZ_vii))(u32, u32);
/* export: 'Field#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AflagsZ_ii))(u32);
/* export: 'Field#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'Field#get:decoratorFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AdecoratorFlagsZ_ii))(u32);
/* export: 'Field#set:decoratorFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldZ23setZ3AdecoratorFlagsZ_vii))(u32, u32);
/* export: 'Field#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AmembersZ_ii))(u32);
/* export: 'Field#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'Field#get:shadowType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AshadowTypeZ_ii))(u32);
/* export: 'Field#set:shadowType' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldZ23setZ3AshadowTypeZ_vii))(u32, u32);
/* export: 'Field#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AkindZ_ii))(u32);
/* export: 'Field#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'Field#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AnameZ_ii))(u32);
/* export: 'Field#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'Field#get:internalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AinternalNameZ_ii))(u32);
/* export: 'Field#set:internalName' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldZ23setZ3AinternalNameZ_vii))(u32, u32);
/* export: 'Field#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AprogramZ_ii))(u32);
/* export: 'Field#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'Field#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'Field#get:file' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AfileZ_ii))(u32);
/* export: 'Field#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23isZ_iii))(u32, u32);
/* export: 'Field#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23isAnyZ_iii))(u32, u32);
/* export: 'Field#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldZ23setZ_vii))(u32, u32);
/* export: 'Field#unset' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldZ23unsetZ_vii))(u32, u32);
/* export: 'Field#hasDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23hasDecoratorZ_iii))(u32, u32);
/* export: 'Field#lookupInSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23lookupInSelfZ_iii))(u32, u32);
/* export: 'Field#lookup' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23lookupZ_iii))(u32, u32);
/* export: 'Field#add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23addZ_iiiii))(u32, u32, u32, u32);
/* export: 'Field#get:isPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AisPublicZ_ii))(u32);
/* export: 'Field#get:isImplicitlyPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AisImplicitlyPublicZ_ii))(u32);
/* export: 'Field#visibilityEquals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23visibilityEqualsZ_iii))(u32, u32);
/* export: 'Field#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23toStringZ_ii))(u32);
/* export: 'Field#get:declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AdeclarationZ_ii))(u32);
/* export: 'Field#set:declaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldZ23setZ3AdeclarationZ_vii))(u32, u32);
/* export: 'Field#get:isDeclaredInLibrary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AisDeclaredInLibraryZ_ii))(u32);
/* export: 'Field#get:identifierNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AidentifierNodeZ_ii))(u32);
/* export: 'Field#get:identifierAndSignatureRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AidentifierAndSignatureRangeZ_ii))(u32);
/* export: 'Field#get:decoratorNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AdecoratorNodesZ_ii))(u32);
/* export: 'Field#isCompatibleOverride' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23isCompatibleOverrideZ_iii))(u32, u32);
/* export: 'Field#get:type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AtypeZ_ii))(u32);
/* export: 'Field#set:type' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldZ23setZ3AtypeZ_vii))(u32, u32);
/* export: 'Field#setType' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldZ23setTypeZ_vii))(u32, u32);
/* export: 'Field#get:constantValueKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AconstantValueKindZ_ii))(u32);
/* export: 'Field#set:constantValueKind' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldZ23setZ3AconstantValueKindZ_vii))(u32, u32);
/* export: 'Field#get:constantIntegerValue' */
extern u64 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AconstantIntegerValueZ_ji))(u32);
/* export: 'Field#set:constantIntegerValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldZ23setZ3AconstantIntegerValueZ_vij))(u32, u64);
/* export: 'Field#get:constantFloatValue' */
extern f64 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AconstantFloatValueZ_di))(u32);
/* export: 'Field#set:constantFloatValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldZ23setZ3AconstantFloatValueZ_vid))(u32, f64);
/* export: 'Field#get:typeNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AtypeNodeZ_ii))(u32);
/* export: 'Field#get:initializerNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AinitializerNodeZ_ii))(u32);
/* export: 'Field#setConstantIntegerValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldZ23setConstantIntegerValueZ_viji))(u32, u64, u32);
/* export: 'Field#setConstantFloatValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldZ23setConstantFloatValueZ_vidi))(u32, f64, u32);
/* export: 'Field#get:prototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AprototypeZ_ii))(u32);
/* export: 'Field#set:prototype' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldZ23setZ3AprototypeZ_vii))(u32, u32);
/* export: 'Field#get:memoryOffset' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AmemoryOffsetZ_ii))(u32);
/* export: 'Field#set:memoryOffset' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldZ23setZ3AmemoryOffsetZ_vii))(u32, u32);
/* export: 'Field#get:getterRef' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AgetterRefZ_ii))(u32);
/* export: 'Field#set:getterRef' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldZ23setZ3AgetterRefZ_vii))(u32, u32);
/* export: 'Field#get:setterRef' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AsetterRefZ_ii))(u32);
/* export: 'Field#set:setterRef' */
extern void (*WASM_RT_ADD_PREFIX(Z_FieldZ23setZ3AsetterRefZ_vii))(u32, u32);
/* export: 'Field#get:internalGetterName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AinternalGetterNameZ_ii))(u32);
/* export: 'Field#get:internalSetterName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FieldZ23getZ3AinternalSetterNameZ_ii))(u32);
/* export: 'PropertyPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ_i));
/* export: 'PropertyPrototype#get:parent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23getZ3AparentZ_ii))(u32);
/* export: 'PropertyPrototype#set:parent' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23setZ3AparentZ_vii))(u32, u32);
/* export: 'PropertyPrototype#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23getZ3AflagsZ_ii))(u32);
/* export: 'PropertyPrototype#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'PropertyPrototype#get:decoratorFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23getZ3AdecoratorFlagsZ_ii))(u32);
/* export: 'PropertyPrototype#set:decoratorFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23setZ3AdecoratorFlagsZ_vii))(u32, u32);
/* export: 'PropertyPrototype#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23getZ3AmembersZ_ii))(u32);
/* export: 'PropertyPrototype#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'PropertyPrototype#get:shadowType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23getZ3AshadowTypeZ_ii))(u32);
/* export: 'PropertyPrototype#set:shadowType' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23setZ3AshadowTypeZ_vii))(u32, u32);
/* export: 'PropertyPrototype#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23getZ3AkindZ_ii))(u32);
/* export: 'PropertyPrototype#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'PropertyPrototype#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23getZ3AnameZ_ii))(u32);
/* export: 'PropertyPrototype#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'PropertyPrototype#get:internalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23getZ3AinternalNameZ_ii))(u32);
/* export: 'PropertyPrototype#set:internalName' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23setZ3AinternalNameZ_vii))(u32, u32);
/* export: 'PropertyPrototype#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23getZ3AprogramZ_ii))(u32);
/* export: 'PropertyPrototype#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'PropertyPrototype#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'PropertyPrototype#get:file' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23getZ3AfileZ_ii))(u32);
/* export: 'PropertyPrototype#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23isZ_iii))(u32, u32);
/* export: 'PropertyPrototype#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23isAnyZ_iii))(u32, u32);
/* export: 'PropertyPrototype#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23setZ_vii))(u32, u32);
/* export: 'PropertyPrototype#unset' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23unsetZ_vii))(u32, u32);
/* export: 'PropertyPrototype#hasDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23hasDecoratorZ_iii))(u32, u32);
/* export: 'PropertyPrototype#lookupInSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23lookupInSelfZ_iii))(u32, u32);
/* export: 'PropertyPrototype#lookup' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23lookupZ_iii))(u32, u32);
/* export: 'PropertyPrototype#add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23addZ_iiiii))(u32, u32, u32, u32);
/* export: 'PropertyPrototype#get:isPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23getZ3AisPublicZ_ii))(u32);
/* export: 'PropertyPrototype#get:isImplicitlyPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23getZ3AisImplicitlyPublicZ_ii))(u32);
/* export: 'PropertyPrototype#visibilityEquals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23visibilityEqualsZ_iii))(u32, u32);
/* export: 'PropertyPrototype#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23toStringZ_ii))(u32);
/* export: 'PropertyPrototype#get:declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23getZ3AdeclarationZ_ii))(u32);
/* export: 'PropertyPrototype#set:declaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23setZ3AdeclarationZ_vii))(u32, u32);
/* export: 'PropertyPrototype#get:isDeclaredInLibrary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23getZ3AisDeclaredInLibraryZ_ii))(u32);
/* export: 'PropertyPrototype#get:identifierNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23getZ3AidentifierNodeZ_ii))(u32);
/* export: 'PropertyPrototype#get:identifierAndSignatureRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23getZ3AidentifierAndSignatureRangeZ_ii))(u32);
/* export: 'PropertyPrototype#get:decoratorNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23getZ3AdecoratorNodesZ_ii))(u32);
/* export: 'PropertyPrototype#isCompatibleOverride' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23isCompatibleOverrideZ_iii))(u32, u32);
/* export: 'PropertyPrototype#get:getterPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23getZ3AgetterPrototypeZ_ii))(u32);
/* export: 'PropertyPrototype#set:getterPrototype' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23setZ3AgetterPrototypeZ_vii))(u32, u32);
/* export: 'PropertyPrototype#get:setterPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23getZ3AsetterPrototypeZ_ii))(u32);
/* export: 'PropertyPrototype#set:setterPrototype' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23setZ3AsetterPrototypeZ_vii))(u32, u32);
/* export: 'PropertyPrototype#get:instance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23getZ3AinstanceZ_ii))(u32);
/* export: 'PropertyPrototype#set:instance' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23setZ3AinstanceZ_vii))(u32, u32);
/* export: 'PropertyPrototype#get:isBound' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23getZ3AisBoundZ_ii))(u32);
/* export: 'PropertyPrototype#toBound' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyPrototypeZ23toBoundZ_iii))(u32, u32);
/* export: 'Property' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ_i));
/* export: 'Property#get:parent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AparentZ_ii))(u32);
/* export: 'Property#set:parent' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyZ23setZ3AparentZ_vii))(u32, u32);
/* export: 'Property#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AflagsZ_ii))(u32);
/* export: 'Property#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'Property#get:decoratorFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AdecoratorFlagsZ_ii))(u32);
/* export: 'Property#set:decoratorFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyZ23setZ3AdecoratorFlagsZ_vii))(u32, u32);
/* export: 'Property#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AmembersZ_ii))(u32);
/* export: 'Property#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'Property#get:shadowType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AshadowTypeZ_ii))(u32);
/* export: 'Property#set:shadowType' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyZ23setZ3AshadowTypeZ_vii))(u32, u32);
/* export: 'Property#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AkindZ_ii))(u32);
/* export: 'Property#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'Property#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AnameZ_ii))(u32);
/* export: 'Property#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'Property#get:internalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AinternalNameZ_ii))(u32);
/* export: 'Property#set:internalName' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyZ23setZ3AinternalNameZ_vii))(u32, u32);
/* export: 'Property#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AprogramZ_ii))(u32);
/* export: 'Property#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'Property#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'Property#get:file' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AfileZ_ii))(u32);
/* export: 'Property#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23isZ_iii))(u32, u32);
/* export: 'Property#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23isAnyZ_iii))(u32, u32);
/* export: 'Property#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyZ23setZ_vii))(u32, u32);
/* export: 'Property#unset' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyZ23unsetZ_vii))(u32, u32);
/* export: 'Property#hasDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23hasDecoratorZ_iii))(u32, u32);
/* export: 'Property#lookupInSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23lookupInSelfZ_iii))(u32, u32);
/* export: 'Property#lookup' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23lookupZ_iii))(u32, u32);
/* export: 'Property#add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23addZ_iiiii))(u32, u32, u32, u32);
/* export: 'Property#get:isPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AisPublicZ_ii))(u32);
/* export: 'Property#get:isImplicitlyPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AisImplicitlyPublicZ_ii))(u32);
/* export: 'Property#visibilityEquals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23visibilityEqualsZ_iii))(u32, u32);
/* export: 'Property#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23toStringZ_ii))(u32);
/* export: 'Property#get:declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AdeclarationZ_ii))(u32);
/* export: 'Property#set:declaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyZ23setZ3AdeclarationZ_vii))(u32, u32);
/* export: 'Property#get:isDeclaredInLibrary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AisDeclaredInLibraryZ_ii))(u32);
/* export: 'Property#get:identifierNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AidentifierNodeZ_ii))(u32);
/* export: 'Property#get:identifierAndSignatureRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AidentifierAndSignatureRangeZ_ii))(u32);
/* export: 'Property#get:decoratorNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AdecoratorNodesZ_ii))(u32);
/* export: 'Property#isCompatibleOverride' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23isCompatibleOverrideZ_iii))(u32, u32);
/* export: 'Property#get:type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AtypeZ_ii))(u32);
/* export: 'Property#set:type' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyZ23setZ3AtypeZ_vii))(u32, u32);
/* export: 'Property#setType' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyZ23setTypeZ_vii))(u32, u32);
/* export: 'Property#get:constantValueKind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AconstantValueKindZ_ii))(u32);
/* export: 'Property#set:constantValueKind' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyZ23setZ3AconstantValueKindZ_vii))(u32, u32);
/* export: 'Property#get:constantIntegerValue' */
extern u64 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AconstantIntegerValueZ_ji))(u32);
/* export: 'Property#set:constantIntegerValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyZ23setZ3AconstantIntegerValueZ_vij))(u32, u64);
/* export: 'Property#get:constantFloatValue' */
extern f64 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AconstantFloatValueZ_di))(u32);
/* export: 'Property#set:constantFloatValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyZ23setZ3AconstantFloatValueZ_vid))(u32, f64);
/* export: 'Property#get:typeNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AtypeNodeZ_ii))(u32);
/* export: 'Property#get:initializerNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AinitializerNodeZ_ii))(u32);
/* export: 'Property#setConstantIntegerValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyZ23setConstantIntegerValueZ_viji))(u32, u64, u32);
/* export: 'Property#setConstantFloatValue' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyZ23setConstantFloatValueZ_vidi))(u32, f64, u32);
/* export: 'Property#get:prototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AprototypeZ_ii))(u32);
/* export: 'Property#set:prototype' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyZ23setZ3AprototypeZ_vii))(u32, u32);
/* export: 'Property#get:getterInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AgetterInstanceZ_ii))(u32);
/* export: 'Property#set:getterInstance' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyZ23setZ3AgetterInstanceZ_vii))(u32, u32);
/* export: 'Property#get:setterInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_PropertyZ23getZ3AsetterInstanceZ_ii))(u32);
/* export: 'Property#set:setterInstance' */
extern void (*WASM_RT_ADD_PREFIX(Z_PropertyZ23setZ3AsetterInstanceZ_vii))(u32, u32);
/* export: 'IndexSignature' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ_i));
/* export: 'IndexSignature#get:parent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23getZ3AparentZ_ii))(u32);
/* export: 'IndexSignature#set:parent' */
extern void (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23setZ3AparentZ_vii))(u32, u32);
/* export: 'IndexSignature#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23getZ3AflagsZ_ii))(u32);
/* export: 'IndexSignature#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'IndexSignature#get:decoratorFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23getZ3AdecoratorFlagsZ_ii))(u32);
/* export: 'IndexSignature#set:decoratorFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23setZ3AdecoratorFlagsZ_vii))(u32, u32);
/* export: 'IndexSignature#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23getZ3AmembersZ_ii))(u32);
/* export: 'IndexSignature#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'IndexSignature#get:shadowType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23getZ3AshadowTypeZ_ii))(u32);
/* export: 'IndexSignature#set:shadowType' */
extern void (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23setZ3AshadowTypeZ_vii))(u32, u32);
/* export: 'IndexSignature#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23getZ3AkindZ_ii))(u32);
/* export: 'IndexSignature#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'IndexSignature#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23getZ3AnameZ_ii))(u32);
/* export: 'IndexSignature#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'IndexSignature#get:internalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23getZ3AinternalNameZ_ii))(u32);
/* export: 'IndexSignature#set:internalName' */
extern void (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23setZ3AinternalNameZ_vii))(u32, u32);
/* export: 'IndexSignature#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23getZ3AprogramZ_ii))(u32);
/* export: 'IndexSignature#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'IndexSignature#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23constructorZ_iii))(u32, u32);
/* export: 'IndexSignature#get:file' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23getZ3AfileZ_ii))(u32);
/* export: 'IndexSignature#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23isZ_iii))(u32, u32);
/* export: 'IndexSignature#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23isAnyZ_iii))(u32, u32);
/* export: 'IndexSignature#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23setZ_vii))(u32, u32);
/* export: 'IndexSignature#unset' */
extern void (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23unsetZ_vii))(u32, u32);
/* export: 'IndexSignature#hasDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23hasDecoratorZ_iii))(u32, u32);
/* export: 'IndexSignature#lookupInSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23lookupInSelfZ_iii))(u32, u32);
/* export: 'IndexSignature#lookup' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23lookupZ_iii))(u32, u32);
/* export: 'IndexSignature#add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23addZ_iiiii))(u32, u32, u32, u32);
/* export: 'IndexSignature#get:isPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23getZ3AisPublicZ_ii))(u32);
/* export: 'IndexSignature#get:isImplicitlyPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23getZ3AisImplicitlyPublicZ_ii))(u32);
/* export: 'IndexSignature#visibilityEquals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23visibilityEqualsZ_iii))(u32, u32);
/* export: 'IndexSignature#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23toStringZ_ii))(u32);
/* export: 'IndexSignature#get:declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23getZ3AdeclarationZ_ii))(u32);
/* export: 'IndexSignature#set:declaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23setZ3AdeclarationZ_vii))(u32, u32);
/* export: 'IndexSignature#get:isDeclaredInLibrary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23getZ3AisDeclaredInLibraryZ_ii))(u32);
/* export: 'IndexSignature#get:identifierNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23getZ3AidentifierNodeZ_ii))(u32);
/* export: 'IndexSignature#get:identifierAndSignatureRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23getZ3AidentifierAndSignatureRangeZ_ii))(u32);
/* export: 'IndexSignature#get:decoratorNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23getZ3AdecoratorNodesZ_ii))(u32);
/* export: 'IndexSignature#isCompatibleOverride' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23isCompatibleOverrideZ_iii))(u32, u32);
/* export: 'IndexSignature#get:type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23getZ3AtypeZ_ii))(u32);
/* export: 'IndexSignature#set:type' */
extern void (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23setZ3AtypeZ_vii))(u32, u32);
/* export: 'IndexSignature#setType' */
extern void (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23setTypeZ_vii))(u32, u32);
/* export: 'IndexSignature#getGetterInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23getGetterInstanceZ_iii))(u32, u32);
/* export: 'IndexSignature#getSetterInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IndexSignatureZ23getSetterInstanceZ_iii))(u32, u32);
/* export: 'ClassPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ_i));
/* export: 'ClassPrototype#get:parent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AparentZ_ii))(u32);
/* export: 'ClassPrototype#set:parent' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23setZ3AparentZ_vii))(u32, u32);
/* export: 'ClassPrototype#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AflagsZ_ii))(u32);
/* export: 'ClassPrototype#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'ClassPrototype#get:decoratorFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AdecoratorFlagsZ_ii))(u32);
/* export: 'ClassPrototype#set:decoratorFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23setZ3AdecoratorFlagsZ_vii))(u32, u32);
/* export: 'ClassPrototype#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AmembersZ_ii))(u32);
/* export: 'ClassPrototype#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'ClassPrototype#get:shadowType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AshadowTypeZ_ii))(u32);
/* export: 'ClassPrototype#set:shadowType' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23setZ3AshadowTypeZ_vii))(u32, u32);
/* export: 'ClassPrototype#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AkindZ_ii))(u32);
/* export: 'ClassPrototype#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'ClassPrototype#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AnameZ_ii))(u32);
/* export: 'ClassPrototype#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'ClassPrototype#get:internalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AinternalNameZ_ii))(u32);
/* export: 'ClassPrototype#set:internalName' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23setZ3AinternalNameZ_vii))(u32, u32);
/* export: 'ClassPrototype#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AprogramZ_ii))(u32);
/* export: 'ClassPrototype#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'ClassPrototype#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23constructorZ_iiiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'ClassPrototype#get:file' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AfileZ_ii))(u32);
/* export: 'ClassPrototype#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23isZ_iii))(u32, u32);
/* export: 'ClassPrototype#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23isAnyZ_iii))(u32, u32);
/* export: 'ClassPrototype#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23setZ_vii))(u32, u32);
/* export: 'ClassPrototype#unset' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23unsetZ_vii))(u32, u32);
/* export: 'ClassPrototype#hasDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23hasDecoratorZ_iii))(u32, u32);
/* export: 'ClassPrototype#lookupInSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23lookupInSelfZ_iii))(u32, u32);
/* export: 'ClassPrototype#lookup' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23lookupZ_iii))(u32, u32);
/* export: 'ClassPrototype#add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23addZ_iiiii))(u32, u32, u32, u32);
/* export: 'ClassPrototype#get:isPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AisPublicZ_ii))(u32);
/* export: 'ClassPrototype#get:isImplicitlyPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AisImplicitlyPublicZ_ii))(u32);
/* export: 'ClassPrototype#visibilityEquals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23visibilityEqualsZ_iii))(u32, u32);
/* export: 'ClassPrototype#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23toStringZ_ii))(u32);
/* export: 'ClassPrototype#get:declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AdeclarationZ_ii))(u32);
/* export: 'ClassPrototype#set:declaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23setZ3AdeclarationZ_vii))(u32, u32);
/* export: 'ClassPrototype#get:isDeclaredInLibrary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AisDeclaredInLibraryZ_ii))(u32);
/* export: 'ClassPrototype#get:identifierNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AidentifierNodeZ_ii))(u32);
/* export: 'ClassPrototype#get:identifierAndSignatureRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AidentifierAndSignatureRangeZ_ii))(u32);
/* export: 'ClassPrototype#get:decoratorNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AdecoratorNodesZ_ii))(u32);
/* export: 'ClassPrototype#isCompatibleOverride' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23isCompatibleOverrideZ_iii))(u32, u32);
/* export: 'ClassPrototype#get:instanceMembers' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AinstanceMembersZ_ii))(u32);
/* export: 'ClassPrototype#set:instanceMembers' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23setZ3AinstanceMembersZ_vii))(u32, u32);
/* export: 'ClassPrototype#get:basePrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AbasePrototypeZ_ii))(u32);
/* export: 'ClassPrototype#set:basePrototype' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23setZ3AbasePrototypeZ_vii))(u32, u32);
/* export: 'ClassPrototype#get:interfacePrototypes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AinterfacePrototypesZ_ii))(u32);
/* export: 'ClassPrototype#set:interfacePrototypes' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23setZ3AinterfacePrototypesZ_vii))(u32, u32);
/* export: 'ClassPrototype#get:constructorPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AconstructorPrototypeZ_ii))(u32);
/* export: 'ClassPrototype#set:constructorPrototype' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23setZ3AconstructorPrototypeZ_vii))(u32, u32);
/* export: 'ClassPrototype#get:overloadPrototypes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AoverloadPrototypesZ_ii))(u32);
/* export: 'ClassPrototype#set:overloadPrototypes' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23setZ3AoverloadPrototypesZ_vii))(u32, u32);
/* export: 'ClassPrototype#get:instances' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AinstancesZ_ii))(u32);
/* export: 'ClassPrototype#set:instances' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23setZ3AinstancesZ_vii))(u32, u32);
/* export: 'ClassPrototype#get:extendees' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AextendeesZ_ii))(u32);
/* export: 'ClassPrototype#set:extendees' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23setZ3AextendeesZ_vii))(u32, u32);
/* export: 'ClassPrototype#get:typeParameterNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AtypeParameterNodesZ_ii))(u32);
/* export: 'ClassPrototype#get:extendsNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AextendsNodeZ_ii))(u32);
/* export: 'ClassPrototype#get:implementsNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AimplementsNodesZ_ii))(u32);
/* export: 'ClassPrototype#get:isBuiltinArray' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getZ3AisBuiltinArrayZ_ii))(u32);
/* export: 'ClassPrototype#extends' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23extendsZ_iii))(u32, u32);
/* export: 'ClassPrototype#addInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23addInstanceZ_iiii))(u32, u32, u32);
/* export: 'ClassPrototype#getResolvedInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23getResolvedInstanceZ_iii))(u32, u32);
/* export: 'ClassPrototype#setResolvedInstance' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassPrototypeZ23setResolvedInstanceZ_viii))(u32, u32, u32);
/* export: 'Class' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ_i));
/* export: 'Class#get:parent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AparentZ_ii))(u32);
/* export: 'Class#set:parent' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AparentZ_vii))(u32, u32);
/* export: 'Class#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AflagsZ_ii))(u32);
/* export: 'Class#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'Class#get:decoratorFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AdecoratorFlagsZ_ii))(u32);
/* export: 'Class#set:decoratorFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AdecoratorFlagsZ_vii))(u32, u32);
/* export: 'Class#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AmembersZ_ii))(u32);
/* export: 'Class#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'Class#get:shadowType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AshadowTypeZ_ii))(u32);
/* export: 'Class#set:shadowType' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AshadowTypeZ_vii))(u32, u32);
/* export: 'Class#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AkindZ_ii))(u32);
/* export: 'Class#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'Class#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AnameZ_ii))(u32);
/* export: 'Class#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'Class#get:internalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AinternalNameZ_ii))(u32);
/* export: 'Class#set:internalName' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AinternalNameZ_vii))(u32, u32);
/* export: 'Class#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AprogramZ_ii))(u32);
/* export: 'Class#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'Class#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Class#get:file' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AfileZ_ii))(u32);
/* export: 'Class#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23isZ_iii))(u32, u32);
/* export: 'Class#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23isAnyZ_iii))(u32, u32);
/* export: 'Class#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ_vii))(u32, u32);
/* export: 'Class#unset' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23unsetZ_vii))(u32, u32);
/* export: 'Class#hasDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23hasDecoratorZ_iii))(u32, u32);
/* export: 'Class#lookupInSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23lookupInSelfZ_iii))(u32, u32);
/* export: 'Class#lookup' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23lookupZ_iii))(u32, u32);
/* export: 'Class#add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23addZ_iiiii))(u32, u32, u32, u32);
/* export: 'Class#get:isPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AisPublicZ_ii))(u32);
/* export: 'Class#get:isImplicitlyPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AisImplicitlyPublicZ_ii))(u32);
/* export: 'Class#visibilityEquals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23visibilityEqualsZ_iii))(u32, u32);
/* export: 'Class#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23toStringZ_ii))(u32);
/* export: 'Class#get:declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AdeclarationZ_ii))(u32);
/* export: 'Class#set:declaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AdeclarationZ_vii))(u32, u32);
/* export: 'Class#get:isDeclaredInLibrary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AisDeclaredInLibraryZ_ii))(u32);
/* export: 'Class#get:identifierNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AidentifierNodeZ_ii))(u32);
/* export: 'Class#get:identifierAndSignatureRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AidentifierAndSignatureRangeZ_ii))(u32);
/* export: 'Class#get:decoratorNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AdecoratorNodesZ_ii))(u32);
/* export: 'Class#isCompatibleOverride' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23isCompatibleOverrideZ_iii))(u32, u32);
/* export: 'Class#get:type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AtypeZ_ii))(u32);
/* export: 'Class#set:type' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AtypeZ_vii))(u32, u32);
/* export: 'Class#setType' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setTypeZ_vii))(u32, u32);
/* export: 'Class#get:prototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AprototypeZ_ii))(u32);
/* export: 'Class#set:prototype' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AprototypeZ_vii))(u32, u32);
/* export: 'Class#get:typeArguments' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AtypeArgumentsZ_ii))(u32);
/* export: 'Class#set:typeArguments' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AtypeArgumentsZ_vii))(u32, u32);
/* export: 'Class#get:base' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AbaseZ_ii))(u32);
/* export: 'Class#set:base' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AbaseZ_vii))(u32, u32);
/* export: 'Class#get:interfaces' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AinterfacesZ_ii))(u32);
/* export: 'Class#set:interfaces' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AinterfacesZ_vii))(u32, u32);
/* export: 'Class#get:contextualTypeArguments' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AcontextualTypeArgumentsZ_ii))(u32);
/* export: 'Class#set:contextualTypeArguments' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AcontextualTypeArgumentsZ_vii))(u32, u32);
/* export: 'Class#get:nextMemoryOffset' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AnextMemoryOffsetZ_ii))(u32);
/* export: 'Class#set:nextMemoryOffset' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AnextMemoryOffsetZ_vii))(u32, u32);
/* export: 'Class#get:constructorInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AconstructorInstanceZ_ii))(u32);
/* export: 'Class#set:constructorInstance' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AconstructorInstanceZ_vii))(u32, u32);
/* export: 'Class#get:overloads' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AoverloadsZ_ii))(u32);
/* export: 'Class#set:overloads' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AoverloadsZ_vii))(u32, u32);
/* export: 'Class#get:indexSignature' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AindexSignatureZ_ii))(u32);
/* export: 'Class#set:indexSignature' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AindexSignatureZ_vii))(u32, u32);
/* export: 'Class#get:rttiFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3ArttiFlagsZ_ii))(u32);
/* export: 'Class#set:rttiFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3ArttiFlagsZ_vii))(u32, u32);
/* export: 'Class#get:wrappedType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AwrappedTypeZ_ii))(u32);
/* export: 'Class#set:wrappedType' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AwrappedTypeZ_vii))(u32, u32);
/* export: 'Class#get:extendees' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AextendeesZ_ii))(u32);
/* export: 'Class#set:extendees' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AextendeesZ_vii))(u32, u32);
/* export: 'Class#get:implementers' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AimplementersZ_ii))(u32);
/* export: 'Class#set:implementers' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AimplementersZ_vii))(u32, u32);
/* export: 'Class#get:didCheckFieldInitialization' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AdidCheckFieldInitializationZ_ii))(u32);
/* export: 'Class#set:didCheckFieldInitialization' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AdidCheckFieldInitializationZ_vii))(u32, u32);
/* export: 'Class#get:visitRef' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AvisitRefZ_ii))(u32);
/* export: 'Class#set:visitRef' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setZ3AvisitRefZ_vii))(u32, u32);
/* export: 'Class#get:id' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AidZ_ii))(u32);
/* export: 'Class#get:isBuiltinArray' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AisBuiltinArrayZ_ii))(u32);
/* export: 'Class#get:isArrayLike' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getZ3AisArrayLikeZ_ii))(u32);
/* export: 'Class#setBase' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23setBaseZ_vii))(u32, u32);
/* export: 'Class#addInterface' */
extern void (*WASM_RT_ADD_PREFIX(Z_ClassZ23addInterfaceZ_vii))(u32, u32);
/* export: 'Class#isAssignableTo' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23isAssignableToZ_iii))(u32, u32);
/* export: 'Class#lookupOverload' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23lookupOverloadZ_iiii))(u32, u32, u32);
/* export: 'Class#offsetof' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23offsetofZ_iii))(u32, u32);
/* export: 'Class#createBuffer' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23createBufferZ_iii))(u32, u32);
/* export: 'Class#writeField<u32>' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23writeFieldZ3Cu32Z3EZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Class#writeField<i32>' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23writeFieldZ3Ci32Z3EZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Class#writeField<i64>' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23writeFieldZ3Ci64Z3EZ_iiijii))(u32, u32, u64, u32, u32);
/* export: 'Class#extends' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23extendsZ_iii))(u32, u32);
/* export: 'Class#getTypeArgumentsTo' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getTypeArgumentsToZ_iii))(u32, u32);
/* export: 'Class#getArrayValueType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getArrayValueTypeZ_ii))(u32);
/* export: 'Class#getAllExtendees' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ClassZ23getAllExtendeesZ_iiii))(u32, u32, u32);
/* export: 'InterfacePrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ_i));
/* export: 'InterfacePrototype#get:parent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AparentZ_ii))(u32);
/* export: 'InterfacePrototype#set:parent' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23setZ3AparentZ_vii))(u32, u32);
/* export: 'InterfacePrototype#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AflagsZ_ii))(u32);
/* export: 'InterfacePrototype#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'InterfacePrototype#get:decoratorFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AdecoratorFlagsZ_ii))(u32);
/* export: 'InterfacePrototype#set:decoratorFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23setZ3AdecoratorFlagsZ_vii))(u32, u32);
/* export: 'InterfacePrototype#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AmembersZ_ii))(u32);
/* export: 'InterfacePrototype#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'InterfacePrototype#get:shadowType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AshadowTypeZ_ii))(u32);
/* export: 'InterfacePrototype#set:shadowType' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23setZ3AshadowTypeZ_vii))(u32, u32);
/* export: 'InterfacePrototype#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AkindZ_ii))(u32);
/* export: 'InterfacePrototype#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'InterfacePrototype#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AnameZ_ii))(u32);
/* export: 'InterfacePrototype#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'InterfacePrototype#get:internalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AinternalNameZ_ii))(u32);
/* export: 'InterfacePrototype#set:internalName' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23setZ3AinternalNameZ_vii))(u32, u32);
/* export: 'InterfacePrototype#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AprogramZ_ii))(u32);
/* export: 'InterfacePrototype#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'InterfacePrototype#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'InterfacePrototype#get:file' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AfileZ_ii))(u32);
/* export: 'InterfacePrototype#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23isZ_iii))(u32, u32);
/* export: 'InterfacePrototype#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23isAnyZ_iii))(u32, u32);
/* export: 'InterfacePrototype#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23setZ_vii))(u32, u32);
/* export: 'InterfacePrototype#unset' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23unsetZ_vii))(u32, u32);
/* export: 'InterfacePrototype#hasDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23hasDecoratorZ_iii))(u32, u32);
/* export: 'InterfacePrototype#lookupInSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23lookupInSelfZ_iii))(u32, u32);
/* export: 'InterfacePrototype#lookup' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23lookupZ_iii))(u32, u32);
/* export: 'InterfacePrototype#add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23addZ_iiiii))(u32, u32, u32, u32);
/* export: 'InterfacePrototype#get:isPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AisPublicZ_ii))(u32);
/* export: 'InterfacePrototype#get:isImplicitlyPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AisImplicitlyPublicZ_ii))(u32);
/* export: 'InterfacePrototype#visibilityEquals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23visibilityEqualsZ_iii))(u32, u32);
/* export: 'InterfacePrototype#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23toStringZ_ii))(u32);
/* export: 'InterfacePrototype#get:declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AdeclarationZ_ii))(u32);
/* export: 'InterfacePrototype#set:declaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23setZ3AdeclarationZ_vii))(u32, u32);
/* export: 'InterfacePrototype#get:isDeclaredInLibrary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AisDeclaredInLibraryZ_ii))(u32);
/* export: 'InterfacePrototype#get:identifierNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AidentifierNodeZ_ii))(u32);
/* export: 'InterfacePrototype#get:identifierAndSignatureRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AidentifierAndSignatureRangeZ_ii))(u32);
/* export: 'InterfacePrototype#get:decoratorNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AdecoratorNodesZ_ii))(u32);
/* export: 'InterfacePrototype#isCompatibleOverride' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23isCompatibleOverrideZ_iii))(u32, u32);
/* export: 'InterfacePrototype#get:instanceMembers' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AinstanceMembersZ_ii))(u32);
/* export: 'InterfacePrototype#set:instanceMembers' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23setZ3AinstanceMembersZ_vii))(u32, u32);
/* export: 'InterfacePrototype#get:basePrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AbasePrototypeZ_ii))(u32);
/* export: 'InterfacePrototype#set:basePrototype' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23setZ3AbasePrototypeZ_vii))(u32, u32);
/* export: 'InterfacePrototype#get:interfacePrototypes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AinterfacePrototypesZ_ii))(u32);
/* export: 'InterfacePrototype#set:interfacePrototypes' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23setZ3AinterfacePrototypesZ_vii))(u32, u32);
/* export: 'InterfacePrototype#get:constructorPrototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AconstructorPrototypeZ_ii))(u32);
/* export: 'InterfacePrototype#set:constructorPrototype' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23setZ3AconstructorPrototypeZ_vii))(u32, u32);
/* export: 'InterfacePrototype#get:overloadPrototypes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AoverloadPrototypesZ_ii))(u32);
/* export: 'InterfacePrototype#set:overloadPrototypes' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23setZ3AoverloadPrototypesZ_vii))(u32, u32);
/* export: 'InterfacePrototype#get:instances' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AinstancesZ_ii))(u32);
/* export: 'InterfacePrototype#set:instances' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23setZ3AinstancesZ_vii))(u32, u32);
/* export: 'InterfacePrototype#get:extendees' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AextendeesZ_ii))(u32);
/* export: 'InterfacePrototype#set:extendees' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23setZ3AextendeesZ_vii))(u32, u32);
/* export: 'InterfacePrototype#get:typeParameterNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AtypeParameterNodesZ_ii))(u32);
/* export: 'InterfacePrototype#get:extendsNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AextendsNodeZ_ii))(u32);
/* export: 'InterfacePrototype#get:implementsNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AimplementsNodesZ_ii))(u32);
/* export: 'InterfacePrototype#get:isBuiltinArray' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getZ3AisBuiltinArrayZ_ii))(u32);
/* export: 'InterfacePrototype#extends' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23extendsZ_iii))(u32, u32);
/* export: 'InterfacePrototype#addInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23addInstanceZ_iiii))(u32, u32, u32);
/* export: 'InterfacePrototype#getResolvedInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23getResolvedInstanceZ_iii))(u32, u32);
/* export: 'InterfacePrototype#setResolvedInstance' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfacePrototypeZ23setResolvedInstanceZ_viii))(u32, u32, u32);
/* export: 'Interface' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ_i));
/* export: 'Interface#get:parent' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AparentZ_ii))(u32);
/* export: 'Interface#set:parent' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AparentZ_vii))(u32, u32);
/* export: 'Interface#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AflagsZ_ii))(u32);
/* export: 'Interface#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'Interface#get:decoratorFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AdecoratorFlagsZ_ii))(u32);
/* export: 'Interface#set:decoratorFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AdecoratorFlagsZ_vii))(u32, u32);
/* export: 'Interface#get:members' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AmembersZ_ii))(u32);
/* export: 'Interface#set:members' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AmembersZ_vii))(u32, u32);
/* export: 'Interface#get:shadowType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AshadowTypeZ_ii))(u32);
/* export: 'Interface#set:shadowType' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AshadowTypeZ_vii))(u32, u32);
/* export: 'Interface#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AkindZ_ii))(u32);
/* export: 'Interface#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'Interface#get:name' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AnameZ_ii))(u32);
/* export: 'Interface#set:name' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AnameZ_vii))(u32, u32);
/* export: 'Interface#get:internalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AinternalNameZ_ii))(u32);
/* export: 'Interface#set:internalName' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AinternalNameZ_vii))(u32, u32);
/* export: 'Interface#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AprogramZ_ii))(u32);
/* export: 'Interface#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'Interface#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'Interface#get:file' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AfileZ_ii))(u32);
/* export: 'Interface#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23isZ_iii))(u32, u32);
/* export: 'Interface#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23isAnyZ_iii))(u32, u32);
/* export: 'Interface#set' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ_vii))(u32, u32);
/* export: 'Interface#unset' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23unsetZ_vii))(u32, u32);
/* export: 'Interface#hasDecorator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23hasDecoratorZ_iii))(u32, u32);
/* export: 'Interface#lookupInSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23lookupInSelfZ_iii))(u32, u32);
/* export: 'Interface#lookup' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23lookupZ_iii))(u32, u32);
/* export: 'Interface#add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23addZ_iiiii))(u32, u32, u32, u32);
/* export: 'Interface#get:isPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AisPublicZ_ii))(u32);
/* export: 'Interface#get:isImplicitlyPublic' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AisImplicitlyPublicZ_ii))(u32);
/* export: 'Interface#visibilityEquals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23visibilityEqualsZ_iii))(u32, u32);
/* export: 'Interface#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23toStringZ_ii))(u32);
/* export: 'Interface#get:declaration' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AdeclarationZ_ii))(u32);
/* export: 'Interface#set:declaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AdeclarationZ_vii))(u32, u32);
/* export: 'Interface#get:isDeclaredInLibrary' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AisDeclaredInLibraryZ_ii))(u32);
/* export: 'Interface#get:identifierNode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AidentifierNodeZ_ii))(u32);
/* export: 'Interface#get:identifierAndSignatureRange' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AidentifierAndSignatureRangeZ_ii))(u32);
/* export: 'Interface#get:decoratorNodes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AdecoratorNodesZ_ii))(u32);
/* export: 'Interface#isCompatibleOverride' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23isCompatibleOverrideZ_iii))(u32, u32);
/* export: 'Interface#get:type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AtypeZ_ii))(u32);
/* export: 'Interface#set:type' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AtypeZ_vii))(u32, u32);
/* export: 'Interface#setType' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setTypeZ_vii))(u32, u32);
/* export: 'Interface#get:prototype' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AprototypeZ_ii))(u32);
/* export: 'Interface#set:prototype' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AprototypeZ_vii))(u32, u32);
/* export: 'Interface#get:typeArguments' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AtypeArgumentsZ_ii))(u32);
/* export: 'Interface#set:typeArguments' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AtypeArgumentsZ_vii))(u32, u32);
/* export: 'Interface#get:base' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AbaseZ_ii))(u32);
/* export: 'Interface#set:base' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AbaseZ_vii))(u32, u32);
/* export: 'Interface#get:interfaces' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AinterfacesZ_ii))(u32);
/* export: 'Interface#set:interfaces' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AinterfacesZ_vii))(u32, u32);
/* export: 'Interface#get:contextualTypeArguments' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AcontextualTypeArgumentsZ_ii))(u32);
/* export: 'Interface#set:contextualTypeArguments' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AcontextualTypeArgumentsZ_vii))(u32, u32);
/* export: 'Interface#get:nextMemoryOffset' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AnextMemoryOffsetZ_ii))(u32);
/* export: 'Interface#set:nextMemoryOffset' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AnextMemoryOffsetZ_vii))(u32, u32);
/* export: 'Interface#get:constructorInstance' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AconstructorInstanceZ_ii))(u32);
/* export: 'Interface#set:constructorInstance' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AconstructorInstanceZ_vii))(u32, u32);
/* export: 'Interface#get:overloads' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AoverloadsZ_ii))(u32);
/* export: 'Interface#set:overloads' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AoverloadsZ_vii))(u32, u32);
/* export: 'Interface#get:indexSignature' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AindexSignatureZ_ii))(u32);
/* export: 'Interface#set:indexSignature' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AindexSignatureZ_vii))(u32, u32);
/* export: 'Interface#get:rttiFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3ArttiFlagsZ_ii))(u32);
/* export: 'Interface#set:rttiFlags' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3ArttiFlagsZ_vii))(u32, u32);
/* export: 'Interface#get:wrappedType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AwrappedTypeZ_ii))(u32);
/* export: 'Interface#set:wrappedType' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AwrappedTypeZ_vii))(u32, u32);
/* export: 'Interface#get:extendees' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AextendeesZ_ii))(u32);
/* export: 'Interface#set:extendees' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AextendeesZ_vii))(u32, u32);
/* export: 'Interface#get:implementers' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AimplementersZ_ii))(u32);
/* export: 'Interface#set:implementers' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AimplementersZ_vii))(u32, u32);
/* export: 'Interface#get:didCheckFieldInitialization' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AdidCheckFieldInitializationZ_ii))(u32);
/* export: 'Interface#set:didCheckFieldInitialization' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AdidCheckFieldInitializationZ_vii))(u32, u32);
/* export: 'Interface#get:visitRef' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AvisitRefZ_ii))(u32);
/* export: 'Interface#set:visitRef' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setZ3AvisitRefZ_vii))(u32, u32);
/* export: 'Interface#get:id' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AidZ_ii))(u32);
/* export: 'Interface#get:isBuiltinArray' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AisBuiltinArrayZ_ii))(u32);
/* export: 'Interface#get:isArrayLike' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getZ3AisArrayLikeZ_ii))(u32);
/* export: 'Interface#setBase' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23setBaseZ_vii))(u32, u32);
/* export: 'Interface#addInterface' */
extern void (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23addInterfaceZ_vii))(u32, u32);
/* export: 'Interface#isAssignableTo' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23isAssignableToZ_iii))(u32, u32);
/* export: 'Interface#lookupOverload' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23lookupOverloadZ_iiii))(u32, u32, u32);
/* export: 'Interface#offsetof' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23offsetofZ_iii))(u32, u32);
/* export: 'Interface#createBuffer' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23createBufferZ_iii))(u32, u32);
/* export: 'Interface#writeField<u32>' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23writeFieldZ3Cu32Z3EZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Interface#writeField<i32>' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23writeFieldZ3Ci32Z3EZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Interface#writeField<i64>' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23writeFieldZ3Ci64Z3EZ_iiijii))(u32, u32, u64, u32, u32);
/* export: 'Interface#extends' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23extendsZ_iii))(u32, u32);
/* export: 'Interface#getTypeArgumentsTo' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getTypeArgumentsToZ_iii))(u32, u32);
/* export: 'Interface#getArrayValueType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getArrayValueTypeZ_ii))(u32);
/* export: 'Interface#getAllExtendees' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_InterfaceZ23getAllExtendeesZ_iiii))(u32, u32, u32);
/* export: 'mangleInternalName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_mangleInternalNameZ_iiiii))(u32, u32, u32, u32);
/* export: 'getDefaultParameterName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_getDefaultParameterNameZ_ii))(u32);
/* export: 'ReportMode.REPORT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ReportModeZ2EREPORTZ_i));
/* export: 'ReportMode.SWALLOW' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ReportModeZ2ESWALLOWZ_i));
/* export: 'Resolver' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ResolverZ_i));
/* export: 'Resolver#get:diagnostics' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ResolverZ23getZ3AdiagnosticsZ_ii))(u32);
/* export: 'Resolver#set:diagnostics' */
extern void (*WASM_RT_ADD_PREFIX(Z_ResolverZ23setZ3AdiagnosticsZ_vii))(u32, u32);
/* export: 'Resolver#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ResolverZ23constructorZ_iii))(u32, u32);
/* export: 'Resolver#emitDiagnostic' */
extern void (*WASM_RT_ADD_PREFIX(Z_ResolverZ23emitDiagnosticZ_viiiiiiii))(u32, u32, u32, u32, u32, u32, u32, u32);
/* export: 'Resolver#pedantic' */
extern void (*WASM_RT_ADD_PREFIX(Z_ResolverZ23pedanticZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Resolver#pedanticRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_ResolverZ23pedanticRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Resolver#info' */
extern void (*WASM_RT_ADD_PREFIX(Z_ResolverZ23infoZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Resolver#infoRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_ResolverZ23infoRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Resolver#warning' */
extern void (*WASM_RT_ADD_PREFIX(Z_ResolverZ23warningZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Resolver#warningRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_ResolverZ23warningRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Resolver#error' */
extern void (*WASM_RT_ADD_PREFIX(Z_ResolverZ23errorZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Resolver#errorRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_ResolverZ23errorRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Resolver#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ResolverZ23getZ3AprogramZ_ii))(u32);
/* export: 'Resolver#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_ResolverZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'Resolver#get:currentThisExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ResolverZ23getZ3AcurrentThisExpressionZ_ii))(u32);
/* export: 'Resolver#set:currentThisExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ResolverZ23setZ3AcurrentThisExpressionZ_vii))(u32, u32);
/* export: 'Resolver#get:currentElementExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ResolverZ23getZ3AcurrentElementExpressionZ_ii))(u32);
/* export: 'Resolver#set:currentElementExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ResolverZ23setZ3AcurrentElementExpressionZ_vii))(u32, u32);
/* export: 'Resolver#resolveType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ResolverZ23resolveTypeZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Resolver#resolveTypeName' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ResolverZ23resolveTypeNameZ_iiiii))(u32, u32, u32, u32);
/* export: 'Resolver#resolveTypeArguments' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ResolverZ23resolveTypeArgumentsZ_iiiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Resolver#maybeInferCall' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ResolverZ23maybeInferCallZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Resolver#getTypeOfElement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ResolverZ23getTypeOfElementZ_iii))(u32, u32);
/* export: 'Resolver#getElementOfType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ResolverZ23getElementOfTypeZ_iii))(u32, u32);
/* export: 'Resolver#lookupExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ResolverZ23lookupExpressionZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Resolver#resolveExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ResolverZ23resolveExpressionZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Resolver#lookupIdentifierExpression' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ResolverZ23lookupIdentifierExpressionZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Resolver#determineIntegerLiteralType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ResolverZ23determineIntegerLiteralTypeZ_iiji))(u32, u64, u32);
/* export: 'Resolver#resolveFunction' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ResolverZ23resolveFunctionZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Resolver#resolveFunctionInclTypeArguments' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ResolverZ23resolveFunctionInclTypeArgumentsZ_iiiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Resolver#resolveClass' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ResolverZ23resolveClassZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Resolver#resolveClassInclTypeArguments' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ResolverZ23resolveClassInclTypeArgumentsZ_iiiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Resolver#resolveProperty' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ResolverZ23resolvePropertyZ_iiii))(u32, u32, u32);
/* export: 'Token.ABSTRACT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EABSTRACTZ_i));
/* export: 'Token.AS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EASZ_i));
/* export: 'Token.ASYNC' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EASYNCZ_i));
/* export: 'Token.AWAIT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EAWAITZ_i));
/* export: 'Token.BREAK' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EBREAKZ_i));
/* export: 'Token.CASE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ECASEZ_i));
/* export: 'Token.CATCH' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ECATCHZ_i));
/* export: 'Token.CLASS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ECLASSZ_i));
/* export: 'Token.CONST' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ECONSTZ_i));
/* export: 'Token.CONTINUE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ECONTINUEZ_i));
/* export: 'Token.CONSTRUCTOR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ECONSTRUCTORZ_i));
/* export: 'Token.DEBUGGER' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EDEBUGGERZ_i));
/* export: 'Token.DECLARE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EDECLAREZ_i));
/* export: 'Token.DEFAULT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EDEFAULTZ_i));
/* export: 'Token.DELETE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EDELETEZ_i));
/* export: 'Token.DO' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EDOZ_i));
/* export: 'Token.ELSE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EELSEZ_i));
/* export: 'Token.ENUM' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EENUMZ_i));
/* export: 'Token.EXPORT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EEXPORTZ_i));
/* export: 'Token.EXTENDS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EEXTENDSZ_i));
/* export: 'Token.FALSE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EFALSEZ_i));
/* export: 'Token.FINALLY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EFINALLYZ_i));
/* export: 'Token.FOR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EFORZ_i));
/* export: 'Token.FROM' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EFROMZ_i));
/* export: 'Token.FUNCTION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EFUNCTIONZ_i));
/* export: 'Token.GET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EGETZ_i));
/* export: 'Token.IF' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EIFZ_i));
/* export: 'Token.IMPLEMENTS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EIMPLEMENTSZ_i));
/* export: 'Token.IMPORT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EIMPORTZ_i));
/* export: 'Token.IN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EINZ_i));
/* export: 'Token.INSTANCEOF' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EINSTANCEOFZ_i));
/* export: 'Token.INTERFACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EINTERFACEZ_i));
/* export: 'Token.IS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EISZ_i));
/* export: 'Token.KEYOF' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EKEYOFZ_i));
/* export: 'Token.LET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ELETZ_i));
/* export: 'Token.MODULE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EMODULEZ_i));
/* export: 'Token.NAMESPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ENAMESPACEZ_i));
/* export: 'Token.NEW' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ENEWZ_i));
/* export: 'Token.NULL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ENULLZ_i));
/* export: 'Token.OF' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EOFZ_i));
/* export: 'Token.PACKAGE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EPACKAGEZ_i));
/* export: 'Token.PRIVATE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EPRIVATEZ_i));
/* export: 'Token.PROTECTED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EPROTECTEDZ_i));
/* export: 'Token.PUBLIC' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EPUBLICZ_i));
/* export: 'Token.READONLY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EREADONLYZ_i));
/* export: 'Token.RETURN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ERETURNZ_i));
/* export: 'Token.SET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ESETZ_i));
/* export: 'Token.STATIC' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ESTATICZ_i));
/* export: 'Token.SUPER' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ESUPERZ_i));
/* export: 'Token.SWITCH' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ESWITCHZ_i));
/* export: 'Token.THIS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ETHISZ_i));
/* export: 'Token.THROW' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ETHROWZ_i));
/* export: 'Token.TRUE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ETRUEZ_i));
/* export: 'Token.TRY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ETRYZ_i));
/* export: 'Token.TYPE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ETYPEZ_i));
/* export: 'Token.TYPEOF' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ETYPEOFZ_i));
/* export: 'Token.VAR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EVARZ_i));
/* export: 'Token.VOID' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EVOIDZ_i));
/* export: 'Token.WHILE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EWHILEZ_i));
/* export: 'Token.WITH' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EWITHZ_i));
/* export: 'Token.YIELD' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EYIELDZ_i));
/* export: 'Token.OPENBRACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EOPENBRACEZ_i));
/* export: 'Token.CLOSEBRACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ECLOSEBRACEZ_i));
/* export: 'Token.OPENPAREN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EOPENPARENZ_i));
/* export: 'Token.CLOSEPAREN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ECLOSEPARENZ_i));
/* export: 'Token.OPENBRACKET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EOPENBRACKETZ_i));
/* export: 'Token.CLOSEBRACKET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ECLOSEBRACKETZ_i));
/* export: 'Token.DOT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EDOTZ_i));
/* export: 'Token.DOT_DOT_DOT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EDOT_DOT_DOTZ_i));
/* export: 'Token.SEMICOLON' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ESEMICOLONZ_i));
/* export: 'Token.COMMA' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ECOMMAZ_i));
/* export: 'Token.LESSTHAN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ELESSTHANZ_i));
/* export: 'Token.GREATERTHAN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EGREATERTHANZ_i));
/* export: 'Token.LESSTHAN_EQUALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ELESSTHAN_EQUALSZ_i));
/* export: 'Token.GREATERTHAN_EQUALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EGREATERTHAN_EQUALSZ_i));
/* export: 'Token.EQUALS_EQUALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EEQUALS_EQUALSZ_i));
/* export: 'Token.EXCLAMATION_EQUALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EEXCLAMATION_EQUALSZ_i));
/* export: 'Token.EQUALS_EQUALS_EQUALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EEQUALS_EQUALS_EQUALSZ_i));
/* export: 'Token.EXCLAMATION_EQUALS_EQUALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EEXCLAMATION_EQUALS_EQUALSZ_i));
/* export: 'Token.EQUALS_GREATERTHAN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EEQUALS_GREATERTHANZ_i));
/* export: 'Token.PLUS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EPLUSZ_i));
/* export: 'Token.MINUS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EMINUSZ_i));
/* export: 'Token.ASTERISK_ASTERISK' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EASTERISK_ASTERISKZ_i));
/* export: 'Token.ASTERISK' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EASTERISKZ_i));
/* export: 'Token.SLASH' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ESLASHZ_i));
/* export: 'Token.PERCENT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EPERCENTZ_i));
/* export: 'Token.PLUS_PLUS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EPLUS_PLUSZ_i));
/* export: 'Token.MINUS_MINUS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EMINUS_MINUSZ_i));
/* export: 'Token.LESSTHAN_LESSTHAN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ELESSTHAN_LESSTHANZ_i));
/* export: 'Token.GREATERTHAN_GREATERTHAN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EGREATERTHAN_GREATERTHANZ_i));
/* export: 'Token.GREATERTHAN_GREATERTHAN_GREATERTHAN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EGREATERTHAN_GREATERTHAN_GREATERTHANZ_i));
/* export: 'Token.AMPERSAND' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EAMPERSANDZ_i));
/* export: 'Token.BAR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EBARZ_i));
/* export: 'Token.CARET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ECARETZ_i));
/* export: 'Token.EXCLAMATION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EEXCLAMATIONZ_i));
/* export: 'Token.TILDE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ETILDEZ_i));
/* export: 'Token.AMPERSAND_AMPERSAND' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EAMPERSAND_AMPERSANDZ_i));
/* export: 'Token.BAR_BAR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EBAR_BARZ_i));
/* export: 'Token.QUESTION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EQUESTIONZ_i));
/* export: 'Token.COLON' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ECOLONZ_i));
/* export: 'Token.EQUALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EEQUALSZ_i));
/* export: 'Token.PLUS_EQUALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EPLUS_EQUALSZ_i));
/* export: 'Token.MINUS_EQUALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EMINUS_EQUALSZ_i));
/* export: 'Token.ASTERISK_EQUALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EASTERISK_EQUALSZ_i));
/* export: 'Token.ASTERISK_ASTERISK_EQUALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EASTERISK_ASTERISK_EQUALSZ_i));
/* export: 'Token.SLASH_EQUALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ESLASH_EQUALSZ_i));
/* export: 'Token.PERCENT_EQUALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EPERCENT_EQUALSZ_i));
/* export: 'Token.LESSTHAN_LESSTHAN_EQUALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ELESSTHAN_LESSTHAN_EQUALSZ_i));
/* export: 'Token.GREATERTHAN_GREATERTHAN_EQUALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EGREATERTHAN_GREATERTHAN_EQUALSZ_i));
/* export: 'Token.GREATERTHAN_GREATERTHAN_GREATERTHAN_EQUALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EGREATERTHAN_GREATERTHAN_GREATERTHAN_EQUALSZ_i));
/* export: 'Token.AMPERSAND_EQUALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EAMPERSAND_EQUALSZ_i));
/* export: 'Token.BAR_EQUALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EBAR_EQUALSZ_i));
/* export: 'Token.CARET_EQUALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ECARET_EQUALSZ_i));
/* export: 'Token.AT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EATZ_i));
/* export: 'Token.IDENTIFIER' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EIDENTIFIERZ_i));
/* export: 'Token.STRINGLITERAL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2ESTRINGLITERALZ_i));
/* export: 'Token.INTEGERLITERAL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EINTEGERLITERALZ_i));
/* export: 'Token.FLOATLITERAL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EFLOATLITERALZ_i));
/* export: 'Token.INVALID' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EINVALIDZ_i));
/* export: 'Token.ENDOFFILE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenZ2EENDOFFILEZ_i));
/* export: 'IdentifierHandling.DEFAULT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IdentifierHandlingZ2EDEFAULTZ_i));
/* export: 'IdentifierHandling.PREFER' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IdentifierHandlingZ2EPREFERZ_i));
/* export: 'IdentifierHandling.ALWAYS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_IdentifierHandlingZ2EALWAYSZ_i));
/* export: 'tokenFromKeyword' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_tokenFromKeywordZ_ii))(u32);
/* export: 'tokenIsAlsoIdentifier' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_tokenIsAlsoIdentifierZ_ii))(u32);
/* export: 'isIllegalVariableIdentifier' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_isIllegalVariableIdentifierZ_ii))(u32);
/* export: 'operatorTokenToString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_operatorTokenToStringZ_ii))(u32);
/* export: 'Range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RangeZ_i));
/* export: 'Range#get:start' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RangeZ23getZ3AstartZ_ii))(u32);
/* export: 'Range#set:start' */
extern void (*WASM_RT_ADD_PREFIX(Z_RangeZ23setZ3AstartZ_vii))(u32, u32);
/* export: 'Range#get:end' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RangeZ23getZ3AendZ_ii))(u32);
/* export: 'Range#set:end' */
extern void (*WASM_RT_ADD_PREFIX(Z_RangeZ23setZ3AendZ_vii))(u32, u32);
/* export: 'Range#get:source' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RangeZ23getZ3AsourceZ_ii))(u32);
/* export: 'Range#set:source' */
extern void (*WASM_RT_ADD_PREFIX(Z_RangeZ23setZ3AsourceZ_vii))(u32, u32);
/* export: 'Range#get:debugInfoRef' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RangeZ23getZ3AdebugInfoRefZ_ii))(u32);
/* export: 'Range#set:debugInfoRef' */
extern void (*WASM_RT_ADD_PREFIX(Z_RangeZ23setZ3AdebugInfoRefZ_vii))(u32, u32);
/* export: 'Range#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RangeZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'Range#equals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RangeZ23equalsZ_iii))(u32, u32);
/* export: 'Range#get:atStart' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RangeZ23getZ3AatStartZ_ii))(u32);
/* export: 'Range#get:atEnd' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RangeZ23getZ3AatEndZ_ii))(u32);
/* export: 'Range#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RangeZ23toStringZ_ii))(u32);
/* export: 'Range.join' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_RangeZ2EjoinZ_iii))(u32, u32);
/* export: 'Tokenizer' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ_i));
/* export: 'Tokenizer#get:diagnostics' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23getZ3AdiagnosticsZ_ii))(u32);
/* export: 'Tokenizer#set:diagnostics' */
extern void (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23setZ3AdiagnosticsZ_vii))(u32, u32);
/* export: 'Tokenizer#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23constructorZ_iiii))(u32, u32, u32);
/* export: 'Tokenizer#emitDiagnostic' */
extern void (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23emitDiagnosticZ_viiiiiiii))(u32, u32, u32, u32, u32, u32, u32, u32);
/* export: 'Tokenizer#pedantic' */
extern void (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23pedanticZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Tokenizer#pedanticRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23pedanticRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Tokenizer#info' */
extern void (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23infoZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Tokenizer#infoRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23infoRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Tokenizer#warning' */
extern void (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23warningZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Tokenizer#warningRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23warningRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Tokenizer#error' */
extern void (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23errorZ_viiiiii))(u32, u32, u32, u32, u32, u32);
/* export: 'Tokenizer#errorRelated' */
extern void (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23errorRelatedZ_viiiiiii))(u32, u32, u32, u32, u32, u32, u32);
/* export: 'Tokenizer#get:source' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23getZ3AsourceZ_ii))(u32);
/* export: 'Tokenizer#set:source' */
extern void (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23setZ3AsourceZ_vii))(u32, u32);
/* export: 'Tokenizer#get:end' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23getZ3AendZ_ii))(u32);
/* export: 'Tokenizer#set:end' */
extern void (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23setZ3AendZ_vii))(u32, u32);
/* export: 'Tokenizer#get:pos' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23getZ3AposZ_ii))(u32);
/* export: 'Tokenizer#set:pos' */
extern void (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23setZ3AposZ_vii))(u32, u32);
/* export: 'Tokenizer#get:token' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23getZ3AtokenZ_ii))(u32);
/* export: 'Tokenizer#set:token' */
extern void (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23setZ3AtokenZ_vii))(u32, u32);
/* export: 'Tokenizer#get:tokenPos' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23getZ3AtokenPosZ_ii))(u32);
/* export: 'Tokenizer#set:tokenPos' */
extern void (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23setZ3AtokenPosZ_vii))(u32, u32);
/* export: 'Tokenizer#get:nextToken' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23getZ3AnextTokenZ_ii))(u32);
/* export: 'Tokenizer#set:nextToken' */
extern void (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23setZ3AnextTokenZ_vii))(u32, u32);
/* export: 'Tokenizer#get:nextTokenPos' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23getZ3AnextTokenPosZ_ii))(u32);
/* export: 'Tokenizer#set:nextTokenPos' */
extern void (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23setZ3AnextTokenPosZ_vii))(u32, u32);
/* export: 'Tokenizer#get:nextTokenOnNewLine' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23getZ3AnextTokenOnNewLineZ_ii))(u32);
/* export: 'Tokenizer#set:nextTokenOnNewLine' */
extern void (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23setZ3AnextTokenOnNewLineZ_vii))(u32, u32);
/* export: 'Tokenizer#get:onComment' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23getZ3AonCommentZ_ii))(u32);
/* export: 'Tokenizer#set:onComment' */
extern void (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23setZ3AonCommentZ_vii))(u32, u32);
/* export: 'Tokenizer#next' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23nextZ_iii))(u32, u32);
/* export: 'Tokenizer#peek' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23peekZ_iiiii))(u32, u32, u32, u32);
/* export: 'Tokenizer#skipIdentifier' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23skipIdentifierZ_iii))(u32, u32);
/* export: 'Tokenizer#skip' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23skipZ_iiii))(u32, u32, u32);
/* export: 'Tokenizer#mark' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23markZ_ii))(u32);
/* export: 'Tokenizer#discard' */
extern void (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23discardZ_vii))(u32, u32);
/* export: 'Tokenizer#reset' */
extern void (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23resetZ_vii))(u32, u32);
/* export: 'Tokenizer#range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23rangeZ_iiii))(u32, u32, u32);
/* export: 'Tokenizer#readIdentifier' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23readIdentifierZ_ii))(u32);
/* export: 'Tokenizer#readString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23readStringZ_ii))(u32);
/* export: 'Tokenizer#readEscapeSequence' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23readEscapeSequenceZ_ii))(u32);
/* export: 'Tokenizer#readRegexpPattern' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23readRegexpPatternZ_ii))(u32);
/* export: 'Tokenizer#readRegexpFlags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23readRegexpFlagsZ_ii))(u32);
/* export: 'Tokenizer#testInteger' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23testIntegerZ_ii))(u32);
/* export: 'Tokenizer#readInteger' */
extern u64 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23readIntegerZ_ji))(u32);
/* export: 'Tokenizer#readHexInteger' */
extern u64 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23readHexIntegerZ_ji))(u32);
/* export: 'Tokenizer#readDecimalInteger' */
extern u64 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23readDecimalIntegerZ_ji))(u32);
/* export: 'Tokenizer#readOctalInteger' */
extern u64 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23readOctalIntegerZ_ji))(u32);
/* export: 'Tokenizer#readBinaryInteger' */
extern u64 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23readBinaryIntegerZ_ji))(u32);
/* export: 'Tokenizer#readFloat' */
extern f64 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23readFloatZ_di))(u32);
/* export: 'Tokenizer#readDecimalFloat' */
extern f64 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23readDecimalFloatZ_di))(u32);
/* export: 'Tokenizer#readHexFloat' */
extern f64 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23readHexFloatZ_di))(u32);
/* export: 'Tokenizer#readHexadecimalEscape' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23readHexadecimalEscapeZ_iii))(u32, u32);
/* export: 'Tokenizer#readUnicodeEscape' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TokenizerZ23readUnicodeEscapeZ_ii))(u32);
/* export: 'State' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StateZ_i));
/* export: 'State#get:pos' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StateZ23getZ3AposZ_ii))(u32);
/* export: 'State#set:pos' */
extern void (*WASM_RT_ADD_PREFIX(Z_StateZ23setZ3AposZ_vii))(u32, u32);
/* export: 'State#get:token' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StateZ23getZ3AtokenZ_ii))(u32);
/* export: 'State#set:token' */
extern void (*WASM_RT_ADD_PREFIX(Z_StateZ23setZ3AtokenZ_vii))(u32, u32);
/* export: 'State#get:tokenPos' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StateZ23getZ3AtokenPosZ_ii))(u32);
/* export: 'State#set:tokenPos' */
extern void (*WASM_RT_ADD_PREFIX(Z_StateZ23setZ3AtokenPosZ_vii))(u32, u32);
/* export: 'State#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StateZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'TypeKind.I8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeKindZ2EI8Z_i));
/* export: 'TypeKind.I16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeKindZ2EI16Z_i));
/* export: 'TypeKind.I32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeKindZ2EI32Z_i));
/* export: 'TypeKind.I64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeKindZ2EI64Z_i));
/* export: 'TypeKind.ISIZE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeKindZ2EISIZ5AEZ_i));
/* export: 'TypeKind.U8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeKindZ2EU8Z_i));
/* export: 'TypeKind.U16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeKindZ2EU16Z_i));
/* export: 'TypeKind.U32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeKindZ2EU32Z_i));
/* export: 'TypeKind.U64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeKindZ2EU64Z_i));
/* export: 'TypeKind.USIZE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeKindZ2EUSIZ5AEZ_i));
/* export: 'TypeKind.BOOL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeKindZ2EBOOLZ_i));
/* export: 'TypeKind.F32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeKindZ2EF32Z_i));
/* export: 'TypeKind.F64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeKindZ2EF64Z_i));
/* export: 'TypeKind.V128' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeKindZ2EV128Z_i));
/* export: 'TypeKind.FUNCREF' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeKindZ2EFUNCREFZ_i));
/* export: 'TypeKind.EXTERNREF' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeKindZ2EEXTERNREFZ_i));
/* export: 'TypeKind.EXNREF' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeKindZ2EEXNREFZ_i));
/* export: 'TypeKind.ANYREF' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeKindZ2EANYREFZ_i));
/* export: 'TypeKind.VOID' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeKindZ2EVOIDZ_i));
/* export: 'TypeFlags.NONE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeFlagsZ2ENONEZ_i));
/* export: 'TypeFlags.SIGNED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeFlagsZ2ESIGNEDZ_i));
/* export: 'TypeFlags.UNSIGNED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeFlagsZ2EUNSIGNEDZ_i));
/* export: 'TypeFlags.INTEGER' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeFlagsZ2EINTEGERZ_i));
/* export: 'TypeFlags.FLOAT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeFlagsZ2EFLOATZ_i));
/* export: 'TypeFlags.VARYING' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeFlagsZ2EVARYINGZ_i));
/* export: 'TypeFlags.SHORT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeFlagsZ2ESHORTZ_i));
/* export: 'TypeFlags.LONG' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeFlagsZ2ELONGZ_i));
/* export: 'TypeFlags.VALUE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeFlagsZ2EVALUEZ_i));
/* export: 'TypeFlags.REFERENCE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeFlagsZ2EREFERENCEZ_i));
/* export: 'TypeFlags.NULLABLE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeFlagsZ2ENULLABLEZ_i));
/* export: 'TypeFlags.VECTOR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeFlagsZ2EVECTORZ_i));
/* export: 'TypeFlags.EXTERNAL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeFlagsZ2EEXTERNALZ_i));
/* export: 'TypeFlags.CLASS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeFlagsZ2ECLASSZ_i));
/* export: 'TypeFlags.FUNCTION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeFlagsZ2EFUNCTIONZ_i));
/* export: 'Type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ_i));
/* export: 'Type#get:kind' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AkindZ_ii))(u32);
/* export: 'Type#set:kind' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeZ23setZ3AkindZ_vii))(u32, u32);
/* export: 'Type#get:flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AflagsZ_ii))(u32);
/* export: 'Type#set:flags' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeZ23setZ3AflagsZ_vii))(u32, u32);
/* export: 'Type#get:size' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AsizeZ_ii))(u32);
/* export: 'Type#set:size' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeZ23setZ3AsizeZ_vii))(u32, u32);
/* export: 'Type#get:byteSize' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AbyteSizeZ_ii))(u32);
/* export: 'Type#set:byteSize' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeZ23setZ3AbyteSizeZ_vii))(u32, u32);
/* export: 'Type#get:classReference' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AclassReferenceZ_ii))(u32);
/* export: 'Type#set:classReference' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeZ23setZ3AclassReferenceZ_vii))(u32, u32);
/* export: 'Type#get:signatureReference' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AsignatureReferenceZ_ii))(u32);
/* export: 'Type#set:signatureReference' */
extern void (*WASM_RT_ADD_PREFIX(Z_TypeZ23setZ3AsignatureReferenceZ_vii))(u32, u32);
/* export: 'Type#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23constructorZ_iiiii))(u32, u32, u32, u32);
/* export: 'Type#get:intType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AintTypeZ_ii))(u32);
/* export: 'Type#get:exceptVoid' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AexceptVoidZ_ii))(u32);
/* export: 'Type#get:alignLog2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AalignLog2Z_ii))(u32);
/* export: 'Type#get:isValue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AisValueZ_ii))(u32);
/* export: 'Type#get:isIntegerValue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AisIntegerValueZ_ii))(u32);
/* export: 'Type#get:isShortIntegerValue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AisShortIntegerValueZ_ii))(u32);
/* export: 'Type#get:isLongIntegerValue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AisLongIntegerValueZ_ii))(u32);
/* export: 'Type#get:isSignedIntegerValue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AisSignedIntegerValueZ_ii))(u32);
/* export: 'Type#get:isUnsignedIntegerValue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AisUnsignedIntegerValueZ_ii))(u32);
/* export: 'Type#get:isVaryingIntegerValue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AisVaryingIntegerValueZ_ii))(u32);
/* export: 'Type#get:isIntegerInclReference' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AisIntegerInclReferenceZ_ii))(u32);
/* export: 'Type#get:isFloatValue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AisFloatValueZ_ii))(u32);
/* export: 'Type#get:isNumericValue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AisNumericValueZ_ii))(u32);
/* export: 'Type#get:isBooleanValue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AisBooleanValueZ_ii))(u32);
/* export: 'Type#get:isVectorValue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AisVectorValueZ_ii))(u32);
/* export: 'Type#get:isReference' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AisReferenceZ_ii))(u32);
/* export: 'Type#get:isNullableReference' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AisNullableReferenceZ_ii))(u32);
/* export: 'Type#get:isInternalReference' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AisInternalReferenceZ_ii))(u32);
/* export: 'Type#get:isExternalReference' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AisExternalReferenceZ_ii))(u32);
/* export: 'Type#get:isClass' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AisClassZ_ii))(u32);
/* export: 'Type#getClass' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getClassZ_ii))(u32);
/* export: 'Type#getClassOrWrapper' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getClassOrWrapperZ_iii))(u32, u32);
/* export: 'Type#get:isFunction' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AisFunctionZ_ii))(u32);
/* export: 'Type#getSignature' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getSignatureZ_ii))(u32);
/* export: 'Type#get:isManaged' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AisManagedZ_ii))(u32);
/* export: 'Type#get:isUnmanaged' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AisUnmanagedZ_ii))(u32);
/* export: 'Type#get:nonNullableType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AnonNullableTypeZ_ii))(u32);
/* export: 'Type#get:nullableType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23getZ3AnullableTypeZ_ii))(u32);
/* export: 'Type#computeSmallIntegerShift' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23computeSmallIntegerShiftZ_iii))(u32, u32);
/* export: 'Type#computeSmallIntegerMask' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23computeSmallIntegerMaskZ_iii))(u32, u32);
/* export: 'Type#is' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23isZ_iii))(u32, u32);
/* export: 'Type#isAny' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23isAnyZ_iii))(u32, u32);
/* export: 'Type#asNullable' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23asNullableZ_ii))(u32);
/* export: 'Type#equals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23equalsZ_iii))(u32, u32);
/* export: 'Type#isAssignableTo' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23isAssignableToZ_iiii))(u32, u32, u32);
/* export: 'Type#isStrictlyAssignableTo' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23isStrictlyAssignableToZ_iiii))(u32, u32, u32);
/* export: 'Type#isChangeableTo' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23isChangeableToZ_iii))(u32, u32);
/* export: 'Type#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23toStringZ_iii))(u32, u32);
/* export: 'Type#toNativeType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ23toNativeTypeZ_ii))(u32);
/* export: 'Type.commonDenominator' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ2EcommonDenominatorZ_iiii))(u32, u32, u32);
/* export: 'Type.i8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ2Ei8Z_i));
/* export: 'Type.i16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ2Ei16Z_i));
/* export: 'Type.i32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ2Ei32Z_i));
/* export: 'Type.i64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ2Ei64Z_i));
/* export: 'Type.isize32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ2Eisize32Z_i));
/* export: 'Type.isize64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ2Eisize64Z_i));
/* export: 'Type.u8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ2Eu8Z_i));
/* export: 'Type.u16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ2Eu16Z_i));
/* export: 'Type.u32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ2Eu32Z_i));
/* export: 'Type.u64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ2Eu64Z_i));
/* export: 'Type.usize32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ2Eusize32Z_i));
/* export: 'Type.usize64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ2Eusize64Z_i));
/* export: 'Type.bool' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ2EboolZ_i));
/* export: 'Type.f32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ2Ef32Z_i));
/* export: 'Type.f64' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ2Ef64Z_i));
/* export: 'Type.v128' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ2Ev128Z_i));
/* export: 'Type.funcref' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ2EfuncrefZ_i));
/* export: 'Type.externref' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ2EexternrefZ_i));
/* export: 'Type.exnref' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ2EexnrefZ_i));
/* export: 'Type.anyref' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ2EanyrefZ_i));
/* export: 'Type.void' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ2EvoidZ_i));
/* export: 'Type.auto' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TypeZ2EautoZ_i));
/* export: 'typesToNativeTypes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_typesToNativeTypesZ_ii))(u32);
/* export: 'typesToString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_typesToStringZ_ii))(u32);
/* export: 'Signature' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SignatureZ_i));
/* export: 'Signature#get:id' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SignatureZ23getZ3AidZ_ii))(u32);
/* export: 'Signature#set:id' */
extern void (*WASM_RT_ADD_PREFIX(Z_SignatureZ23setZ3AidZ_vii))(u32, u32);
/* export: 'Signature#get:parameterTypes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SignatureZ23getZ3AparameterTypesZ_ii))(u32);
/* export: 'Signature#set:parameterTypes' */
extern void (*WASM_RT_ADD_PREFIX(Z_SignatureZ23setZ3AparameterTypesZ_vii))(u32, u32);
/* export: 'Signature#get:requiredParameters' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SignatureZ23getZ3ArequiredParametersZ_ii))(u32);
/* export: 'Signature#set:requiredParameters' */
extern void (*WASM_RT_ADD_PREFIX(Z_SignatureZ23setZ3ArequiredParametersZ_vii))(u32, u32);
/* export: 'Signature#get:returnType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SignatureZ23getZ3AreturnTypeZ_ii))(u32);
/* export: 'Signature#set:returnType' */
extern void (*WASM_RT_ADD_PREFIX(Z_SignatureZ23setZ3AreturnTypeZ_vii))(u32, u32);
/* export: 'Signature#get:thisType' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SignatureZ23getZ3AthisTypeZ_ii))(u32);
/* export: 'Signature#set:thisType' */
extern void (*WASM_RT_ADD_PREFIX(Z_SignatureZ23setZ3AthisTypeZ_vii))(u32, u32);
/* export: 'Signature#get:hasRest' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SignatureZ23getZ3AhasRestZ_ii))(u32);
/* export: 'Signature#set:hasRest' */
extern void (*WASM_RT_ADD_PREFIX(Z_SignatureZ23setZ3AhasRestZ_vii))(u32, u32);
/* export: 'Signature#get:type' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SignatureZ23getZ3AtypeZ_ii))(u32);
/* export: 'Signature#set:type' */
extern void (*WASM_RT_ADD_PREFIX(Z_SignatureZ23setZ3AtypeZ_vii))(u32, u32);
/* export: 'Signature#get:program' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SignatureZ23getZ3AprogramZ_ii))(u32);
/* export: 'Signature#set:program' */
extern void (*WASM_RT_ADD_PREFIX(Z_SignatureZ23setZ3AprogramZ_vii))(u32, u32);
/* export: 'Signature#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SignatureZ23constructorZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'Signature#get:nativeParams' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SignatureZ23getZ3AnativeParamsZ_ii))(u32);
/* export: 'Signature#get:nativeResults' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SignatureZ23getZ3AnativeResultsZ_ii))(u32);
/* export: 'Signature#equals' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SignatureZ23equalsZ_iii))(u32, u32);
/* export: 'Signature#isAssignableTo' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SignatureZ23isAssignableToZ_iiii))(u32, u32, u32);
/* export: 'Signature#toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SignatureZ23toStringZ_iii))(u32, u32);
/* export: 'Signature#clone' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_SignatureZ23cloneZ_ii))(u32);
/* export: 'ASTBuilder' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ_i));
/* export: 'ASTBuilder#visitNode' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitNodeZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitSource' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitSourceZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitTypeNode' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitTypeNodeZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitTypeName' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitTypeNameZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitNamedTypeNode' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitNamedTypeNodeZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitFunctionTypeNode' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitFunctionTypeNodeZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitTypeParameter' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitTypeParameterZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitIdentifierExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitIdentifierExpressionZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitArrayLiteralExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitArrayLiteralExpressionZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitObjectLiteralExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitObjectLiteralExpressionZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitAssertionExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitAssertionExpressionZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitBinaryExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitBinaryExpressionZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitCallExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitCallExpressionZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitClassExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitClassExpressionZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitCommaExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitCommaExpressionZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitElementAccessExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitElementAccessExpressionZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitFunctionExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitFunctionExpressionZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitLiteralExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitLiteralExpressionZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitFloatLiteralExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitFloatLiteralExpressionZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitInstanceOfExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitInstanceOfExpressionZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitIntegerLiteralExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitIntegerLiteralExpressionZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitStringLiteral' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitStringLiteralZ_viii))(u32, u32, u32);
/* export: 'ASTBuilder#visitStringLiteralExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitStringLiteralExpressionZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitRegexpLiteralExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitRegexpLiteralExpressionZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitNewExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitNewExpressionZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitParenthesizedExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitParenthesizedExpressionZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitPropertyAccessExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitPropertyAccessExpressionZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitTernaryExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitTernaryExpressionZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitUnaryExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitUnaryExpressionZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitUnaryPostfixExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitUnaryPostfixExpressionZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitUnaryPrefixExpression' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitUnaryPrefixExpressionZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitNodeAndTerminate' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitNodeAndTerminateZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitBlockStatement' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitBlockStatementZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitBreakStatement' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitBreakStatementZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitContinueStatement' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitContinueStatementZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitClassDeclaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitClassDeclarationZ_viii))(u32, u32, u32);
/* export: 'ASTBuilder#visitDoStatement' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitDoStatementZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitEmptyStatement' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitEmptyStatementZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitEnumDeclaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitEnumDeclarationZ_viii))(u32, u32, u32);
/* export: 'ASTBuilder#visitEnumValueDeclaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitEnumValueDeclarationZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitExportImportStatement' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitExportImportStatementZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitExportMember' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitExportMemberZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitExportStatement' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitExportStatementZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitExportDefaultStatement' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitExportDefaultStatementZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitExpressionStatement' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitExpressionStatementZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitFieldDeclaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitFieldDeclarationZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitForStatement' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitForStatementZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitForOfStatement' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitForOfStatementZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitFunctionDeclaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitFunctionDeclarationZ_viii))(u32, u32, u32);
/* export: 'ASTBuilder#visitFunctionCommon' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitFunctionCommonZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitIfStatement' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitIfStatementZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitImportDeclaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitImportDeclarationZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitImportStatement' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitImportStatementZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitIndexSignature' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitIndexSignatureZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitInterfaceDeclaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitInterfaceDeclarationZ_viii))(u32, u32, u32);
/* export: 'ASTBuilder#visitMethodDeclaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitMethodDeclarationZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitNamespaceDeclaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitNamespaceDeclarationZ_viii))(u32, u32, u32);
/* export: 'ASTBuilder#visitReturnStatement' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitReturnStatementZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitSwitchCase' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitSwitchCaseZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitSwitchStatement' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitSwitchStatementZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitThrowStatement' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitThrowStatementZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitTryStatement' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitTryStatementZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitTypeDeclaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitTypeDeclarationZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitVariableDeclaration' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitVariableDeclarationZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitVariableStatement' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitVariableStatementZ_vii))(u32, u32);
/* export: 'ASTBuilder#visitWhileStatement' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23visitWhileStatementZ_vii))(u32, u32);
/* export: 'ASTBuilder#serializeDecorator' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23serializeDecoratorZ_vii))(u32, u32);
/* export: 'ASTBuilder#serializeParameter' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23serializeParameterZ_vii))(u32, u32);
/* export: 'ASTBuilder#serializeExternalModifiers' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23serializeExternalModifiersZ_vii))(u32, u32);
/* export: 'ASTBuilder#serializeAccessModifiers' */
extern void (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23serializeAccessModifiersZ_vii))(u32, u32);
/* export: 'ASTBuilder#finish' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23finishZ_ii))(u32);
/* export: 'ASTBuilder#constructor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ23constructorZ_ii))(u32);
/* export: 'ASTBuilder.build' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ASTBuilderZ2EbuildZ_ii))(u32);
/* export: 'readI8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_readI8Z_iii))(u32, u32);
/* export: 'writeI8' */
extern void (*WASM_RT_ADD_PREFIX(Z_writeI8Z_viii))(u32, u32, u32);
/* export: 'readI16' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_readI16Z_iii))(u32, u32);
/* export: 'writeI16' */
extern void (*WASM_RT_ADD_PREFIX(Z_writeI16Z_viii))(u32, u32, u32);
/* export: 'readI32' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_readI32Z_iii))(u32, u32);
/* export: 'writeI32' */
extern void (*WASM_RT_ADD_PREFIX(Z_writeI32Z_viii))(u32, u32, u32);
/* export: 'writeI32AsI64' */
extern void (*WASM_RT_ADD_PREFIX(Z_writeI32AsI64Z_viiii))(u32, u32, u32, u32);
/* export: 'readI64' */
extern u64 (*WASM_RT_ADD_PREFIX(Z_readI64Z_jii))(u32, u32);
/* export: 'writeI64' */
extern void (*WASM_RT_ADD_PREFIX(Z_writeI64Z_vjii))(u64, u32, u32);
/* export: 'writeI64AsI32' */
extern void (*WASM_RT_ADD_PREFIX(Z_writeI64AsI32Z_vjiii))(u64, u32, u32, u32);
/* export: 'readF32' */
extern f32 (*WASM_RT_ADD_PREFIX(Z_readF32Z_fii))(u32, u32);
/* export: 'writeF32' */
extern void (*WASM_RT_ADD_PREFIX(Z_writeF32Z_vfii))(f32, u32, u32);
/* export: 'readF64' */
extern f64 (*WASM_RT_ADD_PREFIX(Z_readF64Z_dii))(u32, u32);
/* export: 'writeF64' */
extern void (*WASM_RT_ADD_PREFIX(Z_writeF64Z_vdii))(f64, u32, u32);
/* export: 'uniqueMap<~lib/string/String,src/types/Type>' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_uniqueMapZ3CZ7ElibZ2FstringZ2FStringZ2CsrcZ2FtypesZ2FTypeZ3EZ_iii))(u32, u32);
/* export: 'uniqueMap<src/program/Field,i32>' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_uniqueMapZ3CsrcZ2FprogramZ2FFieldZ2Ci32Z3EZ_iii))(u32, u32);
/* export: 'isPowerOf2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_isPowerOf2Z_ii))(u32);
/* export: 'normalizePath' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_normalizePathZ_ii))(u32);
/* export: 'resolvePath' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_resolvePathZ_iii))(u32, u32);
/* export: 'dirname' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_dirnameZ_ii))(u32);
/* export: 'COLOR_GRAY' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_COLOR_GRAYZ_i));
/* export: 'COLOR_RED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_COLOR_REDZ_i));
/* export: 'COLOR_GREEN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_COLOR_GREENZ_i));
/* export: 'COLOR_YELLOW' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_COLOR_YELLOWZ_i));
/* export: 'COLOR_BLUE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_COLOR_BLUEZ_i));
/* export: 'COLOR_MAGENTA' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_COLOR_MAGENTAZ_i));
/* export: 'COLOR_CYAN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_COLOR_CYANZ_i));
/* export: 'COLOR_WHITE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_COLOR_WHITEZ_i));
/* export: 'COLOR_RESET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_COLOR_RESETZ_i));
/* export: 'isColorsEnabled' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_isColorsEnabledZ_iv))(void);
/* export: 'setColorsEnabled' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_setColorsEnabledZ_ii))(u32);
/* export: 'colorize' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_colorizeZ_iii))(u32, u32);
/* export: 'CharCode.NULL' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ENULLZ_i));
/* export: 'CharCode.LINEFEED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ELINEFEEDZ_i));
/* export: 'CharCode.CARRIAGERETURN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ECARRIAGERETURNZ_i));
/* export: 'CharCode.LINESEPARATOR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ELINESEPARATORZ_i));
/* export: 'CharCode.PARAGRAPHSEPARATOR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EPARAGRAPHSEPARATORZ_i));
/* export: 'CharCode.NEXTLINE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ENEXTLINEZ_i));
/* export: 'CharCode.SPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ESPACEZ_i));
/* export: 'CharCode.NONBREAKINGSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ENONBREAKINGSPACEZ_i));
/* export: 'CharCode.ENQUAD' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EENQUADZ_i));
/* export: 'CharCode.EMQUAD' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EEMQUADZ_i));
/* export: 'CharCode.ENSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EENSPACEZ_i));
/* export: 'CharCode.EMSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EEMSPACEZ_i));
/* export: 'CharCode.THREEPEREMSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ETHREEPEREMSPACEZ_i));
/* export: 'CharCode.FOURPEREMSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EFOURPEREMSPACEZ_i));
/* export: 'CharCode.SIXPEREMSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ESIXPEREMSPACEZ_i));
/* export: 'CharCode.FIGURESPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EFIGURESPACEZ_i));
/* export: 'CharCode.PUNCTUATIONSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EPUNCTUATIONSPACEZ_i));
/* export: 'CharCode.THINSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ETHINSPACEZ_i));
/* export: 'CharCode.HAIRSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EHAIRSPACEZ_i));
/* export: 'CharCode.ZEROWIDTHSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EZ5AEROWIDTHSPACEZ_i));
/* export: 'CharCode.NARROWNOBREAKSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ENARROWNOBREAKSPACEZ_i));
/* export: 'CharCode.IDEOGRAPHICSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EIDEOGRAPHICSPACEZ_i));
/* export: 'CharCode.MATHEMATICALSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EMATHEMATICALSPACEZ_i));
/* export: 'CharCode.OGHAM' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EOGHAMZ_i));
/* export: 'CharCode._' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2E_Z_i));
/* export: 'CharCode._0' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2E_0Z_i));
/* export: 'CharCode._1' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2E_1Z_i));
/* export: 'CharCode._2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2E_2Z_i));
/* export: 'CharCode._3' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2E_3Z_i));
/* export: 'CharCode._4' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2E_4Z_i));
/* export: 'CharCode._5' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2E_5Z_i));
/* export: 'CharCode._6' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2E_6Z_i));
/* export: 'CharCode._7' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2E_7Z_i));
/* export: 'CharCode._8' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2E_8Z_i));
/* export: 'CharCode._9' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2E_9Z_i));
/* export: 'CharCode.a' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EaZ_i));
/* export: 'CharCode.b' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EbZ_i));
/* export: 'CharCode.c' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EcZ_i));
/* export: 'CharCode.d' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EdZ_i));
/* export: 'CharCode.e' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EeZ_i));
/* export: 'CharCode.f' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EfZ_i));
/* export: 'CharCode.g' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EgZ_i));
/* export: 'CharCode.h' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EhZ_i));
/* export: 'CharCode.i' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EiZ_i));
/* export: 'CharCode.j' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EjZ_i));
/* export: 'CharCode.k' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EkZ_i));
/* export: 'CharCode.l' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ElZ_i));
/* export: 'CharCode.m' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EmZ_i));
/* export: 'CharCode.n' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EnZ_i));
/* export: 'CharCode.o' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EoZ_i));
/* export: 'CharCode.p' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EpZ_i));
/* export: 'CharCode.q' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EqZ_i));
/* export: 'CharCode.r' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ErZ_i));
/* export: 'CharCode.s' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EsZ_i));
/* export: 'CharCode.t' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EtZ_i));
/* export: 'CharCode.u' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EuZ_i));
/* export: 'CharCode.v' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EvZ_i));
/* export: 'CharCode.w' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EwZ_i));
/* export: 'CharCode.x' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ExZ_i));
/* export: 'CharCode.y' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EyZ_i));
/* export: 'CharCode.z' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EzZ_i));
/* export: 'CharCode.A' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EAZ_i));
/* export: 'CharCode.B' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EBZ_i));
/* export: 'CharCode.C' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ECZ_i));
/* export: 'CharCode.D' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EDZ_i));
/* export: 'CharCode.E' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EEZ_i));
/* export: 'CharCode.F' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EFZ_i));
/* export: 'CharCode.G' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EGZ_i));
/* export: 'CharCode.H' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EHZ_i));
/* export: 'CharCode.I' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EIZ_i));
/* export: 'CharCode.J' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EJZ_i));
/* export: 'CharCode.K' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EKZ_i));
/* export: 'CharCode.L' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ELZ_i));
/* export: 'CharCode.M' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EMZ_i));
/* export: 'CharCode.N' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ENZ_i));
/* export: 'CharCode.O' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EOZ_i));
/* export: 'CharCode.P' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EPZ_i));
/* export: 'CharCode.Q' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EQZ_i));
/* export: 'CharCode.R' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ERZ_i));
/* export: 'CharCode.S' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ESZ_i));
/* export: 'CharCode.T' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ETZ_i));
/* export: 'CharCode.U' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EUZ_i));
/* export: 'CharCode.V' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EVZ_i));
/* export: 'CharCode.W' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EWZ_i));
/* export: 'CharCode.X' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EXZ_i));
/* export: 'CharCode.Y' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EYZ_i));
/* export: 'CharCode.Z' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EZ5AZ_i));
/* export: 'CharCode.AMPERSAND' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EAMPERSANDZ_i));
/* export: 'CharCode.ASTERISK' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EASTERISKZ_i));
/* export: 'CharCode.AT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EATZ_i));
/* export: 'CharCode.BACKSLASH' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EBACKSLASHZ_i));
/* export: 'CharCode.BACKTICK' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EBACKTICKZ_i));
/* export: 'CharCode.BAR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EBARZ_i));
/* export: 'CharCode.CARET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ECARETZ_i));
/* export: 'CharCode.CLOSEBRACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ECLOSEBRACEZ_i));
/* export: 'CharCode.CLOSEBRACKET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ECLOSEBRACKETZ_i));
/* export: 'CharCode.CLOSEPAREN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ECLOSEPARENZ_i));
/* export: 'CharCode.COLON' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ECOLONZ_i));
/* export: 'CharCode.COMMA' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ECOMMAZ_i));
/* export: 'CharCode.DOLLAR' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EDOLLARZ_i));
/* export: 'CharCode.DOT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EDOTZ_i));
/* export: 'CharCode.DOUBLEQUOTE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EDOUBLEQUOTEZ_i));
/* export: 'CharCode.EQUALS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EEQUALSZ_i));
/* export: 'CharCode.EXCLAMATION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EEXCLAMATIONZ_i));
/* export: 'CharCode.GREATERTHAN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EGREATERTHANZ_i));
/* export: 'CharCode.HASH' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EHASHZ_i));
/* export: 'CharCode.LESSTHAN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ELESSTHANZ_i));
/* export: 'CharCode.MINUS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EMINUSZ_i));
/* export: 'CharCode.OPENBRACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EOPENBRACEZ_i));
/* export: 'CharCode.OPENBRACKET' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EOPENBRACKETZ_i));
/* export: 'CharCode.OPENPAREN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EOPENPARENZ_i));
/* export: 'CharCode.PERCENT' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EPERCENTZ_i));
/* export: 'CharCode.PLUS' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EPLUSZ_i));
/* export: 'CharCode.QUESTION' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EQUESTIONZ_i));
/* export: 'CharCode.SEMICOLON' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ESEMICOLONZ_i));
/* export: 'CharCode.SINGLEQUOTE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ESINGLEQUOTEZ_i));
/* export: 'CharCode.SLASH' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ESLASHZ_i));
/* export: 'CharCode.TILDE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ETILDEZ_i));
/* export: 'CharCode.BACKSPACE' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EBACKSPACEZ_i));
/* export: 'CharCode.FORMFEED' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EFORMFEEDZ_i));
/* export: 'CharCode.BYTEORDERMARK' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EBYTEORDERMARKZ_i));
/* export: 'CharCode.TAB' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2ETABZ_i));
/* export: 'CharCode.VERTICALTAB' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_CharCodeZ2EVERTICALTABZ_i));
/* export: 'isLineBreak' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_isLineBreakZ_ii))(u32);
/* export: 'isWhiteSpace' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_isWhiteSpaceZ_ii))(u32);
/* export: 'isDecimalDigit' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_isDecimalDigitZ_ii))(u32);
/* export: 'isOctalDigit' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_isOctalDigitZ_ii))(u32);
/* export: 'isTrivialAlphanum' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_isTrivialAlphanumZ_ii))(u32);
/* export: 'isIdentifierStart' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_isIdentifierStartZ_ii))(u32);
/* export: 'isKeywordCharacter' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_isKeywordCharacterZ_ii))(u32);
/* export: 'isIdentifierPart' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_isIdentifierPartZ_ii))(u32);
/* export: 'indent' */
extern void (*WASM_RT_ADD_PREFIX(Z_indentZ_vii))(u32, u32);
/* export: 'v128_zero' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_v128_zeroZ_i));
/* export: '__setArgumentsLength' */
extern void (*WASM_RT_ADD_PREFIX(Z___setArgumentsLengthZ_vi))(u32);
#ifdef __cplusplus
}
#endif

#endif  /* SRC_ASSEMBLYSCRIPT_H_GENERATED_ */
